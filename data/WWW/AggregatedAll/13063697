Rewriting_VBG queries_NNS on_IN SPARQL_NN views_NNS
The_DT problem_NN of_IN answering_VBG SPARQL_NN queries_NNS over_IN virtual_JJ SPARQL_NN views_NNS is_VBZ commonly_RB encountered_VBN in_IN a_DT number_NN of_IN settings_NNS ,_, including_VBG while_IN enforcing_VBG security_NN policies_NNS to_TO access_VB RDF_NNP data_NNS ,_, or_CC when_WRB integrating_VBG RDF_NNP data_NNS from_IN disparate_JJ sources_NNS ._.
We_PRP approach_VBP this_DT problem_NN by_IN rewriting_VBG SPARQL_NN queries_NNS over_IN the_DT views_NNS to_TO equivalent_JJ queries_NNS over_IN the_DT underlying_VBG RDF_NNP data_NNS ,_, thus_RB avoiding_VBG the_DT costs_NNS entailed_VBN by_IN view_NN materialization_NN and_CC maintenance_NN ._.
We_PRP show_VBP that_IN SPARQL_FW query_FW rewriting_VBG combines_NNS the_DT most_RBS challenging_JJ aspects_NNS of_IN rewriting_VBG for_IN the_DT relational_NN and_CC XML_NN cases_NNS :_: like_IN the_DT relational_JJ case_NN ,_, SPARQL_NN query_NN rewriting_VBG requires_VBZ synthesizing_VBG multiple_JJ views_NNS ;_: like_IN the_DT XML_NN case_NN ,_, the_DT size_NN of_IN the_DT rewritten_VBN query_NN is_VBZ exponential_JJ to_TO the_DT size_NN of_IN the_DT query_NN and_CC the_DT views_NNS ._.
In_IN this_DT paper_NN ,_, we_PRP present_VBP the_DT first_JJ native_JJ query_NN rewriting_VBG algorithm_NN for_IN SPARQL_NNP ._.
For_IN an_DT input_NN SPARQL_NN query_NN over_IN a_DT set_NN of_IN virtual_JJ SPARQL_NN views_NNS ,_, the_DT rewritten_VBN query_NN resembles_VBZ a_DT union_NN of_IN conjunctive_JJ queries_NNS and_CC can_MD be_VB of_IN exponential_JJ size_NN ._.
We_PRP propose_VBP optimizations_NNS over_IN the_DT basic_JJ rewriting_VBG algorithm_NN to_TO -LRB-_-LRB- i_LS -RRB-_-RRB- minimize_VB each_DT conjunctive_JJ query_NN in_IN the_DT union_NN ;_: -LRB-_-LRB- ii_LS -RRB-_-RRB- eliminate_VB conjunctive_JJ queries_NNS with_IN empty_JJ results_NNS from_IN evaluation_NN ;_: and_CC -LRB-_-LRB- iii_LS -RRB-_-RRB- efficiently_RB prune_VB out_RP big_JJ portions_NNS of_IN the_DT search_NN space_NN of_IN empty_JJ rewritings_NNS ._.
The_DT experiments_NNS ,_, performed_VBN on_IN two_CD RDF_NNP stores_NNS ,_, show_VBP that_IN our_PRP$ algorithms_NNS are_VBP scalable_JJ and_CC independent_JJ of_IN the_DT underlying_VBG RDF_NNP stores_NNS ._.
Furthermore_RB ,_, our_PRP$ optimizations_NNS have_VBP order_NN of_IN magnitude_NN improvements_NNS over_IN the_DT basic_JJ rewriting_VBG algorithm_NN in_IN both_CC the_DT rewriting_VBG size_NN and_CC evaluation_NN time_NN ._.
ble_NN is_VBZ indexed_VBN in_IN multiple_JJ ways_NNS -LRB-_-LRB- by_IN each_DT attribute_NN ,_, each_DT pair_NN of_IN attributes_NNS etc._NN -RRB-_-RRB- ,_, a_DT technique_NN originally_RB introduced_VBN in_IN -LRB-_-LRB- 23_CD -RRB-_-RRB- ._.
Recently_RB ,_, the_DT problem_NN of_IN view-based_JJ SPARQL_NN query_NN rewriting_VBG was_VBD studied_VBN in_IN =_JJ -_: =[_NN 13_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT techniques_NNS have_VBP been_VBN shown_VBN to_TO result_VB in_IN good_JJ RDF_NN query_NN and_CC update_VB performance_NN ._.
We_PRP view_VBP our_PRP$ approach_NN as_IN complementary_JJ to_TO these_DT works_NNS ,_, since_IN we_PRP seek_VBP to_TO identify_VB materialized_VBN views_NNS to_TO store_VB on_RP to_TO
frastructure_NN being_VBG built_VBN ,_, the_DT community_NN is_VBZ turning_VBG to_TO develop_VB more_RBR advanced_JJ applications_NNS ,_, e.g._FW ,_, integrating_VBG and_CC harvesting_VBG knowledge_NN on_IN the_DT Web_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- ,_, rewriting_VBG queries_NNS for_IN fine-grained_JJ access_NN control_NN =_JJ -_: =[_NN 17_CD -RRB-_-RRB- -_: =_JJ -_: and_CC inference_NN -LRB-_-LRB- 13_CD -RRB-_-RRB- ._.
In_IN such_JJ applications_NNS ,_, a_DT SPARQL_NN query_NN over_IN views_NNS is_VBZ often_RB rewritten_VBN into_IN an_DT equivalent_JJ batch_NN of_IN SPARQL_NN queries_NNS for_IN evaluation_NN over_IN the_DT base_NN data_NNS ._.
As_IN the_DT semantics_NNS of_IN the_DT rewritten_VBN
ble_NN is_VBZ indexed_VBN in_IN multiple_JJ ways_NNS -LRB-_-LRB- by_IN each_DT attribute_NN ,_, each_DT pair_NN of_IN attributes_NNS etc._NN -RRB-_-RRB- ,_, a_DT technique_NN originally_RB introduced_VBN in_IN -LRB-_-LRB- 23_CD -RRB-_-RRB- ._.
Recently_RB ,_, the_DT problem_NN of_IN view-based_JJ SPARQL_NN query_NN rewriting_VBG was_VBD studied_VBN in_IN =_JJ -_: =[_NN 13_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT techniques_NNS have_VBP been_VBN shown_VBN to_TO result_VB in_IN good_JJ RDF_NN query_NN and_CC update_VB performance_NN ._.
We_PRP view_VBP our_PRP$ approach_NN as_IN complementary_JJ to_TO these_DT works_NNS ,_, since_IN we_PRP seek_VBP to_TO identify_VB materialized_VBN views_NNS to_TO store_VB on_RP to_TO
ds_JJ to_TO synthesize_VB multiple_JJ views_NNS ;_: like_IN the_DT XML_NN case_NN ,_, SPARQL_NN query_NN rewriting_VBG generates_VBZ a_DT query_NN of_IN exponential_JJ size_NN ._.
Previous_JJ work_NN on_IN rewriting_VBG SPARQL_NN queries_NNS typically_RB adopted_VBD a_DT rule-based_JJ approach_NN ._.
In_IN =_JJ -_: =[_NN 12_CD -RRB-_-RRB- -_: =_JJ -_: ,_, the_DT authors_NNS perform_VBP rewritings_NNS using_VBG predefined_JJ rewriting_VBG rules_NNS ,_, whereas_IN our_PRP$ rewriting_VBG techniques_NNS can_MD dynamically_RB compose_VB the_DT right_JJ views_NNS to_TO rewrite_VB a_DT user_NN query_NN ._.
Similarly_RB in_IN -LRB-_-LRB- 10_CD -RRB-_-RRB- ,_, the_DT authors_NNS iden_VBP
w_NN challenges_NNS not_RB found_VBN in_IN -LRB-_-LRB- 16_CD -RRB-_-RRB- ._.
To_TO address_VB those_DT challenges_NNS ,_, we_PRP propose_VBP novel_JJ optimization_NN techniques_NNS to_TO remove_VB empty_JJ rewritings_NNS from_IN execution_NN ._.
Existing_VBG works_NNS on_IN general_JJ query_NN rewriting_VBG in_IN RDF_NNP store_NN =_JJ -_: =[_NN 5_CD ,_, 20_CD -RRB-_-RRB- -_: =_SYM -_: specify_VB view_NN definition_NN in_IN customized_VBN high-level_JJ languages_NNS ,_, and_CC perform_VB query_NN rewriting_VBG in_IN an_DT ad-hoc_JJ manner_NN ._.
In_IN contrast_NN ,_, our_PRP$ work_NN defines_VBZ views_NNS in_IN SPARQL_NNP ,_, thushaving_VBG more_RBR expressive_JJ power_NN and_CC wider_JJR
of_IN Φ_NNP 's_POS in_IN CandV1_NN and_CC part_NN CandV2_NN ._.
Table_NNP 1_CD -LRB-_-LRB- c_NN -RRB-_-RRB- shows_VBZ the_DT rewriting_VBG for_IN QU_NNP ,_, using_VBG -LRB-_-LRB- VFoF_NN ,_, Φ121_NN -RRB-_-RRB- inCandV1_NN and_CC -LRB-_-LRB- VR_NN ,_, Φ233_NN -RRB-_-RRB- inCandV2_NN ._.
Theorem_NN 1_CD ._.
The_DT rewriting_VBG Q_NNP ′_NNP of_IN SQR_NNP is_VBZ sound_JJ and_CC complete_JJ -LRB-_-LRB- see_VB proof_NN in_IN =_JJ -_: =[_NN 18_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
The_DT cost_NN of_IN Algorithm_NNP SQR_NNP is_VBZ influenced_VBN by_IN the_DT cost_NN of_IN computing_VBG variable_JJ mappings_NNS O_NN -LRB-_-LRB- |_CD Q_NNP |_FW ×_FW ∑_FW j_FW |_FW RD_NN -LRB-_-LRB- Vj_NN -RRB-_-RRB- |_CD -RRB-_-RRB- ,_, but_CC is_VBZ dominated_VBN by_IN the_DT generation_NN of_IN rewritings_NNS and_CC is_VBZ thus_RB equal_JJ to_TO O_NN -LRB-_-LRB- -LRB-_-LRB- ∑_CD j_NN |_NNP Vj_NNP |_NNP -RRB-_-RRB- |_NNP Q_NNP |_NNP -RRB-_-RRB- ,_, whe_NN
mpleteness_NN ,_, and_CC the_DT optimization_NN issue_NN was_VBD not_RB addressed_VBN ._.
Although_IN our_PRP$ proposed_VBN SPARQL_NN query_NN rewriting_VBG techniques_NNS face_VBP similar_JJ challenges_NNS as_IN the_DT classical_JJ techniques_NNS for_IN answering_VBG queries_NNS using_VBG views_NNS =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =_JJ -_: and_CC rewriting_VBG queries_NNS on_IN semi-structured_JJ data_NNS -LRB-_-LRB- 21_CD -RRB-_-RRB- ,_, the_DT actual_JJ rewriting_VBG steps_NNS differ_VBP significantly_RB ._.
In_IN particular_JJ ,_, relational_JJ techniques_NNS surveyed_VBN in_IN -LRB-_-LRB- 16_CD -RRB-_-RRB- can_MD not_RB efficiently_RB address_VB the_DT problem_NN in_IN S_NN
bject_NN :_: Query_NN processing_NN General_JJ Terms_NNS :_: Algorithms_NNPS Keywords_NNPS :_: Rewriting_VBG ,_, SPARQL_NN query_NN ,_, SPARQL_NN views_NNS 1_CD ._.
INTRODUCTION_NN In_IN a_DT number_NN of_IN settings_NNS ,_, including_VBG access_NN control_NN -LRB-_-LRB- 13_CD ,_, 14_CD ,_, 24,26_CD -RRB-_-RRB- or_CC data_NN integration_NN =_JJ -_: =[_NN 19,25_CD -RRB-_-RRB- -_: =_JJ -_: ,_, users_NNS can_MD only_RB access_VB data_NNS that_WDT are_VBP visible_JJ through_IN a_DT set_NN of_IN views_NNS ._.
The_DT views_NNS are_VBP typically_RB defined_VBN using_VBG a_DT standard_JJ query_NN language_NN -LRB-_-LRB- SQL_NN for_IN relational_JJ data_NNS ,_, XPath\/XQuery_NN for_IN XML_NN ,_, SPARQL_NNP for_IN RDF_NNP -RRB-_-RRB- an_DT
s_NNS -RRB-_-RRB- :_: Database_NNP Management_NNP --_: Systems_NNP ._.
Subject_NN :_: Query_NN processing_NN General_JJ Terms_NNS :_: Algorithms_NNPS Keywords_NNPS :_: Rewriting_VBG ,_, SPARQL_NN query_NN ,_, SPARQL_NN views_NNS 1_CD ._.
INTRODUCTION_NN In_IN a_DT number_NN of_IN settings_NNS ,_, including_VBG access_NN control_NN =_JJ -_: =[_NN 13_CD ,_, 14_CD ,_, 24,26_CD -RRB-_-RRB- -_: =_JJ -_: or_CC data_NNS integration_NN -LRB-_-LRB- 19,25_CD -RRB-_-RRB- ,_, users_NNS can_MD only_RB access_VB data_NNS that_WDT are_VBP visible_JJ through_IN a_DT set_NN of_IN views_NNS ._.
The_DT views_NNS are_VBP typically_RB defined_VBN using_VBG a_DT standard_JJ query_NN language_NN -LRB-_-LRB- SQL_NN for_IN relational_JJ data_NNS ,_, XPath\/XQuery_NN
ists_NNS for_IN the_DT boolean_JJ set_NN intersection_NN problem_NN ,_, i.e._FW ,_, given_VBN two_CD sets_NNS A1_NN and_CC A2_NN ,_, checkingifA1_NN and_CC A2_NN intersects_NNS requires_VBZ linear_JJ space_NN ,_, even_RB if_IN one_CD is_VBZ willing_JJ to_TO settle_VB to_TO a_DT constant_JJ success_NN probability_NN =_JJ -_: =[_NN 7,17_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, we_PRP can_MD design_VB a_DT space-efficient_JJ heuristic_NN that_WDT works_VBZ well_RB in_IN practice_NN ._.
The_DT basic_JJ idea_NN is_VBZ to_TO first_RB determine_VB the_DT value_NN set_VBN for_IN each_DT distinct_JJ variable_NN involved_VBN in_IN the_DT rewriting_VBG ,_, and_CC then_RB cons_NNS
g_NN and_CC execution_NN ._.
Also_RB we_PRP studied_VBD the_DT scalability_NN of_IN our_PRP$ algorithms_NNS along_IN multiple_JJ dimensions_NNS ,_, i.e._FW ,_, the_DT size_NN of_IN query_FW |_FW Q_NNP |_NNP ,_, views_VBZ |_NNP V_NNP |_NNP and_CC |_NNP CandV_NNP |_NNP ._.
In_IN experiments_NNS ,_, we_PRP used_VBD the_DT popular_JJ RDF_NN benchmark_NN LUBM_NN =_JJ -_: =[_NN 15_CD -RRB-_-RRB- -_: =_JJ -_: -LRB-_-LRB- which_WDT considers_VBZ a_DT setting_NN in_IN the_DT university_NN domain_NN that_WDT involve_VBP students_NNS ,_, departments_NNS ,_, professors_NNS ,_, etc._NN -RRB-_-RRB- to_TO generate_VB a_DT dataset_NN of_IN 10M_CD triples_NNS as_IN the_DT base_NN data_NNS ,_, over_IN which_WDT views_NNS are_VBP defined_VBN using_VBG SPA_NN
ists_NNS for_IN the_DT boolean_JJ set_NN intersection_NN problem_NN ,_, i.e._FW ,_, given_VBN two_CD sets_NNS A1_NN and_CC A2_NN ,_, checkingifA1_NN and_CC A2_NN intersects_NNS requires_VBZ linear_JJ space_NN ,_, even_RB if_IN one_CD is_VBZ willing_JJ to_TO settle_VB to_TO a_DT constant_JJ success_NN probability_NN =_JJ -_: =[_NN 7,17_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, we_PRP can_MD design_VB a_DT space-efficient_JJ heuristic_NN that_WDT works_VBZ well_RB in_IN practice_NN ._.
The_DT basic_JJ idea_NN is_VBZ to_TO first_RB determine_VB the_DT value_NN set_VBN for_IN each_DT distinct_JJ variable_NN involved_VBN in_IN the_DT rewriting_VBG ,_, and_CC then_RB cons_NNS
bject_NN :_: Query_NN processing_NN General_JJ Terms_NNS :_: Algorithms_NNPS Keywords_NNPS :_: Rewriting_VBG ,_, SPARQL_NN query_NN ,_, SPARQL_NN views_NNS 1_CD ._.
INTRODUCTION_NN In_IN a_DT number_NN of_IN settings_NNS ,_, including_VBG access_NN control_NN -LRB-_-LRB- 13_CD ,_, 14_CD ,_, 24,26_CD -RRB-_-RRB- or_CC data_NN integration_NN =_JJ -_: =[_NN 19,25_CD -RRB-_-RRB- -_: =_JJ -_: ,_, users_NNS can_MD only_RB access_VB data_NNS that_WDT are_VBP visible_JJ through_IN a_DT set_NN of_IN views_NNS ._.
The_DT views_NNS are_VBP typically_RB defined_VBN using_VBG a_DT standard_JJ query_NN language_NN -LRB-_-LRB- SQL_NN for_IN relational_JJ data_NNS ,_, XPath\/XQuery_NN for_IN XML_NN ,_, SPARQL_NNP for_IN RDF_NNP -RRB-_-RRB- an_DT
constant_JJ predicate_NN from_IN the_DT active_JJ domain_NN of_IN predicates_NNS in_IN the_DT RDF_NNP store_NN ._.
Computing_NNP variable_JJ mappings_NNS between_IN triple_JJ patterns_NNS in_IN SQR_NN is_VBZ similar_JJ to_TO computing_VBG substitutions_NNS between_IN conjunctive_JJ queries_NNS =_JJ -_: =[_NN 6_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Formally_RB ,_, a_DT substitution_NN is_VBZ a_DT mapping_NN between_IN the_DT corresponding_JJ elements_NNS -LRB-_-LRB- subject_NN ,_, predicate_NN ,_, and_CC object_NN -RRB-_-RRB- in_IN a_DT pair_NN of_IN triples_NNS that_IN maps_NNS :_: -LRB-_-LRB- i_LS -RRB-_-RRB- a_DT variable_NN in_IN the_DT first_JJ triple_JJ to_TO another_DT variable_NN or_CC co_NN
s_NNS -RRB-_-RRB- :_: Database_NNP Management_NNP --_: Systems_NNP ._.
Subject_NN :_: Query_NN processing_NN General_JJ Terms_NNS :_: Algorithms_NNPS Keywords_NNPS :_: Rewriting_VBG ,_, SPARQL_NN query_NN ,_, SPARQL_NN views_NNS 1_CD ._.
INTRODUCTION_NN In_IN a_DT number_NN of_IN settings_NNS ,_, including_VBG access_NN control_NN =_JJ -_: =[_NN 13_CD ,_, 14_CD ,_, 24,26_CD -RRB-_-RRB- -_: =_JJ -_: or_CC data_NNS integration_NN -LRB-_-LRB- 19,25_CD -RRB-_-RRB- ,_, users_NNS can_MD only_RB access_VB data_NNS that_WDT are_VBP visible_JJ through_IN a_DT set_NN of_IN views_NNS ._.
The_DT views_NNS are_VBP typically_RB defined_VBN using_VBG a_DT standard_JJ query_NN language_NN -LRB-_-LRB- SQL_NN for_IN relational_JJ data_NNS ,_, XPath\/XQuery_NN
P_NN exists_VBZ ,_, or_CC not_RB ,_, in_FW G._FW Similar_JJ to_TO SQL_NNP where_WRB research_NN considered_VBD set_VBN before_IN bag_NN semantics_NNS ,_, for_IN our_PRP$ nonboolean_JJ SPARQL_NN queries_NNS we_PRP assume_VBP set_NN semantics_NNS whose_WP$ importance_NN for_IN SPARQL_NNP has_VBZ already_RB been_VBN noted_VBN =_JJ -_: =[_NN 22_CD -RRB-_-RRB- -_: =_SYM -_: ._.
The_DT central_JJ technical_JJ problem_NN in_IN this_DT paper_NN is_VBZ the_DT rewriting_VBG problem_NN as_IN follows_VBZ :_: given_VBN a_DT set_NN of_IN views_NNS V_NN =_JJ -LCB-_-LRB- V1_NN ,_, V2_NN ,_, ..._: ,_, Vl_NNP -RCB-_-RRB- over_IN an_DT RDF_NN graph_NN G_NN ,_, andaSPARQL_NN query_NN Q_NNP over_IN the_DT vocabulary_NN of_IN the_DT views_NNS ,_, co_FW
onsidering_VBG the_DT corresponding_JJ SQL_NN setting_VBG and_CC applying_VBG the_DT solutions_NNS in_IN SQL_NNP ._.
Although_IN this_DT seems_VBZ promising_JJ since_IN some_DT RDF_NNP stores_NNS do_VBP use_VB a_DT relational_JJ back-end_JJ -LRB-_-LRB- e.g._FW ,_, Jena_NNP SDB_NNP -LRB-_-LRB- 2_CD -RRB-_-RRB- ,_, Virtuoso_NN -LRB-_-LRB- 3_CD -RRB-_-RRB- ,_, C-store_NN =_JJ -_: =[_NN 4_CD -RRB-_-RRB- -_: =_JJ -_: ,_, etc_NN -RRB-_-RRB- ,_, we_PRP show_VBP here_RB that_IN for_IN a_DT number_NN of_IN reasons_NNS such_PDT an_DT approach_NN does_VBZ not_RB reduce_VB the_DT complexity_NN ._.
To_TO translate_VB our_PRP$ setting_NN to_TO the_DT relational_JJ case_NN ,_, we_PRP use_VBP one_CD of_IN the_DT most_RBS efficient_JJ relational_JJ storage_NN
s_NNS -RRB-_-RRB- :_: Database_NNP Management_NNP --_: Systems_NNP ._.
Subject_NN :_: Query_NN processing_NN General_JJ Terms_NNS :_: Algorithms_NNPS Keywords_NNPS :_: Rewriting_VBG ,_, SPARQL_NN query_NN ,_, SPARQL_NN views_NNS 1_CD ._.
INTRODUCTION_NN In_IN a_DT number_NN of_IN settings_NNS ,_, including_VBG access_NN control_NN =_JJ -_: =[_NN 13_CD ,_, 14_CD ,_, 24,26_CD -RRB-_-RRB- -_: =_JJ -_: or_CC data_NNS integration_NN -LRB-_-LRB- 19,25_CD -RRB-_-RRB- ,_, users_NNS can_MD only_RB access_VB data_NNS that_WDT are_VBP visible_JJ through_IN a_DT set_NN of_IN views_NNS ._.
The_DT views_NNS are_VBP typically_RB defined_VBN using_VBG a_DT standard_JJ query_NN language_NN -LRB-_-LRB- SQL_NN for_IN relational_JJ data_NNS ,_, XPath\/XQuery_NN
s_NNS -RRB-_-RRB- :_: Database_NNP Management_NNP --_: Systems_NNP ._.
Subject_NN :_: Query_NN processing_NN General_JJ Terms_NNS :_: Algorithms_NNPS Keywords_NNPS :_: Rewriting_VBG ,_, SPARQL_NN query_NN ,_, SPARQL_NN views_NNS 1_CD ._.
INTRODUCTION_NN In_IN a_DT number_NN of_IN settings_NNS ,_, including_VBG access_NN control_NN =_JJ -_: =[_NN 13_CD ,_, 14_CD ,_, 24,26_CD -RRB-_-RRB- -_: =_JJ -_: or_CC data_NNS integration_NN -LRB-_-LRB- 19,25_CD -RRB-_-RRB- ,_, users_NNS can_MD only_RB access_VB data_NNS that_WDT are_VBP visible_JJ through_IN a_DT set_NN of_IN views_NNS ._.
The_DT views_NNS are_VBP typically_RB defined_VBN using_VBG a_DT standard_JJ query_NN language_NN -LRB-_-LRB- SQL_NN for_IN relational_JJ data_NNS ,_, XPath\/XQuery_NN
1_LS -RRB-_-RRB- ,_, the_DT actual_JJ rewriting_VBG steps_NNS differ_VBP significantly_RB ._.
In_IN particular_JJ ,_, relational_JJ techniques_NNS surveyed_VBN in_IN -LRB-_-LRB- 16_CD -RRB-_-RRB- can_MD not_RB efficiently_RB address_VB the_DT problem_NN in_IN SPARQL_NNP ._.
For_IN example_NN ,_, the_DT pruning_NN power_NN of_IN MiniCon_NN =_JJ -_: =[_NN 23_CD -RRB-_-RRB- -_: =_SYM -_: vanishes_VBZ due_JJ to_TO the_DT fact_NN that_IN all_PDT the_DT variables_NNS in_IN SQL-translated_JJ views_NNS -LRB-_-LRB- see_VB Figure_NNP 2_CD -LRB-_-LRB- b_NN -RRB-_-RRB- -RRB-_-RRB- are_VBP distinguished_JJ variables_NNS -LRB-_-LRB- 23_CD -RRB-_-RRB- ._.
Furthermore_RB ,_, our_PRP$ computation_NN of_IN variable_JJ mappings_NNS and_CC selection_NN of_IN candidat_NN
ARQL_NN rewriting_VBG problem_NN by_IN considering_VBG the_DT corresponding_JJ SQL_NN setting_VBG and_CC applying_VBG the_DT solutions_NNS in_IN SQL_NNP ._.
Although_IN this_DT seems_VBZ promising_JJ since_IN some_DT RDF_NNP stores_NNS do_VBP use_VB a_DT relational_JJ back-end_JJ -LRB-_-LRB- e.g._FW ,_, Jena_NNP SDB_NNP =_SYM -_: =[_NN 2_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Virtuoso_NN -LRB-_-LRB- 3_CD -RRB-_-RRB- ,_, C-store_NN -LRB-_-LRB- 4_CD -RRB-_-RRB- ,_, etc_NN -RRB-_-RRB- ,_, we_PRP show_VBP here_RB that_IN for_IN a_DT number_NN of_IN reasons_NNS such_PDT an_DT approach_NN does_VBZ not_RB reduce_VB the_DT complexity_NN ._.
To_TO translate_VB our_PRP$ setting_NN to_TO the_DT relational_JJ case_NN ,_, we_PRP use_VBP one_CD of_IN the_DT most_JJS ef_NN
ate_VBD the_DT size_NN of_IN an_DT intersection_NN |_NN A1_NN ⋂_NN A2_NN |_CD by_IN simply_RB estimating_VBG the_DT size_NN of_IN D_NN -LRB-_-LRB- A1_NN A2_NN -RRB-_-RRB- whereDis_VBZ the_DT number_NN of_IN distinct_JJ elements_NNS in_IN A1_NN and_CC A2_NN ,_, respectively_RB ._.
In_IN what_WP follows_VBZ ,_, we_PRP show_VBP that_IN the_DT KMV-synopsis_NN =_JJ -_: =[_NN 9_CD -RRB-_-RRB- -_: =_SYM -_: meets_VBZ both_DT requirements_NNS ._.
For_IN a_DT set_NN A1_NN ,_, we_PRP denote_VBP its_PRP$ KMV-synopsis_NN as_IN σ_NN -LRB-_-LRB- A1_NN -RRB-_-RRB- ._.
The_DT construction_NN of_IN σ_NN -LRB-_-LRB- A1_NN -RRB-_-RRB- is_VBZ as_IN follows_VBZ ._.
Given_VBN a_DT collision-resistant_JJ hash_NN function_NN h_NN that_WDT generates_VBZ -LRB-_-LRB- roughly_RB -RRB-_-RRB- uniformly_RB ran_VBD
ctions_NNS under_IN which_WDT an_DT XPath_NN query_NN can_MD be_VB rewritten_VBN over_IN multiple_JJ views_NNS in_IN PTIME_NNP ._.
Such_JJ restrictions_NNS are_VBP expressed_VBN as_IN rules_NNS during_IN the_DT rewriting_VBG ,_, therefore_RB this_DT approach_NN is_VBZ rulebased_VBN as_RB well_RB ._.
Reference_NNP =_SYM -_: =[_NN 11_CD -RRB-_-RRB- -_: =_SYM -_: presents_VBZ theoretical_JJ results_NNS for_IN rewriting_VBG a_DT query_NN over_IN multiple_JJ data_NNS sources_NNS ;_: the_DT authors_NNS studied_VBD the_DT rewriting_VBG problem_NN in_IN the_DT presence_NN of_IN embedded_JJ constraints_NNS from_IN up_IN to_TO infinite_JJ data_NNS sources_NNS ,_, and_CC
ased_VBN approach_NN ._.
In_IN -LRB-_-LRB- 12_CD -RRB-_-RRB- ,_, the_DT authors_NNS perform_VBP rewritings_NNS using_VBG predefined_JJ rewriting_VBG rules_NNS ,_, whereas_IN our_PRP$ rewriting_VBG techniques_NNS can_MD dynamically_RB compose_VB the_DT right_JJ views_NNS to_TO rewrite_VB a_DT user_NN query_NN ._.
Similarly_RB in_IN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_JJ -_: ,_, the_DT authors_NNS identify_VBP a_DT set_NN of_IN tightest_JJS restrictions_NNS under_IN which_WDT an_DT XPath_NN query_NN can_MD be_VB rewritten_VBN over_IN multiple_JJ views_NNS in_IN PTIME_NNP ._.
Such_JJ restrictions_NNS are_VBP expressed_VBN as_IN rules_NNS during_IN the_DT rewriting_VBG ,_, therefore_RB
w_NN challenges_NNS not_RB found_VBN in_IN -LRB-_-LRB- 16_CD -RRB-_-RRB- ._.
To_TO address_VB those_DT challenges_NNS ,_, we_PRP propose_VBP novel_JJ optimization_NN techniques_NNS to_TO remove_VB empty_JJ rewritings_NNS from_IN execution_NN ._.
Existing_VBG works_NNS on_IN general_JJ query_NN rewriting_VBG in_IN RDF_NNP store_NN =_JJ -_: =[_NN 5_CD ,_, 20_CD -RRB-_-RRB- -_: =_SYM -_: specify_VB view_NN definition_NN in_IN customized_VBN high-level_JJ languages_NNS ,_, and_CC perform_VB query_NN rewriting_VBG in_IN an_DT ad-hoc_JJ manner_NN ._.
In_IN contrast_NN ,_, our_PRP$ work_NN defines_VBZ views_NNS in_IN SPARQL_NNP ,_, thushaving_VBG more_RBR expressive_JJ power_NN and_CC wider_JJR
essed_VBN ._.
Although_IN our_PRP$ proposed_VBN SPARQL_NN query_NN rewriting_VBG techniques_NNS face_VBP similar_JJ challenges_NNS as_IN the_DT classical_JJ techniques_NNS for_IN answering_VBG queries_NNS using_VBG views_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- and_CC rewriting_VBG queries_NNS on_IN semi-structured_JJ data_NN =_JJ -_: =[_NN 21_CD -RRB-_-RRB- -_: =_JJ -_: ,_, the_DT actual_JJ rewriting_VBG steps_NNS differ_VBP significantly_RB ._.
In_IN particular_JJ ,_, relational_JJ techniques_NNS surveyed_VBN in_IN -LRB-_-LRB- 16_CD -RRB-_-RRB- can_MD not_RB efficiently_RB address_VB the_DT problem_NN in_IN SPARQL_NNP ._.
For_IN example_NN ,_, the_DT pruning_NN power_NN of_IN MiniCon_NNP -LRB-_-LRB- 2_CD
aluate_VB only_RB a_DT subset_NN of_IN the_DT view_NN combinations_NNS without_IN sacrificing_VBG soundness_NN or_CC completeness_NN ._.
Given_VBN that_IN relational_JJ algebra_NN -LRB-_-LRB- and_CC the_DT corresponding_JJ SQL_NN fragment_NN -RRB-_-RRB- has_VBZ the_DT same_JJ expressive_JJ power_NN as_IN SPARQL_NN =_JJ -_: =[_NN 8_CD -RRB-_-RRB- -_: =_JJ -_: ,_, one_CD V_NN F-SQL_NN :_: SELECT_NNP F._NNP s_NN ,_, F._NNP o_NN ,_, N_NN '_'' ._.
s_NN ,_, N_NN '_'' ._.
o_NN ,_, L._NN s_NN ,_, L.o_NNP FROM_NNP name_NN N_NN ,_, friend_NN F_NN ,_, name_NN N_NN '_'' ,_, lives_VBZ L_NNP WHERE_NNP N.s_VBZ =_JJ F.s_NNS AND_CC N.o_NN =_JJ 〈_NN P_NN 1_CD 〉_NN AND_CC N_NN '_'' ._.
s_NN =_JJ F.o_NN AND_CC L.s_NN =_JJ F.o_NN V_NN FoF-SQL_NN :_: SELECT_NNP F._NNP s_NN ,_, F_NN '_'' ._.
o_NN ,_, N_NN '_'' ._.
s_NN ,_, N_NN '_'' ._.
o_NN ,_, L._NN s_NN ,_, L_NN
