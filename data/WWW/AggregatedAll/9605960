Improved_VBN techniques_NNS for_IN result_NN caching_NN in_IN web_NN search_NN engines_NNS
Query_NN processing_NN is_VBZ a_DT major_JJ cost_NN factor_NN in_IN operating_VBG large_JJ web_NN search_NN engines_NNS ._.
In_IN this_DT paper_NN ,_, we_PRP study_VBD query_JJ result_NN caching_NN ,_, one_CD of_IN the_DT main_JJ techniques_NNS used_VBN to_TO optimize_VB query_NN processing_NN performance_NN ._.
Our_PRP$ first_JJ contribution_NN is_VBZ a_DT study_NN of_IN result_NN caching_NN as_IN a_DT weighted_JJ caching_NN problem_NN ._.
Most_RBS previous_JJ work_NN has_VBZ focused_VBN on_IN optimizing_VBG cache_NN hit_NN ratios_NNS ,_, but_CC given_VBN that_IN processing_VBG costs_NNS of_IN queries_NNS can_MD vary_VB very_RB significantly_RB we_PRP argue_VBP that_IN total_JJ cost_NN savings_NNS also_RB need_VBP to_TO be_VB considered_VBN ._.
We_PRP describe_VBP and_CC evaluate_VBP several_JJ algorithms_NNS for_IN weighted_JJ result_NN caching_NN ,_, and_CC study_VB the_DT impact_NN of_IN Zipf-based_JJ query_NN distributions_NNS on_IN result_NN caching_NN ._.
Our_PRP$ second_JJ and_CC main_JJ contribution_NN is_VBZ a_DT new_JJ set_NN of_IN feature-based_JJ cache_NN eviction_NN policies_NNS that_WDT achieve_VBP significant_JJ improvements_NNS over_IN all_DT previous_JJ methods_NNS ,_, substantially_RB narrowing_VBG the_DT existing_VBG performance_NN gap_NN to_TO the_DT theoretically_RB optimal_JJ -LRB-_-LRB- clairvoyant_JJ -RRB-_-RRB- method_NN ._.
Finally_RB ,_, using_VBG the_DT same_JJ approach_NN ,_, we_PRP also_RB obtain_VBP performance_NN gains_NNS for_IN the_DT related_JJ problem_NN of_IN inverted_JJ list_NN caching_NN ._.
and_CC the_DT end-server_JJ caches_NNS ._.
Baeza-Yates_NNP et_FW al._FW -LRB-_-LRB- 2_CD -RRB-_-RRB- have_VBP shown_VBN that_IN caching_VBG posting_VBG lists_NNS is_VBZ also_RB possible_JJ ,_, obtaining_VBG higher_JJR hit_NN rates_NNS than_IN when_WRB just_RB doing_VBG results_NNS and\/or_CC terms_NNS ._.
Recently_RB ,_, Gan_NN and_CC Suel_NN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: have_VBP studied_VBN weighted_JJ result_NN caching_NN in_IN which_WDT the_DT cost_NN of_IN processing_NN queries_NNS is_VBZ considered_VBN at_IN the_DT time_NN of_IN deciding_VBG the_DT admission_NN of_IN a_DT given_VBN query_NN to_TO the_DT RCache_NN ._.
A_DT common_JJ factor_NN that_WDT is_VBZ found_VBN in_IN the_DT p_NN
-RRB-_-RRB- ,_, in_IN particular_JJ the_DT fact_NN that_IN the_DT interval_NN of_IN submission_NN of_IN the_DT same_JJ query_NN is_VBZ short_JJ in_IN many_JJ cases_NNS -LRB-_-LRB- 13_CD -RRB-_-RRB- ._.
Finally_RB ,_, query_NN popularity_NN typically_RB follows_VBZ an_DT inverse_JJ powerlaw_NN distribution_NN -LRB-_-LRB- see_VB ,_, for_IN example_NN =_JJ -_: =[_NN 14_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
Query_NNP Caching_NNP ._.
The_DT above-mentioned_JJ findings_NNS suggest_VBP the_DT use_NN of_IN caching_VBG strategies_NNS to_TO cache_NN results_NNS for_IN queries_NNS that_WDT are_VBP likely_JJ to_TO be_VB submitted_VBN by_IN users_NNS in_IN the_DT next_JJ future_NN ._.
This_DT aspect_NN has_VBZ received_VBN
ting_NN ._.
In_IN the_DT appendix_NN we_PRP discuss_VBP that_IN an_DT implementation_NN of_IN output_NN bidding_NN that_WDT hides_VBZ the_DT extra_JJ latency_NN from_IN the_DT user_NN can_MD rely_VB on_IN results_NNS caching_VBG ._.
Search_VB results_NNS caching_NN is_VBZ also_RB studied_VBN by_IN Gan_NN et_CC Suel_NN =_JJ -_: =[_NN 15_CD -RRB-_-RRB- -_: =_JJ -_: and_CC Cambazoglu_NNP et_FW al._FW -LRB-_-LRB- 4_CD -RRB-_-RRB- ._.
Both_DT works_NNS show_VBP that_IN a_DT high_JJ hit_NN rate_NN is_VBZ possible_JJ and_CC this_DT conclusion_NN supports_VBZ the_DT implementation_NN feasibility_NN of_IN output_NN bidding_NN ._.
8_CD ._.
CONCLUSIONS_NNS AND_CC FUTURE_NNS WORK_VBP Modern_NNP search_NN
t_NN users_NNS ._.
With_IN index_NN -LRB-_-LRB- or_CC list_NN -RRB-_-RRB- caching_NN ,_, a_DT search_NN engine_NN maintains_VBZ the_DT inverted_JJ lists_NNS of_IN frequently_RB queried_VBN search_NN terms_NNS in_IN main_JJ memory_NN ._.
These_DT studies_NNS can_MD be_VB taxonomized_VBN into_IN those_DT that_IN either_CC consider_VB =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_JJ -_: or_CC do_VB not_RB consider_VB the_DT cost_NN of_IN a_DT query_NN -LRB-_-LRB- 25_CD ,_, 29_CD ,_, 17_CD ,_, 8_CD ,_, 1_CD -RRB-_-RRB- ._.
The_DT former_JJ is_VBZ most_RBS relevant_JJ because_IN its_PRP$ concept_NN of_IN query_JJ execution_NN time_NN is_VBZ identical_JJ to_TO our_PRP$ concept_NN of_IN DBMS_NN execution_NN time_NN -LRB-_-LRB- cost_NN -RRB-_-RRB- ._.
In_IN -LRB-_-LRB- 10_CD -RRB-_-RRB- ,_,
c_NN ,_, but_CC important_JJ ,_, example_NN of_IN non-interactivequeries_NNS ._.
All_DT major_JJ search_NN engines_NNS cache_NN the_DT results_NNS of_IN common_JJ search_NN queries_NNS ,_, and_CC a_DT significant_JJ amount_NN of_IN work_NN has_VBZ focused_VBN on_IN optimizing_VBG caching_NN mechanisms_NNS =_JJ -_: =[_NN 5_CD ,_, 25_CD ,_, 21_CD ,_, 30_CD ,_, 32_CD ,_, 16_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Recently_RB ,_, work_NN has_VBZ focused_VBN on_IN the_DT need_NN to_TO also_RB update_VB and_CC refresh_VB results_NNS stored_VBN in_IN these_DT caches_NNS -LRB-_-LRB- 8_CD -RRB-_-RRB- since_IN in_IN practice_NN performance_NN is_VBZ limited_VBN more_JJR by_IN updates_NNS to_TO the_DT document_NN collection_NN than_IN by_IN the_DT s_NN
seful_NN in_IN predicting_VBG individual_JJ query_NN recurrence_NN ._.
Our_PRP$ findings_NNS provide_VBP valuable_JJ insights_NNS for_IN the_DT development_NN of_IN better_JJR query_NN suggestion_NN -LRB-_-LRB- 7_CD -RRB-_-RRB- ,_, information_NN re-finding_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ,_, and_CC result_NN caching\/prefetching_NN =_JJ -_: =[_FW 5,1,2,3_FW -RRB-_-RRB- -_: =_JJ -_: techniques_NNS etc._NN ._.
Most_RBS notably_RB ,_, we_PRP point_VBP out_RP that_IN temporal_JJ factors_NNS such_JJ as_IN query_NN recency_NN ,_, which_WDT have_VBP been_VBN largely_RB overlooked_VBN in_IN existing_VBG research_NN ,_, are_VBP actually_RB very_RB important_JJ to_TO personalised_JJ Web_NN search_NN
about_IN the_DT answer_NN of_IN each_DT cached_VBN query_NN ,_, namely_RB the_DT list_NN of_IN search_NN nodes_NNS IDs_NNS from_IN which_WDT each_DT document_NN in_IN the_DT global_JJ top-k_NN results_NNS come_VBP from_IN ,_, and_CC it_PRP can_MD be_VB administered_VBN with_IN any_DT existing_VBG caching_NN policy_NN =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Notice_NNP that_IN if_IN we_PRP distribute_VBP related_JJ document_NN clusters_NNS into_IN the_DT same_JJ nodes_NNS and_CC the_DT remaining_VBG ones_NNS -LRB-_-LRB- sorted_VBN by_IN centers_NNS similarity_NN distance_NN -RRB-_-RRB- in_IN contiguous-ID_NN nodes_NNS ,_, then_RB the_DT lists_NNS of_IN nodes_NNS stored_VBN in_IN th_DT
bal_FW topR_FW results_NNS come_VBP from_IN ,_, and_CC it_PRP can_MD be_VB administered_VBN with_IN any_DT existing_VBG caching_NN policy_NN ._.
As_IN we_PRP describe_VBP below_IN we_PRP tested_VBD our_PRP$ LCache_NN strategy_NN by_IN using_VBG a_DT hybrid_JJ static\/dynamic_JJ caching_NN policy_NN proposed_VBN in_IN =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Notice_NNP that_IN if_IN we_PRP distribute_VBP related_JJ document_NN clusters_NNS into_IN P_NN processors_NNS and_CC the_DT remaining_VBG ones_NNS -LRB-_-LRB- sorted_VBN by_IN centers_NNS similarity_NN distance_NN -RRB-_-RRB- in_IN contiguous-ID_NN processors_NNS ,_, then_RB the_DT lists_NNS of_IN processors_NNS stor_NN
and_CC the_DT end-server_JJ caches_NNS ._.
Baeza-Yates_NNP et_FW al._FW -LRB-_-LRB- 2_CD -RRB-_-RRB- have_VBP shown_VBN that_IN caching_VBG posting_VBG lists_NNS is_VBZ also_RB possible_JJ ,_, obtaining_VBG higher_JJR hit_NN rates_NNS than_IN when_WRB just_RB doing_VBG results_NNS and\/or_CC terms_NNS ._.
Recently_RB ,_, Gan_NN and_CC Suel_NN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: have_VBP studied_VBN weighted_JJ result_NN caching_NN in_IN which_WDT the_DT cost_NN of_IN processing_NN queries_NNS is_VBZ considered_VBN at_IN the_DT time_NN of_IN deciding_VBG the_DT admission_NN of_IN a_DT given_VBN query_NN to_TO the_DT RCache_NN ._.
A_DT common_JJ factor_NN that_WDT is_VBZ found_VBN in_IN the_DT p_NN
