Securing_VBG web_NN application_NN code_NN by_IN static_JJ analysis_NN and_CC runtime_NN protection_NN
Security_NN remains_VBZ a_DT major_JJ roadblock_NN to_TO universal_JJ acceptance_NN of_IN the_DT Web_NN for_IN many_JJ kinds_NNS of_IN transactions_NNS ,_, especially_RB since_IN the_DT recent_JJ sharp_JJ increase_NN in_IN remotely_RB exploitable_JJ vulnerabilities_NNS have_VBP been_VBN attributed_VBN to_TO Web_NN application_NN bugs_NNS ._.
Many_JJ verification_NN tools_NNS are_VBP discovering_VBG previously_RB unknown_JJ vulnerabilities_NNS in_IN legacy_NN C_NN programs_NNS ,_, raising_VBG hopes_NNS that_IN the_DT same_JJ success_NN can_MD be_VB achieved_VBN with_IN Web_NN applications_NNS ._.
In_IN this_DT paper_NN ,_, we_PRP describe_VBP a_DT sound_JJ and_CC holistic_JJ approach_NN to_TO ensuring_VBG Web_NN application_NN security_NN ._.
Viewing_VBG Web_NN application_NN vulnerabilities_NNS as_IN a_DT secure_JJ information_NN flow_NN problem_NN ,_, we_PRP created_VBD a_DT lattice-based_JJ static_JJ analysis_NN algorithm_NN derived_VBN from_IN type_NN systems_NNS and_CC typestate_NN ,_, and_CC addressed_VBD its_PRP$ soundness_NN ._.
During_IN the_DT analysis_NN ,_, sections_NNS of_IN code_NN considered_VBN vulnerable_JJ are_VBP instrumented_VBN with_IN runtime_NN guards_NNS ,_, thus_RB securing_VBG Web_NN applications_NNS in_IN the_DT absence_NN of_IN user_NN intervention_NN ._.
With_IN sufficient_JJ annotations_NNS ,_, runtime_NN overhead_NN can_MD be_VB reduced_VBN to_TO zero_VB ._.
We_PRP also_RB created_VBD a_DT tool_NN named_VBN ._.
WebSSARI_NN -LRB-_-LRB- Web_NN application_NN Security_NNP by_IN Static_NNP Analysis_NNP and_CC Runtime_NNP Inspection_NNP -RRB-_-RRB- to_TO test_VB our_PRP$ algorithm_NN ,_, and_CC used_VBD it_PRP to_TO verify_VB 230_CD open-source_JJ Web_NN application_NN projects_NNS on_IN SourceForge.net_NN ,_, which_WDT were_VBD selected_VBN to_TO represent_VB projects_NNS of_IN different_JJ maturity_NN ,_, popularity_NN ,_, and_CC scale_NN ._.
69_CD contained_VBD vulnerabilities_NNS ._.
After_IN notifying_VBG the_DT developers_NNS ,_, 38_CD acknowledged_VBD our_PRP$ findings_NNS and_CC stated_VBD their_PRP$ plans_NNS to_TO provide_VB patches_NNS ._.
Our_PRP$ statistics_NNS also_RB show_VBP that_IN static_JJ analysis_NN reduced_VBD potential_JJ runtime_NN overhead_NN by_IN 98.4_CD %_NN ._.
lternate_JJ encoding_NN and_CC stored_VBD procedure_NN attacks_NNS -LRB-_-LRB- 12_CD -RRB-_-RRB- ._.
Another_DT class_NN of_IN static_JJ analysis_NN solutions_NNS statically_RB screens_VBZ application_NN source_NN to_TO validate_VB every_DT user_NN input_NN before_IN being_VBG integrated_VBN into_IN a_DT query_NN =_JJ -_: =[_NN 10_CD ,_, 11_CD ,_, 35_CD ,_, 8_CD ,_, 7_CD ,_, 9_CD ,_, 6_CD ,_, 17_CD ,_, 5_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT techniques_NNS work_VBP when_WRB application_NN source_NN code_NN is_VBZ available_JJ ._.
In_IN addition_NN ,_, although_IN dynamic_JJ prevention_NN techniques_NNS -LRB-_-LRB- 3_CD ,_, 1_LS -RRB-_-RRB- require_VBP minimal_JJ human_JJ interaction_NN ,_, they_PRP insert_VBP extra_JJ metadata_NN to_TO delimit_VB u_NN
ere_NN is_VBZ no_DT way_NN to_TO bypass_VB them_PRP -LRB-_-LRB- 1_LS -RRB-_-RRB- ._.
1.1_CD State_NN of_IN the_DT Art_NN Many_JJ methods_NNS and_CC tools_NNS have_VBP been_VBN proposed_VBN to_TO check_VB for_IN attack_NN vulnerabilities_NNS in_IN web_NN applications_NNS such_JJ as_IN SQL_NN injection_NN and_CC cross_NN site_NN scripting_NN =_JJ -_: =[_NN 16_CD ,_, 17_CD -RRB-_-RRB- -_: =_JJ -_: ,_, but_CC none_NN of_IN them_PRP attempts_VBZ to_TO detect_VB broken_JJ access_NN control_NN attacks_NNS ,_, either_CC by_IN testing_NN or_CC by_IN model_NN checking_NN ._.
In_IN our_PRP$ previous_JJ work_NN -LRB-_-LRB- 7_CD ,_, 8_CD -RRB-_-RRB- ,_, we_PRP found_VBD that_IN many_JJ methods_NNS propose_VBP static_JJ models_NNS and_CC tools_NNS to_TO
ipting_VBG before_IN the_DT application_NN goes_VBZ into_IN operation_NN ._.
Runtime_NN analysis_NN allows_VBZ exploit_VB prevention_NN and_CC recovery_NN during_IN the_DT operation_NN of_IN an_DT application_NN ._.
The_DT WebSSARI_NN project_NN pioneered_VBD this_DT line_NN of_IN research_NN =_JJ -_: =[_NN 9_CD -RRB-_-RRB- -_: =_JJ -_: ,_, by_IN combining_VBG static_JJ and_CC dynamic_JJ analysis_NN for_IN PHP_NNP programs_NNS ._.
Several_JJ projects_NNS that_WDT came_VBD after_IN WebSSARI_NN improve_VB on_IN the_DT quality_NN of_IN static_JJ analysis_NN for_IN PHP_NN -LRB-_-LRB- 10_CD ,_, 33_CD -RRB-_-RRB- ._.
The_DT Griffin_NNP project_NN proposes_VBZ a_DT scalab_NN
integrity_NN of_IN validation_NN -RRB-_-RRB- has_VBZ been_VBN challenging_VBG ,_, as_IN evidenced_VBN by_IN the_DT frequency_NN of_IN cross-site_JJ scripting_NN attacks_NNS that_WDT are_VBP the_DT result_NN of_IN failing_VBG to_TO properly_RB sanitize_VB or_CC filter_NN all_DT user_NN input_NN consistently_RB =_JJ -_: =[_NN 23_CD ,_, 26_CD ,_, 31_CD ,_, 34_CD ,_, 52_CD -RRB-_-RRB- -_: =_SYM -_: ._.
The_DT problem_NN is_VBZ made_VBN much_RB more_RBR challenging_JJ if_IN the_DT client_NN and_CC server_NN are_VBP expected_VBN to_TO exchange_VB arbitrary_JJ data_NNS structures_NNS ,_, whose_WP$ in-S_NNP Ripley_NNP checker_NN m_NN C_NN m_NN '_'' C_NN '_'' server_NN tier_NN -LRB-_-LRB- runs_VBZ in_IN ._.
NET_NN -RRB-_-RRB- events_NNS =_JJ -LCB-_-LRB- key_JJ =_JJ `_``
the_DT application_NN after_IN the_DT data_NN is_VBZ shared_VBN with_IN the_DT application_NN ._.
There_EX have_VBP been_VBN several_JJ reported_VBN cases_NNS where_WRB users_NNS '_POS private_JJ information_NN was_VBD leaked_VBN by_IN the_DT applications_NNS ,_, either_CC due_JJ to_TO intentional_JJ leaks_NNS =_JJ -_: =[_NN 21_CD -RRB-_-RRB- -_: =_JJ -_: or_CC due_JJ to_TO vulnerabilities_NNS in_IN the_DT application_NN -LRB-_-LRB- 26_CD -RRB-_-RRB- ._.
Most_RBS social_JJ networking_NN platforms_NNS ,_, such_JJ as_IN Facebook_NNP ,_, currently_RB provide_VBP the_DT applications_NNS with_IN full_JJ access_NN to_TO user_NN profile_NN information_NN ._.
This_DT permission_NN
ction_NN ._.
Another_DT significant_JJ focus_NN of_IN research_NN has_VBZ been_VBN on_IN applying_VBG various_JJ static_JJ and_CC dynamic_JJ analyses_NNS to_TO the_DT source_NN code_NN of_IN web_NN applications_NNS in_IN order_NN to_TO identify_VB and_CC mitigate_VB security_NN vulnerabilities_NNS =_JJ -_: =[_NN 21_CD ,_, 33_CD ,_, 25_CD ,_, 2_CD ,_, 7_CD ,_, 50_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT approaches_NNS have_VBP the_DT advantage_NN that_IN developers_NNS can_MD con-tinue_VB to_TO create_VB web_NN applications_NNS using_VBG traditional_JJ languages_NNS and_CC frameworks_NNS ,_, and_CC periodically_RB apply_VB a_DT vulnerability_NN analysis_NN tool_NN to_TO prov_VB
confidentiality_NN or_CC integrity_NN purposes_NNS ._.
Shankar_FW etal_FW ._.
-LRB-_-LRB- 27_CD -RRB-_-RRB- appliedstatictaintanalysis_NN ,_, extendingthe_NN C_NN languagetypequalifier_NN ,_, totaintoruntaintprogramvariablesto_NN detect_VBP format_NN string_NN attacks_NNS ._.
Huang_NNP et_FW al._FW =_SYM -_: =[_NN 24_CD -RRB-_-RRB- -_: =_SYM -_: extended_VBD the_DT PHP_NNP language_NN to_TO track_VB information_NN flow_NN by_IN inserting_VBG type_NN qualifier_NN ._.
Data_NN variables_NNS ,_, associated_VBN with_IN types_NNS ,_, are_VBP classified_VBN with_IN a_DT lattice_NN structure_NN thereby_RB preventing_VBG integrity_NN or_CC confide_VB
analysis_NN ,_, with_IN a_DT focus_NN on_IN detecting_VBG XSS_NNP and_CC SQLI_NNP via_IN information_NN flow_NN ,_, modeling_NN checking_NN analysis_NN ,_, or_CC a_DT combination_NN thereof_RB ._.
Work_NN by_IN Wassermann_NNP -LRB-_-LRB- 20_CD -RRB-_-RRB- ,_, Lam_NN -LRB-_-LRB- 21_CD -RRB-_-RRB- ,_, KieË™zun_NN -LRB-_-LRB- 22_CD -RRB-_-RRB- ,_, Jovanovic_JJ -LRB-_-LRB- 23_CD -RRB-_-RRB- ,_, and_CC Huang_NN =_JJ -_: =[_NN 24_CD -RRB-_-RRB- -_: =_SYM -_: all_DT fall_NN into_IN this_DT category_NN ._.
Kals_FW et_FW ._.
al._FW -LRB-_-LRB- 25_CD -RRB-_-RRB- and_CC McAllister_NNP et_NNP ._.
al._FW -LRB-_-LRB- 26_CD -RRB-_-RRB- implemented_VBD automated_JJ black_JJ box_NN web_NN vulnerability_NN scanners_NNS ,_, with_IN the_DT former_JJ targeting_VBG SQLI_NN and_CC XSS_NN vulnerabilities_NNS and_CC the_DT l_NN
enable_VB monitors_NNS to_TO stop_VB ,_, suppress_VB ,_, and_CC modify_VB the_DT behavior_NN of_IN programs_NNS ._.
Tracking_VBG information_NN flow_NN in_IN web_NN applications_NNS is_VBZ becoming_VBG increasingly_RB important_JJ -LRB-_-LRB- e.g._FW ,_, a_DT server-side_JJ mechanism_NN by_IN Huang_NNP et_FW al._FW =_SYM -_: =[_NN 15_CD -RRB-_-RRB- -_: =_JJ -_: and_CC a_DT client-side_JJ mechanism_NN for_IN JavaScript_NNP by_IN Vogt_NNP et_FW al._FW -LRB-_-LRB- 42_CD -RRB-_-RRB- ,_, although_IN ,_, like_IN a_DT number_NN of_IN related_JJ approaches_NNS ,_, they_PRP do_VBP not_RB discuss_VB soundness_NN -RRB-_-RRB- ._.
Dynamism_NN of_IN web_NN applications_NNS puts_VBZ higher_JJR demands_NNS on_IN the_DT
rtified_VBN web_NN systems_NNS is_VBZ to_TO prove_VB them_PRP correct_JJ by_IN construction_NN at_IN development_NN time_NN ._.
Alternatively_RB ,_, pre-existing_JJ applications_NNS can_MD be14_VB certified_VBN to_TO be_VB free_JJ of_IN certain_JJ errors_NNS through_IN static_JJ analysis_NN ._.
In_IN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_JJ -_: ,_, for_IN instance_NN ,_, the_DT authors_NNS rule_VBP out_RP SQL_NNP injection_NN attacks_NNS for_IN a_DT large_JJ fragment_NN of_IN PHP_NNP using_VBG an_DT information_NN flow_NN analysis_NN to_TO ensure_VB that_IN tainted_JJ application_NN inputs_NNS are_VBP never_RB used_VBN in_IN SQL_NNP queries_NNS withou_VBP
riety_NN of_IN levels_NNS of_IN abstraction_NN ._.
For_IN example_NN ,_, there_EX are_VBP formal_JJ cryptographic_JJ protocols_NNS -LRB-_-LRB- 1_LS -RRB-_-RRB- ,_, session_NN typesystems_NNS for_IN protocol_NN conformance_NN -LRB-_-LRB- 18_CD -RRB-_-RRB- ,_, taint-analyses_NNS for_IN protecting_VBG from_IN code_NN injection_NN attacks_NN =_JJ -_: =[_NN 19_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC tools_NNS for_IN automatically_RB generating_VBG low-level_JJ data_NNS marshaling_VBG code_NN -LRB-_-LRB- 12_CD -RRB-_-RRB- ._.
Given_VBN the_DT wealth_NN of_IN knowledge_NN about_IN how_WRB to_TO verify_VB particular_JJ semantic_JJ properties_NNS ,_, a_DT natural_JJ next_JJ step_NN is_VBZ to_TO verify_VB arbitra_NN
ither_VB the_DT operating_NN system_NN and_CC the_DT libraries_NNS ,_, or_CC the_DT programming_NN language_NN ._.
System-level_JJ techniques_NNS may_MD have_VB runtime_JJ performance_NN overhead_NN up_IN to_TO 40_CD %_NN -LRB-_-LRB- 119_CD -RRB-_-RRB- ._.
Static_JJ and_CC dynamic_JJ approaches_NNS can_MD be_VB combined_VBN =_JJ -_: =[_NN 51_CD ,_, 56_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Lam_NNP et_FW al._FW -LRB-_-LRB- 68_CD -RRB-_-RRB- combine_VBP static_JJ analysis_NN ,_, model_NN checking_NN ,_, and_CC dynamic_JJ monitoring_NN ._.
QED_NN -LRB-_-LRB- 75_CD -RRB-_-RRB- combines_VBZ static_JJ analysis_NN and_CC model_NN checking_NN to_TO automatically_RB create_VB SQLI_NN and_CC first-order_JJ XSS_NN attacks_NNS on_IN Java_NNP
within_IN its_PRP$ own_JJ emulation_NN environment_NN ._.
Xu_FW et_FW al._FW -LRB-_-LRB- 19_CD -RRB-_-RRB- leverage_NN the_DT source_NN code_NN of_IN a_DT program_NN produce_VBG a_DT version_NN of_IN that_DT program_NN that_WDT can_MD efficiently_RB track_VB information_NN flow_NN and_CC identify_VB attacks_NNS ._.
WebSSARI_NN =_SYM -_: =[_NN 12_CD -RRB-_-RRB- -_: =_SYM -_: targets_VBZ web_NN applications_NNS written_VBN in_IN PHP_NNP specifically_RB with_IN static_JJ analysis_NN to_TO identify_VB the_DT information_NN flow_NN of_IN unvalidated_JJ input_NN and_CC adds_VBZ runtime_NN sanitization_NN routines_NNS to_TO potentially_RB vulnerable_JJ code_NN u_NN
server_NN ._.
The_DT server_NN is_VBZ then_RB protected_VBN by_IN a_DT proxy_NN that_WDT filters_VBZ possibly_RB malicious_JJ clients_NNS which_WDT do_VBP not_RB conform_VB to_TO the_DT extracted_VBN behavior_NN ._.
Finally_RB ,_, our_PRP$ work_NN is_VBZ related_JJ to_TO a_DT large_JJ corpus_NN of_IN work_NN ,_, such_JJ as_IN =_JJ -_: =[_NN 16_CD ,_, 5_CD ,_, 7_CD ,_, 17_CD ,_, 18_CD ,_, 22_CD ,_, 26_CD ,_, 30_CD ,_, 33_CD ,_, 36_CD ,_, 23_CD ,_, 29_CD -RRB-_-RRB- -_: =_JJ -_: ,_, in_IN the_DT area_NN of_IN vulnerability_NN analysis_NN of_IN web_NN applications_NNS ._.
However_RB ,_, most_JJS of_IN these_DT research_NN works_VBZ focus_NN on_IN the_DT detection_NN of_IN or_CC the_DT protection_NN against_IN input-validation_JJ attacks_NNS ,_, which_WDT do_VBP not_RB require_VB an_DT
r_NN SQL_NN injections_NNS ,_, which_WDT remain_VBP the_DT main_JJ attack_NN vectors_NNS of_IN PHP_NNP applications_NNS ._.
Wassermann_NNP and_CC Su_NNP -LRB-_-LRB- 14_CD -RRB-_-RRB- present_JJ work_NN on_IN statically_RB detecting_VBG SQL_NN injections_NNS using_VBG grammar-based_JJ specifications_NNS ._.
Huang_NNP et_FW al._FW =_SYM -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: present_VB a_DT technique_NN to_TO conservatively_RB prevent_VB ,_, rather_RB than_IN detect_VB ,_, similar_JJ attacks_NNS ._.
They_PRP use_VBP a_DT combination_NN of_IN code_NN instrumentation_NN ,_, to_TO automatically_RB secure_VB PHP_NNP scripts_NNS ,_, and_CC a_DT static_JJ taint_NN analysis_NN ,_, t_NN
ind_NN security_NN critical_JJ bugs_NNS in_IN applications_NNS ._.
The_DT WebSSARI_NN project_NN pioneered_VBD these_DT approaches_NNS for_IN web_NN applications_NNS ._.
WebSSARI_NN unsound_JJ static_JJ and_CC dynamic_JJ analysis_NN in_IN the_DT context_NN of_IN analyzing_VBG PHP_NNP programs_NNS =_JJ -_: =[_NN 17_CD -RRB-_-RRB- -_: =_SYM -_: ._.
WebSSARI_NN has_VBZ successfully_RB been_VBN applied_VBN to_TO find_VB many_JJ SQL_NNP injection_NN and_CC cross-site_JJ scripting_NN vulnerabilities_NNS in_IN PHP_NNP code_NN ._.
Several_JJ projects_NNS that_WDT came_VBD after_IN WebSSARI_NN improve_VB on_IN the_DT quality_NN of_IN static_JJ ana_NN
has_VBZ been_VBN used_VBN to_TO track_VB when_WRB code_NN unpacking_NN is_VBZ used_VBN in_IN malware_NN -LRB-_-LRB- 65_CD -RRB-_-RRB- ._.
Web_NN Applications_NNS ._.
Many_JJ analyses_NNS of_IN Web_NN applications_NNS utilize_VBP dynamic_JJ taint_NN analysis_NN to_TO detect_VB common_JJ attacks_NNS such_JJ as_IN SQL_NN injections_NNS =_JJ -_: =[_NN 5_CD ,_, 39_CD ,_, 40_CD ,_, 51_CD ,_, 56_CD ,_, 62_CD -RRB-_-RRB- -_: =_JJ -_: and_CC cross-site_JJ scripting_NN attacks_NNS -LRB-_-LRB- 54_CD ,_, 56_CD ,_, 61_CD -RRB-_-RRB- ._.
Some_DT researchers_NNS have_VBP also_RB combined_VBN dynamic_JJ taint_NN analysis_NN with_IN static_JJ analysis_NN to_TO find_VB bugs_NNS in_IN Web_NN applications_NNS -LRB-_-LRB- 5_CD ,_, 62_CD -RRB-_-RRB- ._.
Sekar_NN -LRB-_-LRB- 56_CD -RRB-_-RRB- ,_, introduced_VBN taint_NN i_FW
int_NN analysis_NN in_IN a_DT form_NN of_IN execution_NN monitors_NNS -LRB-_-LRB- 2_CD ,_, 3_CD -RRB-_-RRB- ._.
In_IN that_DT manner_NN ,_, not_RB only_RB run_VB interpreters_NNS code_NN ,_, but_CC they_PRP also_RB perform_VBP security_NN checks_NNS ._.
Taint_NN analysis_NN can_MD also_RB be_VB provided_VBN through_IN static_JJ analysis_NN =_JJ -_: =[_NN 16_CD ,_, 17_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Nevertheless_RB ,_, execution_NN monitors_NNS usually_RB produce_VBP less_RBR false_JJ alarms_NNS than_IN traditional_JJ static_JJ 1techniques_NNS -LRB-_-LRB- 28_CD -RRB-_-RRB- ._.
In_IN particular_JJ ,_, static_JJ techniques_NNS can_MD not_RB deal_VB with_IN dynamic_JJ code_NN evaluation_NN without_IN being_VBG
st_IN other_JJ techniques_NNS focus_VB on_IN dynamic_JJ security_NN analysis_NN ,_, including_VBG testing_NN and_CC monitoring_NN -LRB-_-LRB- 22_CD ,_, 24_CD ,_, 28_CD ,_, 31_CD ,_, 34_CD ,_, 55_CD ,_, 57_CD ,_, 68_CD -RRB-_-RRB- ._.
Finally_RB ,_, several_JJ techniques_NNS combine_VBP static_JJ and_CC dynamic_JJ analysis_NN for_IN security_NN =_JJ -_: =[_NN 8_CD ,_, 32_CD ,_, 35_CD ,_, 42_CD ,_, 62_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Our_PRP$ symbolic_JJ execution-based_JJ technique_NN is_VBZ similar_JJ in_IN the_DT spirit_NN ,_, since_IN it_PRP exploits_VBZ the_DT precision_NN of_IN dynamic_JJ analysis_NN for_IN guarantees_NNS similar_JJ to_TO static_JJ analysis_NN ._.
Some_DT recent_JJ tools_NNS use_VBP symbolic_JJ executi_NNS
lly_RB detect_VB web_NN application_NN vulnerabilities_NNS through_IN static_JJ analysis_NN ._.
Pixy_NNP is_VBZ able_JJ to_TO identify_VB flaws_NNS that_WDT lead_VBP to_TO SQL_NN injection_NN ,_, cross-site_JJ scripting_NN ,_, or_CC command_NN injection_NN vulnerabilities_NNS ._.
Huang_NNP et_FW al._FW =_SYM -_: =[_NN 18_CD -RRB-_-RRB- -_: =_SYM -_: also_RB perform_VB static_JJ source_NN code_NN analysis_NN to_TO automatically_RB add_VB runtime_NN protection_NN mechanisms_NNS to_TO web_NN applications_NNS ._.
Similarly_RB ,_, Wassermann_NNP et_FW al._FW -LRB-_-LRB- 37_CD -RRB-_-RRB- propose_VBP a_DT static_JJ string_NN analysis-based_JJ approach_NN to_TO a_DT
XSS_NN ,_, SQLinjection_NN ,_, directory_NN traversal_NN ,_, cross-site_JJ request_NN forgery_NN and_CC command_NN injection_NN havebeenthemostimportantkindofwebvulnerabilitiesin_NN the_DT last_JJ few_JJ years_NNS -LRB-_-LRB- 36_CD -RRB-_-RRB- ._.
Techniques_NNS including_VBG static_JJ analyses_NNS =_JJ -_: =[_NN 22,24_CD -RRB-_-RRB- -_: =_JJ -_: ,_, model_NN checking_NN -LRB-_-LRB- 28_CD -RRB-_-RRB- ,_, mixed_JJ static-dynamic_JJ analyses_NNS -LRB-_-LRB- 4_CD -RRB-_-RRB- ,_, aswellasdecisionprocedurebasedautomated_JJ analyses_NNS -LRB-_-LRB- 21,25_CD -RRB-_-RRB- havebeendevelopedforserver-sideapplications_NNS written_VBN in_IN PHP_NNP and_CC Java_NNP ._.
Of_IN these_DT techniques_NNS ,_,
ies_NNS ._.
Mostofthevulnerabilitydetectiontechniqueshavefocused_VBN on_IN server-side_JJ application_NN code_NN ._.
We_PRP classify_VBP them_PRP based_VBN on_IN thenature_NN of_IN the_DT analysis_NN ,_, below_IN ._.
â€¢_FW StaticandQuasi-statictechniques_FW ._.
Staticanalysis_NN =_JJ -_: =[_NN 13_CD ,_, 16_CD ,_, 23_CD -RRB-_-RRB- -_: =_JJ -_: and_CC model_NN checking_NN techniques_NNS -LRB-_-LRB- 22_CD -RRB-_-RRB- aim_NN to_TO identify_VB cases_NNS where_WRB the_DT web_NN application_NN code_NN fails_VBZ to_TO sanitize_VB the_DT input_NN before_IN output_NN ._.
Most_RBS static_JJ analysis_NN tools_NNS are_VBP equipped_VBN with_IN the_DT policy_NN that_WDT once_RB da_NN
an_DT be_VB further_RB classified_VBN into_IN dynamic_JJ and_CC static_JJ approaches_NNS ._.
Dynamic_NNP tools_NNS -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 1_CD ,_, 2_CD ,_, 3_CD -RRB-_-RRB- ,_, and_CC Perl_NNP 's_POS taint_NN mode_NN try_VBP to_TO detect_VB attacks_NNS while_IN executing_VBG the_DT audited_JJ program_NN ,_, whereas_IN static_JJ analyzers_NNS -LRB-_-LRB- =_JJ -_: =[_NN 4_CD ,_, 5_CD ,_, 6_CD ,_, 7_CD -RRB-_-RRB- -_: =--RRB-_NN scan_VB the_DT Web_NN application_NN 's_POS source_NN codes_NNS for_IN vulnerabilities_NNS ._.
From_IN the_DT static_JJ point_NN of_IN view_NN ,_, applications_NNS could_MD be_VB statically_RB analyzed_VBN where_WRB it_PRP can_MD protect_VB applications_NNS before_IN actually_RB running_VBG them_PRP ,_,
pen_NN source_NN and_CC commercial_JJ Static_JJ Analysis_NN Tools_NNS ,_, e.g._FW RATS_NNS -LRB-_-LRB- 86_CD -RRB-_-RRB- ,_, Coverity_NN -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, Yasca_NN -LRB-_-LRB- 85_CD -RRB-_-RRB- ,_, Klocwork_NN -LRB-_-LRB- 52_CD -RRB-_-RRB- covering_VBG different_JJ programming_NN languages_NNS and_CC using_VBG different_JJ analysis_NN methods_NNS ._.
The_DT authors_NNS of_IN =_JJ -_: =[_NN 41_CD -RRB-_-RRB- -_: =_SYM -_: demonstrate_VBP an_DT approach_NN for_IN static_JJ code_NN analysis_NN specifically_RB for_IN web_NN applications_NNS ._.
However_RB ,_, Static_JJ Analysis_NN Tools_NNS also_RB have_VBP limitations_NNS ,_, particularly_RB in_IN identifying_VBG design_NN and_CC architecture_NN issues_NNS an_DT
cked_VBN input_NN strings_NNS to_TO compose_VB SQL_NN queries_NNS and_CC then_RB have_VB the_DT DBMS_NNP execute_VB query_NN ,_, which_WDT potentially_RB allows_VBZ the_DT attacker_NN to_TO insert_VB arbitrary_JJ commands_NNS in_IN the_DT SQL_NN query_NN -LRB-_-LRB- the_DT so-called_JJ SQL-injection_NN attack_NN -RRB-_-RRB- =_JJ -_: =[_NN 17_CD -RRB-_-RRB- -_: =_SYM -_: ._.
To_TO prevent_VB this_DT ,_, we_PRP need_VBP to_TO make_VB sure_JJ that_IN the_DT queries_NNS performed_VBN by_IN the_DT system_NN comply_VB with_IN the_DT desired_VBN security_NN policies_NNS on_IN the_DT data_NNS stored_VBN in_IN the_DT database_NN ._.
In_IN current_JJ development_NN environments_NNS ,_, if_IN w_NN
against_IN SQL_NNP injection_NN ._.
The_DT most_RBS popular_JJ ones_NNS are_VBP -LRB-_-LRB- i_LS -RRB-_-RRB- ``_`` tainting_VBG ''_'' and_CC tracking_VBG user_NN inputs_NNS -LRB-_-LRB- 5_CD -RRB-_-RRB- -LRB-_-LRB- 7_CD -RRB-_-RRB- ;_: -LRB-_-LRB- ii_LS -RRB-_-RRB- statically_RB analyzing_VBG the_DT correctness_NN of_IN SQL_NN statements_NNS -LRB-_-LRB- 1_LS -RRB-_-RRB- -LRB-_-LRB- 11_CD -RRB-_-RRB- -LRB-_-LRB- 15_CD -RRB-_-RRB- ;_: and_CC -LRB-_-LRB- iii_LS -RRB-_-RRB- SQL_NN Randomization_NN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_JJ -_: ,_, i.e._FW ,_, appending_VBG random_JJ numbers_NNS to_TO SQL_NNP statements_NNS in_IN the_DT source_NN code_NN and_CC letting_VBG the_DT SQL_NN parser_NN to_TO reject_VB statements_NNS not_RB containing_VBG such_JJ random_JJ numbers_NNS ._.
On_IN the_DT other_JJ side_NN ,_, there_EX are_VBP approaches_NNS aimed_VBN
or_CC ._.
It_PRP is_VBZ a_DT technique_NN that_WDT may_MD corrupt_JJ the_DT information_NN in_IN the_DT database_NN i.e._FW deletes_VBZ or_CC changes_VBZ the_DT full_JJ database_NN or_CC records_NNS or_CC tables_NNS ._.
To_TO exploit_VB the_DT database_NN system_NN ,_, some_DT vulnerable_JJ web_NN applications_NNS =_JJ -_: =[_NN 9_CD -RRB-_-RRB- -_: =_SYM -_: are_VBP used_VBN by_IN the_DT attackers_NNS ._.
These_DT attacks_NNS not_RB only_RB make_VB the_DT attacker_NN to_TO breach_VB the_DT security_NN and_CC steal_VB the_DT entire_JJ content_NN of_IN the_DT database_NN but_CC also_RB ,_, to_TO make_VB arbitrary_JJ changes_NNS to_TO both_CC the_DT database_NN schema_NN
e_LS data_NN disclosure_NN ._.
Such_JJ data_NNS disclosure_NN is_VBZ often_RB caused_VBN by_IN insufficient_JJ authorisation_NN ,_, missing_VBG access_NN control_NN checks_NNS or_CC by_IN errors_NNS in_IN application_NN semantics_NNS ._.
Potential_JJ solutions_NNS include_VBP static_JJ analysis_NN =_JJ -_: =[_NN 9_CD ,_, 10_CD -RRB-_-RRB- -_: =_JJ -_: ,_, symbolic_JJ execution_NN -LRB-_-LRB- 3_CD -RRB-_-RRB- and_CC runtime_NN taint_NN tracking_NN -LRB-_-LRB- 4_CD ,_, 28_CD ,_, 14_CD ,_, 16_CD ,_, 30_CD -RRB-_-RRB- ._.
Static_JJ analysis_NN tools_NNS for_IN dynamic_JJ web_NN languages_NNS often_RB have_VBP high_JJ false_JJ positive_JJ rates_NNS -LRB-_-LRB- 9_CD -RRB-_-RRB- or_CC do_VBP not_RB support_VB all_DT language_NN feature_NN
ly_RB ._.
III_NNP ._.
OUTLINE_VB OF_IN THE_DT ANALYSIS_NN We_PRP adapt_VBP the_DT well-known_JJ approach_NN to_TO static_JJ information_NN flow_NN analysis_NN for_IN identifying_VBG the_DT possible_JJ dataflow_NN from_IN sources_NNS to_TO sinks_NNS that_WDT does_VBZ not_RB pass_VB through_IN sanitizers_NNS =_JJ -_: =[_NN 8_CD -RRB-_-RRB- -_: =_JJ -_: ,_, -LRB-_-LRB- 11_CD -RRB-_-RRB- ,_, -LRB-_-LRB- 14_CD -RRB-_-RRB- ,_, -LRB-_-LRB- 22_CD -RRB-_-RRB- ,_, -LRB-_-LRB- 24_CD -RRB-_-RRB- ,_, -LRB-_-LRB- 25_CD -RRB-_-RRB- :_: â€¢_CD The_DT sources_NNS in_IN our_PRP$ setting_NN are_VBP the_DT locations_NNS in_IN the_DT code_NN where_WRB client-state_JJ parameters_NNS are_VBP read_VBN ._.
With_IN common_JJ web_NN application_NN frameworks_NNS ,_, such_JJ as_IN Java_NNP Servlets_NNP ,_, JSP_NNP ,_, a_DT
application_NN developers_NNS ._.
2_CD ._.
Related_NNP Work_NNP Finding_NNP security_NN vulnerabilities_NNS in_IN Web_NN applications_NNS ._.
A_DT lot_NN of_IN research_NN has_VBZ been_VBN devoted_VBN to_TO finding_VBG and_CC analyzing_VBG data-flow_JJ vulnerabilities_NNS in_IN Web_NN applications_NNS =_JJ -_: =[_NN 9_CD ,_, 10_CD ,_, 13_CD ,_, 25_CD ,_, 26_CD -RRB-_-RRB- -_: =_SYM -_: ._.
This_DT taint_NN analysis_NN focuses_VBZ on_IN cross-site_JJ scripting_NN and_CC SQL_NN injection_NN vulnerabilities_NNS ,_, in_IN which_WDT untrusted_JJ user_NN in-puts_JJ flow_NN into_IN sensitive_JJ database_NN operations_NNS without_IN proper_JJ sanitation_NN ._.
Missing-che_NN
lled_VBN from_IN an_DT external_JJ user_NN -RRB-_-RRB- are_VBP likely_JJ to_TO occur_VB ._.
2.2.1_CD Static_JJ Approaches_NNPS Past_NNP research_NN has_VBZ suggested_VBN static_JJ analysis_NN tools_NNS that_WDT detect_VBP injection_NN vulnerabilities_NNS in_IN PHP_NNP scripts_NNS ._.
Pixy_NN -LRB-_-LRB- 11_CD -RRB-_-RRB- and_CC WebSSARI_NN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: rely_VBP on_IN data_NN flow_NN analysis_NN to_TO detect_VB sensitive_JJ functions_NNS that_WDT may_MD receive_VB user_NN data_NNS without_IN sanitisation_NN and_CC produce_NN warnings_NNS ._.
Wassermann_NNP and_CC Su_NNP -LRB-_-LRB- 16_CD -RRB-_-RRB- model_NN string_NN values_NNS and_CC operations_NNS as_IN grammars_NNS an_DT
ING_NN 211_CD vulnerabilities_NNS as_IN information_NN flows_NNS that_WDT allow_VBP untrusted_JJ data_NNS to_TO perform_VB sensitive_JJ operations_NNS at_IN certain_JJ points_NNS in_IN the_DT applications_NNS ._.
Techniques_NNS such_JJ as_IN PQL_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- and_CC information_NN flow_NN analysis_NN =_JJ -_: =[_NN 18_CD -RRB-_-RRB- -_: =_SYM -_: allow_VB developers_NNS to_TO model_VB the_DT different_JJ possible_JJ vulnerabilities_NNS using_VBG an_DT information-flow_JJ description_NN language_NN ._.
These_DT techniques_NNS analyze_VBP a_DT web_NN application_NN and_CC identify_VBP information_NN flows_VBZ that_IN might_NN c_NN
ogle_VB Analytics_NNP ,_, Facebook_NNP and_CC Twitter_NNP have_VBP had_VBN XSS_NN issues_NNS in_IN recent_JJ years_NNS despite_IN intense_JJ research_NN on_IN the_DT subject_NN -LRB-_-LRB- 34_CD ,_, 52_CD ,_, 61_CD -RRB-_-RRB- ._.
Though_IN XSS_NN mitigation_NN and_CC analysis_NN techniques_NNS have_VBP enjoyed_VBN intense_JJ focus_NN =_JJ -_: =[_NN 6_CD ,_, 7_CD ,_, 12_CD ,_, 13_CD ,_, 33_CD ,_, 36_CD ,_, 37_CD ,_, 39_CD ,_, 41_CD ,_, 43_CD ,_, 44_CD ,_, 47_CD ,_, 49_CD ,_, 50_CD ,_, 59_CD ,_, 64_CD ,_, 66_CD ,_, 68_CD -RRB-_-RRB- -_: =_JJ -_: ,_, research_NN has_VBZ paid_VBN little_JJ or_CC no_DT attention_NN to_TO a_DT promising_JJ sets_NNS of_IN tools_NNS for_IN solving_VBG the_DT XSS_NN riddle_NN --_: web_NN application_NN frameworks_NNS --_: which_WDT are_VBP gaining_VBG wide_JJ adoption_NN -LRB-_-LRB- 18_CD ,_, 21_CD ,_, 22_CD ,_, 28_CD ,_, 35_CD ,_, 42_CD ,_, 48_CD ,_, 55_CD ,_, 58_CD ,_, 69_CD ,_, 7_CD
nalysis_NN and_CC runtime_NN analysis_NN ._.
The_DT static_JJ analysis_NN used_VBN for_IN commands_NNS identification_NN is_VBZ achieved_VBN through_IN stored_VBN procedure_NN parser_NN and_CC the_DT runtime_NN analysis_NN by_IN using_VBG a_DT SQLChecker_NN for_IN input_NN identification_NN ._.
=_SYM -_: =[_NN 20_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBD a_DT combination_NN of_IN static_JJ analysis_NN and_CC runtime_NN monitoring_NN to_TO fortify_VB the_DT security_NN of_IN potential_JJ vulnerabilities_NNS ._.
Parse_NNP Tree_NNP Validation_NNP Approach_NNP -_: Buehrer_NNP et_FW al._FW -LRB-_-LRB- 21_CD -RRB-_-RRB- adopt_VB the_DT parse_NN tree_NN framew_NN
BLUEPRINT_NN ,_, it_PRP would_MD be_VB difficult_JJ to_TO deploy_VB with_IN a_DT secure_JJ setting_NN on_IN complex_JJ applications_NNS ._.
4_CD Related_NNP Work_NNP There_EX is_VBZ extensive_JJ work_NN how_WRB to_TO discover_VB and_CC eliminate_VB XSS_NN vulnerabilities_NNS in_IN web_NN applications_NNS =_JJ -_: =[_NN 7_CD ,_, 27_CD ,_, 9_CD ,_, 10_CD ,_, 28_CD -RRB-_-RRB- -_: =_SYM -_: ._.
There_EX has_VBZ been_VBN work_NN on_IN both_DT eliminating_VBG these_DT vulnerabilities_NNS on_IN the_DT server_NN and_CC in_IN the_DT client_NN ._.
This_DT work_NN has_VBZ focused_VBN on_IN treating_VBG XSS_NN as_IN a_DT bug_NN to_TO be_VB eliminated_VBN from_IN an_DT application_NN ,_, keeping_VBG XSS_NN vulner_NN
focuses_VBZ on_IN verification_NN of_IN security_NN properties_NNS ._.
Lam_NNP et_FW al._FW -LRB-_-LRB- 13_CD -RRB-_-RRB- combine_VBP static_JJ analysis_NN with_IN model_NN checking_NN to_TO verify_VB that_IN information-flow_JJ patterns_NNS are_VBP satisfied_VBN in_IN Java-like_JJ programs_NNS ._.
Huang_NNP et_FW al._FW =_SYM -_: =[_NN 11_CD -RRB-_-RRB- -_: =_SYM -_: use_VB a_DT lattice-based_JJ static_JJ analysis_NN algorithm_NN derived_VBN from_IN type_NN systems_NNS and_CC typestate_NN to_TO ensure_VB similar_JJ information-flow_JJ properties_NNS ._.
The_DT tool_NN TAJ_NN -LRB-_-LRB- 25_CD -RRB-_-RRB- performs_VBZ taint_NN analysis_NN of_IN web_NN applications_NNS writ_VBP
token_JJ prior_RB to_TO requesting_VBG data_NNS from_IN the_DT user_NN ,_, store_VBP the_DT token_JJ on_IN the_DT server_NN ,_, embed_VBD it_PRP to_TO the_DT URL_NN or_CC the_DT form_NN and_CC then_RB to_TO check_VB whether_IN the_DT request_NN contains_VBZ the_DT token_JJ ._.
3_CD State_NN of_IN the_DT art_NN Huang_NNP et_FW al._FW =_SYM -_: =[_NN 9_CD -RRB-_-RRB- -_: =_SYM -_: developed_VBD intraprocedural_JJ static_JJ analysis_NN for_IN PHP_NNP applications_NNS in_IN WebSSARI_NN tool_NN ._.
Xie_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- discusses_VBZ the_DT limitations_NNS of_IN his_PRP$ approach_NN ,_, in_IN particular_JJ that_IN it_PRP is_VBZ interprocedural_JJ and_CC it_PRP does_VBZ not_RB model_VB dyn_NN
e_LS was_VBD implemented_VBN in_IN interpreter_NN by_IN means_NNS of_IN dynamic_JJ analysis_NN ._.
Other_JJ implementations_NNS of_IN Tainted_JJ mode_NN were_VBD done_VBN later_RB for_IN Ruby_NNP -LRB-_-LRB- 4_CD -RRB-_-RRB- ,_, PHP_NN -LRB-_-LRB- 5_CD -RRB-_-RRB- ,_, and_CC Java_NNP -LRB-_-LRB- 6_CD -RRB-_-RRB- ._.
After_IN all_DT Tainted_NNP Mode_NNP was_VBD implemented_VBN in_IN PHP_NN =_JJ -_: =[_NN 7_CD ,_, 15_CD -RRB-_-RRB- -_: =_JJ -_: and_CC Java_NNP -LRB-_-LRB- 9_CD -RRB-_-RRB- by_IN means_NNS of_IN static_JJ analysis_NN ._.
However_RB ,_, there_EX is_VBZ no_DT implementation_NN of_IN Tainted_NNP Mode_NNP for_IN Python_NNP technology_NN ._.
Although_IN Python_NNP is_VBZ spreading_VBG fast_RB inside_IN web_NN development_NN -LRB-_-LRB- see_VB Trac_NNP -LRB-_-LRB- 10_CD -RRB-_-RRB- ,_, Wiki_NN -LRB-_-LRB- 11_CD -RRB-_-RRB-
d_NN these_DT errors_NNS using_VBG static_JJ analysis_NN ._.
This_DT approach_NN has_VBZ been_VBN explored_VBN in_IN WebYichen_NNP Xie_NNP Alex_NNP Aiken_NNP Computer_NNP Science_NNP Department_NNP Stanford_NNP University_NNP Stanford_NNP ,_, CA_NNP 94305_CD -LCB-_-LRB- yxie,aiken}@cs.stanford.edu_NN SSARI_NN =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_JJ -_: and_CC by_IN Minamide_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ._.
WebSSARI_NN has_VBZ been_VBN used_VBN to_TO find_VB a_DT number_NN of_IN security_NN vulnerabilities_NNS in_IN PHP_NNP scripts_NNS ,_, but_CC has_VBZ a_DT large_JJ number_NN of_IN false_JJ positives_NNS and_CC negatives_NNS due_JJ to_TO its_PRP$ intraprocedural_JJ type-based_JJ
ce_IN our_PRP$ approach_NN is_VBZ at_IN the_DT level_NN of_IN programming_NN language_NN semantics_NNS ,_, we_PRP are_VBP able_JJ to_TO perform_VB precise_JJ tainting_NN with_IN minimal_JJ overhead_NN ._.
Huang_NNP et_NNP ._.
al_NNP developed_VBD a_DT hybrid_NN approach_NN to_TO securing_VBG web_NN applications_NNS =_JJ -_: =_JJ -LRB-_-LRB- Hua04_NN -RRB-_-RRB- -_: =_SYM -_: ._.
Their_PRP$ WebSSARI_NN tool_NN used_VBD a_DT static_JJ analysis_NN based_VBN on_IN type-based_JJ information_NN flow_NN to_TO identify_VB possible_JJ vulnerabilities_NNS in_IN PHP_NNP web_NN applications_NNS ._.
Input_NN from_IN external_JJ sources_NNS is_VBZ considered_VBN tainted_JJ and_CC a_DT
ns_NN is_VBZ part_NN of_IN application_NN logic_NN ._.
Without_IN more_RBR precise_JJ taint_NN analysis_NN ,_, such_JJ as_IN what_WP we_PRP do_VBP in_IN this_DT paper_NN ,_, it_PRP is_VBZ n't_RB possible_JJ to_TO distinguish_VB between_IN real_JJ vulnerabilities_NNS and_CC benign_JJ dependencies_NNS ._.
WebSSARI_NN =_SYM -_: =[_NN 12_CD -RRB-_-RRB- -_: =_SYM -_: uses_VBZ a_DT type_NN inference_NN based_VBN information_NN flow_NN analysis_NN to_TO find_VB out_RP potentially_RB dangerous_JJ flows_NNS in_IN PHP_NNP applications_NNS ._.
When_WRB it_PRP finds_VBZ such_JJ a_DT flow_NN ,_, it_PRP inserts_NNS checking_VBG functions_NNS that_WDT perform_VBP comprehensive_JJ
way_NN to_TO capture_VB important_JJ coding_NN rules_NNS ._.
1_CD Introduction_NN A_NN great_JJ deal_NN of_IN attention_NN has_VBZ lately_RB been_VBN given_VBN to_TO addressing_VBG software_NN bugs_NNS such_JJ as_IN errors_NNS in_IN operating_NN system_NN drivers_NNS -LRB-_-LRB- 4_CD ,_, 6_CD -RRB-_-RRB- or_CC security_NN errors_NNS =_JJ -_: =[_NN 10_CD ,_, 16_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT represent_VBP critical_JJ errors_NNS in_IN widely_RB used_VBN software_NN and_CC tend_VB to_TO get_VB fixed_VBN relatively_RB quickly_RB when_WRB found_VBN ._.
A_DT variety_NN of_IN static_JJ and_CC dynamic_JJ analysis_NN tools_NNS have_VBP been_VBN developed_VBN to_TO address_VB these_DT high_JJ -_:
be_VB further_RB classified_VBN into_IN dynamic_JJ and_CC static_JJ approaches_NNS ._.
Dynamic_NNP tools_NNS -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 9_CD ,_, 18_CD ,_, 21_CD -RRB-_-RRB- ,_, and_CC Perl_NNP 's_POS taint_NN mode_NN try_VBP to_TO detect_VB attacks_NNS while_IN executing_VBG the_DT audited_JJ program_NN ,_, whereas_IN static_JJ analyzers_NNS -LRB-_-LRB- =_JJ -_: =[_NN 10_CD ,_, 11_CD ,_, 15_CD ,_, 16_CD -RRB-_-RRB- -_: =--RRB-_NN scan_VB the_DT Web_NN application_NN 's_POS source_NN code_NN for_IN vulnerabilities_NNS ._.
In_IN this_DT paper_NN ,_, we_PRP present_VBP Pixy_NNP ,_, the_DT first_JJ open_JJ source_NN tool_NN for_IN statically_RB detecting_VBG XSS_NN vulnerabilities_NNS in_IN PHP_NN 4_CD -LRB-_-LRB- 20_CD -RRB-_-RRB- code_NN by_IN means_NNS of_IN dat_NN
plication_NN bugs_NNS and_CC the_DT application_NN of_IN formal_JJ verification_NN techniques_NNS ._.
We_PRP recently_RB used_VBD a_DT combination_NN of_IN static_JJ and_CC runtime_NN techniques_NNS to_TO create_VB a_DT holistic_JJ approach_NN to_TO ensuring_VBG Web_NN application_NN quality_NN =_JJ -_: =[_NN 14_CD -RRB-_-RRB- -_: =_SYM -_: ._.
The_DT tool_NN that_WDT resulted_VBD --_: which_WDT we_PRP named_VBD WebSSARI_NN -LRB-_-LRB- Web_NN application_NN Security_NNP via_IN Static_NNP Analysis_NNP and_CC Runtime_NNP Inspection_NNP -RRB-_-RRB- --_: aimed_VBN to_TO a_DT -RRB-_-RRB- statically_RB verify_VB existing_VBG Web_NN application_NN code_NN without_IN any_DT additiona_NN
e_LS the_DT least_JJS expected_VBN input_NN to_TO exploit_VB these_DT vulnerabilities_NNS and_CC compromise_VB the_DT system_NN ._.
A_DT natural_JJ alternative_NN is_VBZ to_TO find_VB these_DT errors_NNS using_VBG static_JJ analysis_NN ._.
This_DT approach_NN has_VBZ been_VBN explored_VBN in_IN WebSSARI_NN =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_JJ -_: and_CC by_IN Minamide_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ._.
WebSSARI_NN has_VBZ been_VBN used_VBN to_TO find_VB a_DT number_NN of_IN security_NN vulnerabilities_NNS in_IN PHP_NNP scripts_NNS ,_, but_CC has_VBZ a_DT large_JJ number_NN of_IN false_JJ positives_NNS and_CC negatives_NNS due_JJ to_TO its_PRP$ intraprocedural_JJ type-based_JJ
Production_NN \/_: Development_NNP No_NNP Yes_NNP No_NNP Yes_NNP No_NNP WAVES_NNP -LRB-_-LRB- 51_CD -RRB-_-RRB- ,_, AppScan_NN -LRB-_-LRB- 94_CD -RRB-_-RRB- ,_, WebInspect_NN -LRB-_-LRB- 104_CD -RRB-_-RRB- ,_, ScanDo_NN -LRB-_-LRB- 60_CD -RRB-_-RRB- Verification_NNP Development_NNP No_NNP Yes_NNP No_NNP No_NNP Yes_NNP RATS_NNP -LRB-_-LRB- 102_CD -RRB-_-RRB- Blended_JJ Production_NN \/_: Yes_NNP Yes_NNP Yes_NNP No_NNP Yes_NNP WebSSARI_NN =_JJ -_: =[_NN 53_CD -RRB-_-RRB- -_: =_JJ -_: -LRB-_-LRB- 54_CD -RRB-_-RRB- sDevelopment_NN Table_NNP 1_CD --_: A_DT comparison_NN of_IN the_DT three_CD different_JJ strategies_NNS for_IN Web_NN application_NN security_NN 2.1_CD Protection_NN Mechanisms_NNS Installed_VBN at_IN the_DT deployment_NN phase_NN and_CC capable_JJ of_IN offering_VBG immediate_JJ secu_NN
identify_VB attacks_NNS against_IN web_NN servers_NNS and_CC their_PRP$ applications_NNS -LRB-_-LRB- 1_CD ,_, 9_CD -RRB-_-RRB- ._.
Also_RB ,_, code_NN analysis_NN tools_NNS were_VBD proposed_VBN that_IN check_NN applications_NNS for_IN the_DT existence_NN of_IN bugs_NNS that_WDT can_MD lead_VB to_TO security_NN vulnerabilities_NNS =_JJ -_: =[_NN 4_CD ,_, 7_CD -RRB-_-RRB- -_: =_SYM -_: ._.
In_IN particular_JJ ,_, cross_JJ site_NN scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- attacks_NNS have_VBP received_VBN much_JJ interest_NN ,_, and_CC both_CC server-side_JJ and_CC client-side_JJ solutions_NNS were_VBD proposed_VBN ._.
For_IN example_NN ,_, in_IN -LRB-_-LRB- 3_CD -RRB-_-RRB- ,_, the_DT use_NN of_IN a_DT variety_NN of_IN software-tes_NNS
is_VBZ specialized_VBN to_TO determine_VB whether_IN data_NNS from_IN an_DT untrusted_JJ source_NN flows_VBZ into_IN a_DT sensitive_JJ sink_NN ._.
Static_JJ taint_NN checking_NN has_VBZ a_DT long_JJ history_NN ,_, but_CC Huang_NNP et_FW al._FW were_VBD perhaps_RB the_DT first_JJ to_TO apply_VB it_PRP to_TO SQLCIVs_NNS =_JJ -_: =[_NN 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
They_PRP used_VBD a_DT CQual-like_JJ -LRB-_-LRB- 5_CD -RRB-_-RRB- type_NN system_NN to_TO propagate_VB taint_NN information_NN through_IN PHP_NNP programs_NNS ._.
Livshits_NNP and_CC Lam_NNP -LRB-_-LRB- 17_CD -RRB-_-RRB- used_VBD a_DT precise_JJ points-to_JJ analysis_NN for_IN Java_NNP -LRB-_-LRB- 30_CD -RRB-_-RRB- and_CC queries_NNS specified_VBN in_IN PQL_NN -LRB-_-LRB- 16_CD -RRB-_-RRB- to_TO
s_NN on_IN the_DT fly_NN by_IN requiring_VBG developers_NNS to_TO call_VB a_DT special_JJ function_NN and_CC to_TO pass_VB to_TO the_DT function_NN the_DT query_NN string_NN before_IN user_NN input_NN is_VBZ added_VBN ._.
Other_JJ approaches_NNS against_IN SQLIAs_NNS rely_VBP purely_RB on_IN static_JJ analysis_NN =_JJ -_: =[_NN 13_CD ,_, 14_CD ,_, 15_CD ,_, 27_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT approaches_NNS scan_VBP the_DT application_NN and_CC leverage_NN information_NN flow_NN analysis_NN or_CC heuristics_NNS to_TO detect_VB code_NN that_WDT could_MD be_VB vulnerable_JJ to_TO SQLIAs_NNS ._.
Because_IN of_IN the_DT inherently_RB imprecise_JJ nature_NN of_IN the_DT static_JJ
n_NN -LRB-_-LRB- e.g._FW ,_, Javascript_NNP Prototype_NNP Hijacking_NNP -RRB-_-RRB- -LRB-_-LRB- 54_CD -RRB-_-RRB- ,_, cross-side_JJ scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- vulnerabilities_NNS in_IN servers_NNS ,_, and_CC cross-site_JJ request_NN forgery_NN -LRB-_-LRB- XSRF_NN -RRB-_-RRB- attacks_NNS ._.
Other_JJ research_NN efforts_NNS address_VBP XSS_NN vulnerabilities_NNS =_JJ -_: =[_NN 27_CD ,_, 39_CD ,_, 44_CD ,_, 79_CD ,_, 80_CD -RRB-_-RRB- -_: =_JJ -_: and_CC XSRF_NN attacks_NNS -LRB-_-LRB- 31_CD ,_, 34_CD ,_, 35_CD -RRB-_-RRB- ,_, and_CC these_DT techniques_NNS complement_VBP our_PRP$ work_NN ._.
We_PRP also_RB do_VBP not_RB address_VB browser-side_JJ cross-site_JJ scripting_NN vulnerabilities_NNS ,_, such_JJ as_IN Universal_JJ XSS_NN -LRB-_-LRB- 54_CD -RRB-_-RRB- ._.
5_CD ._.
APPLICATIONS_NNS TO_TO WEB_NN A_NN
lysis_NN allows_VBZ exploit_VB prevention_NN and_CC recovery_NN ._.
The_DT WebSSARI_NN project_NN pioneered_VBD this_DT line_NN of_IN research_NN ._.
WebSSARI_NN uses_VBZ combined_JJ unsound_JJ static_JJ and_CC dynamic_JJ analysis_NN in_IN the_DT context_NN of_IN analyzing_VBG PHP_NNP programs_NNS =_JJ -_: =[_NN 15_CD -RRB-_-RRB- -_: =_SYM -_: ._.
WebSSARI_NN has_VBZ successfully_RB been_VBN applied_VBN to_TO find_VB many_JJ SQL_NNP injection_NN and_CC cross-site_JJ scripting_NN vulnerabilities_NNS in_IN PHP_NNP code_NN ._.
Several_JJ projects_NNS that_WDT came_VBD after_IN WebSSARI_NN improve_VB on_IN the_DT quality_NN of_IN static_JJ ana_NN
y_NN interpreted_VBN by_IN the_DT receiver_NN ._.
Other_JJ disadvantages_NNS include_VBP the_DT size_NN of_IN the_DT proof_NN that_WDT has_VBZ to_TO be_VB shipped_VBN with_IN the_DT code_NN and_CC the_DT type_NN of_IN properties_NNS that_WDT can_MD be_VB verified_VBN using_VBG this_DT approach_NN ._.
Huang_NNP et_FW al._FW =_SYM -_: =[_NN 23_CD -RRB-_-RRB- -_: =_SYM -_: show_VB how_WRB security_NN of_IN web_NN applications_NNS can_MD be_VB improved_VBN by_IN using_VBG a_DT combination_NN of_IN static_JJ analysis_NN and_CC run-time_JJ monitoring_NN ._.
They_PRP do_VBP not_RB use_VB the_DT full_JJ power_NN of_IN static_JJ analysis_NN and_CC use_VB mainly_RB syntax_NN based_VBN
security_NN testing_NN ,_, while_IN providing_VBG full_JJ path_NN coverage_NN ._.
sCHAPTER_NN 1_CD ._.
INTRODUCTION_NN 26_CD â€¢_NN No_DT false_JJ negatives_NNS ._.
Soundness_NN of_IN our_PRP$ technique_NN is_VBZ one_CD of_IN the_DT features_NNS that_WDT set_VBP it_PRP apart_RB from_IN other_JJ security_NN efforts_NNS =_JJ -_: =[_NN 88_CD ,_, 207_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Using_VBG a_DT sound_JJ technique_NN is_VBZ the_DT only_JJ way_NN to_TO provide_VB guarantees_NNS about_IN the_DT security_NN posture_NN of_IN a_DT given_VBN application_NN ,_, as_IN discussed_VBN in_IN Section_NN 3.6_CD ._.
A_DT significant_JJ disadvantage_NN of_IN a_DT static_JJ analyzer_NN is_VBZ that_IN
tacks_NNS discussed_VBN in_IN this_DT paper_NN ._.
Static_JJ Analysis_NN ._.
Static_JJ taint_NN analysis_NN techniques_NNS have_VBP been_VBN proposed_VBN by_IN many_JJ for_IN finding_VBG security_NN vulnerabilities_NNS ,_, including_VBG input_NN validation_NN errors_NNS in_IN web_NN applications_NNS =_JJ -_: =[_NN 17_CD ,_, 14_CD ,_, 32_CD -RRB-_-RRB- -_: =_JJ -_: ,_, user\/kernel_JJ pointer_NN bugs_NNS -LRB-_-LRB- 15_CD -RRB-_-RRB- ,_, format_NN string_NN bugs_NNS -LRB-_-LRB- 26_CD -RRB-_-RRB- ,_, and_CC bugs_NNS in_IN placement_NN of_IN authorization_NN hooks_NNS -LRB-_-LRB- 34_CD -RRB-_-RRB- ._.
The_DT main_JJ advantage_NN of_IN static_JJ analysis_NN -LRB-_-LRB- as_IN compared_VBN to_TO runtime_VB techniques_NNS -RRB-_-RRB- is_VBZ that_IN all_DT poten_NN
equate_VB checks_NNS can_MD result_VB in_IN exploitable_JJ vulnerabilities_NNS ._.
In_IN this_DT section_NN ,_, we_PRP present_VBP only_RB a_DT few_JJ examples_NNS of_IN such_JJ vulnerabilities_NNS ._.
Comprehensive_JJ information_NN on_IN the_DT vulnerabilities_NNS can_MD be_VB obtained_VBN from_IN =_JJ -_: =[_NN 7_CD ,_, 17_CD ,_, 15_CD -RRB-_-RRB- -_: =_SYM -_: ._.
2.1_CD SQL_NN Injection_NN SQL_NN Injection_NN vulnerabilities_NNS occur_VBP when_WRB untrusted_JJ user_NN input_NN is_VBZ used_VBN to_TO construct_VB SQL_NNP commands_NNS ._.
Malicious_JJ input_NN can_MD alter_VB the_DT semantic_JJ meaning_NN of_IN an_DT SQL_NN command_NN ,_, which_WDT on_IN executio_NN
een_NN developed_VBD to_TO help_VB secure_VB web_NN applications_NNS ._.
SABER_NN -LRB-_-LRB- 32_CD -RRB-_-RRB- is_VBZ a_DT static_JJ tool_NN that_WDT detects_VBZ a_DT large_JJ number_NN of_IN common_JJ design_NN errors_NNS based_VBN on_IN instantiations_NNS of_IN a_DT number_NN of_IN error_NN pattern_NN templates_NNS ._.
WebSSARI_NN =_SYM -_: =[_NN 17_CD -RRB-_-RRB- -_: =_JJ -_: and_CC Nguyen-Tuong_NNP et_FW al._FW -LRB-_-LRB- 29_CD -RRB-_-RRB- are_VBP dynamic_JJ systems_NNS that_WDT detects_VBZ failures_NNS to_TO validate_VB input_NN and_CC output_NN in_IN PHP_NNP applications_NNS ._.
While_IN PQL_NN does_VBZ not_RB handle_VB PHP_NNP ,_, in_IN principle_NN these_DT analyses_NNS perform_VBP sequencing_NN ,_,
rmore_NN ,_, a_DT more_RBR flexible_JJ policy_NN can_MD be_VB used_VBN to_TO protect_VB against_IN additional_JJ classes_NNS of_IN bugs_NNS ._.
For_IN example_NN ,_, Web_NN vulnerabilities_NNS such_JJ as_IN SQL_NN injection_NN and_CC directory_NN traversal_NN can_MD be_VB prevented_VBN using_VBG tainting_NN =_JJ -_: =[_NN 14_CD ,_, 12_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, current_JJ tainting_VBG architectures_NNS lack_VBP the_DT flexbility_NN needed_VBN to_TO express_VB the_DT taint_NN check_NN and_CC propagate_VB rules_NNS for_IN these_DT bugs_NNS ._.
Rather_RB than_IN rely_VB on_IN per-problem_NN ,_, fixed_VBN solutions_NNS ,_, an_DT architecture_NN sh_NN
is_VBZ specialized_VBN to_TO determine_VB whether_IN data_NNS from_IN an_DT untrusted_JJ source_NN flows_VBZ into_IN a_DT sensitive_JJ sink_NN ._.
Static_JJ taint_NN checking_NN has_VBZ a_DT long_JJ history_NN ,_, but_CC Huang_NNP et_FW al._FW were_VBD perhaps_RB the_DT first_JJ to_TO apply_VB it_PRP to_TO SQLCIVs_NNS =_JJ -_: =[_NN 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
They_PRP used_VBD a_DT CQual-like_JJ -LRB-_-LRB- 5_CD -RRB-_-RRB- type_NN system_NN to_TO propagate_VB taint_NN information_NN through_IN PHP_NNP programs_NNS ._.
Livshits_NNP and_CC Lam_NNP -LRB-_-LRB- 17_CD -RRB-_-RRB- used_VBD a_DT precise_JJ points-to_JJ analysis_NN for_IN Java_NNP -LRB-_-LRB- 30_CD -RRB-_-RRB- and_CC queries_NNS specified_VBN in_IN PQL_NN -LRB-_-LRB- 16_CD -RRB-_-RRB- to_TO
these_DT errors_NNS using_VBG static_JJ analysis_NN ._.
This_DT approach_NN has_VBZ been_VBN explored_VBN in_IN WebYichen_NNP Xie_NNP Alex_NNP Aiken_NNP Computer_NNP Science_NNP Department_NNP Stanford_NNP University_NNP Stanford_NNP ,_, CA_NNP 94305_CD -LCB-_-LRB- yxie,aiken}@cs.stanford.edu_NN 1_CD SSARI_NN =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_JJ -_: and_CC by_IN Minamide_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ._.
WebSSARI_NN has_VBZ been_VBN used_VBN to_TO find_VB a_DT number_NN of_IN security_NN vulnerabilities_NNS in_IN PHP_NNP scripts_NNS ,_, but_CC has_VBZ a_DT large_JJ number_NN of_IN false_JJ positives_NNS and_CC negatives_NNS due_JJ to_TO its_PRP$ intraprocedural_JJ type-based_JJ
ing_JJ new_JJ API_NN -LRB-_-LRB- 2,8_CD -RRB-_-RRB- â€¢_CD Customized_JJ runtime_NN environments_NNS and_CC high_JJ overhead_NN -LRB-_-LRB- 6,9,12,10,11_CD -RRB-_-RRB- â€¢_NNP Address_NNP only_RB a_DT subset_NN of_IN SQLIA_NN -LRB-_-LRB- 3,14_CD -RRB-_-RRB- â€¢_NNP Limited_NNP by_IN machine_NN learning_NN -LRB-_-LRB- 4,13_CD -RRB-_-RRB- â€¢_CD Overly_RB conservative_JJ static_JJ analysis_NN =_JJ -_: =[_NN 5,7_CD -RRB-_-RRB- -_: =_SYM -_: William_NNP Halfond_NNP --_: ASE_NNP 2005_CD --_: November_NNP 10_CD th_DT ,_, 2005sConclusion_FW â€¢_FW SQL_NN Injection_NN Attacks_NNS -LRB-_-LRB- SQLIAs_NNS -RRB-_-RRB- are_VBP a_DT serious_JJ threat_NN to_TO DB-based_JJ Web_NN Applications_NNS â€¢_VBP This_DT technique_NN detects_VBZ and_CC prevents_VBZ SQLIAs_NNS by_IN combin_NN
in_IN languages_NNS like_IN Perl_NNP -LRB-_-LRB- 11_CD -RRB-_-RRB- or_CC Ruby_NNP -LRB-_-LRB- 12_CD -RRB-_-RRB- ._.
This_DT would_MD allow_VB the_DT developer_NN to_TO ensure_VB that_IN no_DT untrusted_JJ data_NNS is_VBZ passed_VBN to_TO the_DT sensitive_JJ functions_NNS without_IN prior_RB filtering_VBG ._.
Static_JJ tainting_NN ,_, as_IN proposed_VBN by_IN =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_JJ -_: ,_, can_MD protect_VB applications_NNS before_IN actually_RB running_VBG them_PRP ,_, so_IN the_DT problem_NN could_MD be_VB eliminated_VBN before_IN deploying_VBG the_DT code_NN into_IN a_DT sensitive_JJ environment_NN ._.
However_RB ,_, due_JJ to_TO the_DT complexity_NN of_IN PHP_NN code_NN ,_, allowing_VBG
contained_VBD thereon_NN ._.
We_PRP also_RB do_VBP not_RB address_VB cross-side_JJ scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- attacks_NNS ,_, and_CC we_PRP assume_VBP that_IN the_DT target_NN web_NN site_NN is_VBZ free_JJ of_IN XSS_NN vulnerabilities_NNS ._.
Other_JJ research_NN efforts_NNS address_VBP XSS_NN vulnerabilities_NNS =_JJ -_: =[_NN 23_CD ,_, 32_CD ,_, 34_CD ,_, 63_CD ,_, 64_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Initialization_NN of_IN authentication_NN credentials_NNS ._.
We_PRP separate_VBP the_DT web_NN authentication_NN problem_NN into_IN two_CD distinct_JJ subproblems_NNS :_: the_DT initialization_NN of_IN users_NNS '_POS authentication_NN cookies_NNS and_CC the_DT use_NN of_IN those_DT cooki_NNS
o_NN a_DT webpage_NN a_DT warning_NN will_MD be_VB generated_VBN ._.
Taint_NN analysis_NN was_VBD first_RB introduced_VBN by_IN Perl_NNP 's_POS taint_NN mode_NN -LRB-_-LRB- 15_CD -RRB-_-RRB- ._.
In_IN 2005_CD Huang_NNP et_FW al._FW presented_VBN with_IN WEBSSARI_NN a_DT tool_NN that_WDT provides_VBZ static_JJ taint_NN analysis_NN for_IN PHP_NN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Microsoft_NNP introduced_VBD an_DT ``_`` http_NN only_RB ''_'' option_NN for_IN cookies_NNS with_IN their_PRP$ web_NN browser_NN Internet_NNP Explorer_NNP 6_CD SP1_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- ._.
Cookies_NNS that_WDT are_VBP set_VBN with_IN this_DT option_NN are_VBP not_RB accessible_JJ by_IN JavaScript_NNP and_CC therefore_RB safe_JJ
erDo_NN -LRB-_-LRB- 11_CD -RRB-_-RRB- ,_, offer_VBP similar_JJ strategies_NNS ._.
One_CD recent_JJ project_NN proposes_VBZ a_DT type_NN system_NN to_TO ensure_VB that_IN all_DT data_NNS is_VBZ ``_`` trusted_VBN ''_'' ;_: that_IN type_NN system_NN considers_VBZ input_NN to_TO be_VB trusted_VBN once_IN it_PRP has_VBZ passed_VBN through_IN a_DT filter_NN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Perl_NNP 's_POS ``_`` tainted_JJ mode_NN ''_'' has_VBZ a_DT similar_JJ goal_NN ,_, but_CC it_PRP operates_VBZ at_IN runtime_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- ._.
All_DT of_IN these_DT techniques_NNS are_VBP an_DT improvement_NN over_IN unregulated_JJ input_NN ,_, but_CC they_PRP have_VBP weaknesses_NNS ._.
None_NN of_IN them_PRP can_MD say_VB anything_NN
h_NN ,_, the_DT analyzer_NN tries_VBZ to_TO determine_VB if_IN a_DT data_NN path_NN between_IN the_DT untrusted_JJ user_NN input_NN and_CC security_NN sensitive_JJ functions_NNS exists_VBZ ._.
Static_JJ taint_NN analysis_NN for_IN web_NN application_NN has_VBZ been_VBN described_VBN by_IN Huang_NNP et_FW al_FW =_JJ -_: =[_NN 4_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Livshits_NNP and_CC Lam_NNP -LRB-_-LRB- 9_CD -RRB-_-RRB- ,_, and_CC Jovanovic_NNP et_FW al_FW -LRB-_-LRB- 6_CD -RRB-_-RRB- ._.
Web_NN application_NN firewalls_NNS :_: The_DT term_NN web_NN application_NN firewall_NN describes_VBZ applications_NNS that_WDT are_VBP positioned_VBN between_IN the_DT network_NN and_CC the_DT web_NN server_NN ._.
Using_VBG a_DT
ns_NNS are_VBP hard_JJ to_TO make_VB secure_JJ and_CC awkward_JJ to_TO write_VB ._.
Prior_JJ research_NN has_VBZ addressed_VBN security_NN and_CC expressiveness_NN separately_RB ._.
One_CD line_NN of_IN work_NN has_VBZ tried_VBN to_TO make_VB web_NN applications_NNS more_RBR secure_JJ ,_, through_IN analysis_NN =_JJ -_: =[_NN 11_CD ,_, 27_CD ,_, 12_CD -RRB-_-RRB- -_: =_JJ -_: or_CC monitoring_NN -LRB-_-LRB- 10_CD ,_, 17_CD ,_, 28_CD -RRB-_-RRB- of_IN server-side_JJ application_NN code_NN ._.
However_RB ,_, this_DT work_NN does_VBZ not_RB help_VB application_NN developers_NNS decide_VBP when_WRB code_NN and_CC data_NNS can_MD be_VB placed_VBN on_IN the_DT client_NN ._.
Conversely_RB ,_, the_DT awkwardness_NN
of_IN the_DT many_JJ kinds_NNS of_IN SQLIAs_NNS that_IN our_PRP$ technique_NN addresses_NNS ._.
Huang_NNP and_CC colleagues_NNS also_RB define_VBP a_DT white-box_JJ approach_NN for_IN detecting_VBG input_NN validation_NN related_JJ errors_NNS that_WDT uses_VBZ developer-provided_JJ annotations_NNS =_JJ -_: =[_NN 13_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Relying_VBG on_IN developer-provided_JJ annotations_NNS limits_VBZ the_DT practical_JJ applicability_NN of_IN the_DT approach_NN and_CC the_DT technique_NN assumes_VBZ that_IN preconditions_NNS for_IN all_DT sensitive_JJ functions_NNS can_MD be_VB accurately_RB expressed_VBN ahea_NN
r_NN tries_VBZ to_TO determine_VB if_IN a_DT data_NN path_NN between_IN the_DT untrusted_JJ user_NN input_NN and_CC security_NN sensitive_JJ functions_NNS exists_VBZ ._.
Static_JJ taint_NN analysis_NN has_VBZ been_VBN described_VBN for_IN example_NN by_IN Shankar_NNP et_FW al._FW -LRB-_-LRB- 25_CD -RRB-_-RRB- ,_, Huang_NNP et_FW al._FW =_SYM -_: =[_NN 11_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Livshits_NNP and_CC Lam_NNP -LRB-_-LRB- 18_CD -RRB-_-RRB- ,_, and_CC Jovanovic_NNP et_FW al._FW -LRB-_-LRB- 15_CD -RRB-_-RRB- ._.
Instruction_NN Set_NN Randomization_NN :_: SQLrand_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- uses_VBZ instruction_NN set_NN randomization_NN to_TO counter_VB SQL_NN injection_NN attacks_NNS ._.
All_DT SQL_NNP statements_NNS that_WDT are_VBP included_VBN
uses_VBZ exceptions_NNS to_TO indicate_VB potential_JJ attacks_NNS ,_, which_WDT is_VBZ a_DT developer_NN overhead_NN we_PRP would_MD like_VB to_TO avoid_VB by_IN rendering_VBG the_DT attacks_NNS harmless_JJ and_CC allowing_VBG the_DT system_NN to_TO run_VB oblivious_JJ to_TO attacks_NNS ._.
Huang_NNP et_FW al._FW =_SYM -_: =[_NN 11_CD -RRB-_-RRB- -_: =_JJ -_: secure_JJ potential_JJ vulnerabilities_NNS by_IN combining_VBG static_JJ analysis_NN with_IN runtime_NN monitoring_NN ._.
Their_PRP$ WebSSARI_NN solution_NN statically_RB analyzes_VBZ source_NN code_NN ,_, finds_VBZ potential_JJ vulnerabilities_NNS ,_, including_VBG SQLIVs_NNS ,_, and_CC
s_NNS such_JJ as_IN Myer_NNP 's_POS JFlow_NN system_NN -LRB-_-LRB- 82_CD -RRB-_-RRB- type-check_JJ source_NN code_NN for_IN secure_JJ information_NN flow_NN ._.
However_RB ,_, the_DT programmer_NN needs_VBZ to_TO insert_VB source_NN code_NN annotations_NNS explicitly_RB labeling_VBG sensitive_JJ data_NNS ._.
The_DT WebSSARI_NN =_JJ -_: =[_NN 56_CD -RRB-_-RRB- -_: =_JJ -_: project_NN analyzes_VBZ information_NN flow_NN in_IN PHP_NNP applications_NNS statically_RB ._.
It_PRP inserts_NNS runtime_VBP guards_NNS in_IN potentially_RB insecure_JJ regions_NNS of_IN code_NN ._.
It_PRP differs_VBZ from_IN approaches_NNS such_JJ as_IN JFlow_NN in_IN that_IN it_PRP does_VBZ not_RB requi_VB
e_LS detection_NN of_IN CRLF_NN characters_NNS in_IN URL_NN parameters_NNS ._.
Huang_NNP et_NNP ._.
al_FW propose_VBP methods_NNS for_IN using_VBG both_CC static_JJ type-checking_JJ analysis_NN and_CC data-checking_JJ guardbands_NNS for_IN runtime_NN protection_NN of_IN web_NN application_NN code_NN =_JJ -_: =[_NN 4_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, they_PRP are_VBP of_IN limited_JJ use_NN detecting_VBG or_CC preventing_VBG cross-site_JJ scripting_NN because_IN of_IN the_DT data-type_NN of_IN JavaScript_NNP :_: simple_JJ strings_NNS ._.
Hallaraker_NNP and_CC Vigna_NNP propose_VBP detection_NN of_IN malicious_JJ code_NN by_IN audi_NNS
rces_NNS of_IN input_NN ._.
In_IN fact_NN ,_, many_JJ of_IN the_DT SQL_NN injection_NN vulnerabilities_NNS discovered_VBN in_IN real_JJ applications_NNS are_VBP due_JJ to_TO human_JJ errors_NNS :_: developers_NNS forgot_VBN to_TO add_VB checks_NNS or_CC did_VBD not_RB perform_VB adequate_JJ input_NN validation_NN =_JJ -_: =[_NN 20_CD ,_, 23_CD ,_, 33_CD -RRB-_-RRB- -_: =_SYM -_: ._.
In_IN other_JJ words_NNS ,_, in_IN these_DT applications_NNS ,_, developers_NNS were_VBD making_VBG an_DT effort_NN to_TO detect_VB and_CC prevent_VB SQLIAs_NNS ,_, but_CC failed_VBD to_TO do_VB so_RB adequately_RB and_CC in_IN every_DT needed_VBN location_NN ._.
These_DT examples_NNS provide_VBP further_JJ evid_NN
ic_IN Analysis_NNP and_CC Runtime_NNP Inspection_NNP -RRB-_-RRB- is_VBZ a_DT tool_NN for_IN detecting_VBG security_NN vulnerabilities_NNS in_IN PHP_NNP code_NN ._.
WebSSARI_NN is_VBZ also_RB able_JJ to_TO automatically_RB insert_VB runtime_NN guards_NNS in_IN sections_NNS that_IN it_PRP finds_VBZ possibly_RB unsafe_JJ =_JJ -_: =[_NN 9_CD -RRB-_-RRB- -_: =_SYM -_: ._.
WebSSARI_NN has_VBZ been_VBN successfully_RB used_VBN to_TO find_VB various_JJ security_NN problems_NNS in_IN multiple_JJ widely-used_JJ PHP_NN software_NN components_NNS ._.
â€¢_NNP The_NNP Eau_NNP Claire_NNP is_VBZ theorem_FW prover_FW based_VBN static_JJ analysis_NN tool_NN for_IN identifying_VBG b_NN
to_TO do_VB so_RB ,_, and_CC neither_CC the_DT compiler_NN nor_CC the_DT runtime_NN system_NN can_MD flag_NN the_DT omission_NN of_IN escape_NN calls_NNS ._.
There_EX have_VBP been_VBN a_DT number_NN of_IN proposals_NNS to_TO detect_VB unhygienically_RB constructed_VBN sentences_NNS at_IN runtime_NN -LRB-_-LRB- e.g._FW =_JJ -_: =[_NN 25_CD ,_, 14_CD ,_, 18_CD -RRB-_-RRB- -_: =--RRB-_NN or_CC using_VBG static_JJ analysis_NN -LRB-_-LRB- e.g._FW -LRB-_-LRB- 20_CD ,_, 29_CD -RRB-_-RRB- -RRB-_-RRB- ._.
A_DT better_JJR solution_NN ,_, from_IN a_DT security_NN perspective_NN ,_, is_VBZ to_TO use_VB an_DT API_NN to_TO build_VB the_DT sentence_NN ._.
Such_PDT an_DT API_NN can_MD ensure_VB that_IN injections_NNS are_VBP impossible_JJ by_IN constructio_NN
erDo_NN -LRB-_-LRB- 11_CD -RRB-_-RRB- ,_, offer_VBP similar_JJ strategies_NNS ._.
One_CD recent_JJ project_NN proposes_VBZ a_DT type_NN system_NN to_TO ensure_VB that_IN all_DT data_NNS is_VBZ ``_`` trusted_VBN ''_'' ;_: that_IN type_NN system_NN considers_VBZ input_NN to_TO be_VB trusted_VBN once_IN it_PRP has_VBZ passed_VBN through_IN a_DT filter_NN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Perl_NNP 's_POS ``_`` tainted_JJ mode_NN ''_'' has_VBZ a_DT similar_JJ goal_NN ,_, but_CC it_PRP operates_VBZ at_IN runtime_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- ._.
All_DT of_IN these_DT techniques_NNS are_VBP an_DT improvement_NN over_IN unregulated_JJ input_NN ,_, but_CC they_PRP have_VBP weaknesses_NNS ._.
None_NN of_IN them_PRP can_MD say_VB anything_NN
ser_NN input_NN is_VBZ a_DT non-trivial_JJ problem_NN ,_, as_IN demonstrated_VBN by_IN the_DT success_NN of_IN the_DT Samy_NNP and_CC Yamanner_NNP worms_NNS on_IN MySpace_NNP and_CC Yahoo_NNP Mail_NNP -LRB-_-LRB- 1_CD ,_, 4_CD -RRB-_-RRB- ._.
Many_JJ server-side_JJ techniques_NNS have_VBP been_VBN proposed_VBN to_TO block_VB XSS_NN attacks_NN =_JJ -_: =[_NN 47_CD ,_, 25_CD ,_, 26_CD ,_, 57_CD -RRB-_-RRB- -_: =_JJ -_: ,_, requiring_VBG each_DT web_NN site_NN to_TO carefully_RB protect_VB itself_PRP ._.
Some_DT client-side_JJ proposals_NNS attempt_VBP to_TO mitigate_VB the_DT damage_NN of_IN XSS_NN attacks_NNS ,_, such_JJ as_IN taint_NN analysis_NN in_IN the_DT browser_NN -LRB-_-LRB- 50_CD -RRB-_-RRB- and_CC proxies_NNS or_CC firewalls_NNS for_IN
n_NN that_IN they_PRP also_RB build_VBP models_NNS of_IN legitimate_JJ queries_NNS and_CC enforce_VB conformance_NN with_IN the_DT models_NNS at_IN runtime_NN ._.
Other_JJ techniques_NNS include_VBP intrusion_NN detection_NN -LRB-_-LRB- 21_CD -RRB-_-RRB- ,_, black-box_JJ testing_NN -LRB-_-LRB- 11_CD -RRB-_-RRB- ,_, static_JJ code_NN checkers_NNS =_JJ -_: =[_NN 5_CD ,_, 12_CD ,_, 13_CD ,_, 22_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Web_NN proxy_NN filters_NNS -LRB-_-LRB- 18_CD -RRB-_-RRB- ,_, new_JJ query-development_NN paradigms_NNS -LRB-_-LRB- 4_CD ,_, 15_CD -RRB-_-RRB- ,_, instruction_NN set_NN randomization_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- ,_, and_CC taint-based_JJ approaches_NNS -LRB-_-LRB- 6_CD ,_, 14_CD ,_, 16_CD ,_, 17_CD -RRB-_-RRB- ._.
While_IN effective_JJ ,_, these_DT approaches_NNS have_VBP limitations_NNS tha_NN
ne-line_JJ check-ins_NNS ._.
1_CD ._.
INTRODUCTION_NN A_DT great_JJ deal_NN of_IN attention_NN has_VBZ lately_RB been_VBN given_VBN to_TO addressing_VBG application-specific_JJ software_NN bugs_NNS such_JJ as_IN errors_NNS in_IN operating_NN system_NN drivers_NNS -LRB-_-LRB- 4_CD ,_, 13_CD -RRB-_-RRB- ,_, security_NN errors_NNS =_JJ -_: =[_NN 20_CD ,_, 32_CD -RRB-_-RRB- -_: =_JJ -_: ,_, or_CC errors_NNS in_IN reliabilitycritical_JJ embedded_JJ software_NN in_IN domains_NNS like_IN avionics_NNS -LRB-_-LRB- 7_CD ,_, 8_CD -RRB-_-RRB- ._.
These_DT represent_VBP critical_JJ errors_NNS in_IN widely_RB used_VBN software_NN and_CC tend_VB to_TO get_VB fixed_VBN relatively_RB quickly_RB when_WRB found_VBN ._.
A_DT var_NN
author_NN of_IN PHP-fusion_NN ,_, who_WP immediately_RB fixed_VBD these_DT vulnerabilities_NNS and_CC released_VBD a_DT new_JJ version_NN of_IN the_DT software_NN ._.
5_CD ._.
RELATED_NNS WORK_VBP 5.1_CD Static_JJ techniques_NNS WebSSARI_NN is_VBZ a_DT type_NN qualifier_RBR based_VBN analyzer_NN for_IN PHP_NN =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: ._.
It_PRP uses_VBZ a_DT standard_JJ intraprocedural_JJ tainting_NN analysis_NN to_TO find_VB cases_NNS where_WRB user_NN controlled_JJ values_NNS flow_VBP into_IN functions_NNS that_WDT require_VBP trusted_VBN input_NN -LRB-_-LRB- sensitive_JJ functions_NNS -RRB-_-RRB- ._.
The_DT analysis_NN relies_VBZ on_IN three_CD use_NN
erDo_NN -LRB-_-LRB- 14_CD -RRB-_-RRB- ,_, offer_VBP similar_JJ strategies_NNS ._.
One_CD recent_JJ project_NN proposes_VBZ a_DT type_NN system_NN to_TO ensure_VB that_IN all_DT data_NNS is_VBZ ``_`` trusted_VBN ''_'' ;_: that_IN type_NN system_NN considers_VBZ input_NN to_TO be_VB trusted_VBN once_IN it_PRP has_VBZ passed_VBN through_IN a_DT filter_NN =_JJ -_: =[_NN 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Perl_NNP 's_POS ``_`` tainted_JJ mode_NN ''_'' has_VBZ a_DT similar_JJ goal_NN ,_, but_CC it_PRP operates_VBZ at_IN runtime_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- ._.
All_DT of_IN these_DT techniques_NNS are_VBP an_DT improvement_NN over_IN unregulated_JJ input_NN ,_, but_CC they_PRP have_VBP weaknesses_NNS ._.
None_NN of_IN them_PRP can_MD say_VB anything_NN
e_LS into_IN the_DT other_JJ ,_, and_CC which_WDT functions_NNS expect_VBP what_WP kinds_NNS of_IN arguments_NNS ._.
Shankar_FW et_FW al_FW -LRB-_-LRB- 34_CD -RRB-_-RRB- use_VBP a_DT similar_JJ approach_NN in_IN which_WDT C_NN source_NN code_NN is_VBZ annotated_JJ ,_, but_CC they_PRP use_VBP type_NN qualifiers_NNS instead_RB ._.
The_DT WebSSARI_NN =_JJ -_: =[_NN 24_CD -RRB-_-RRB- -_: =_JJ -_: project_NN analyzes_VBZ information_NN flow_NN in_IN PHP_NNP applications_NNS statically_RB ._.
It_PRP inserts_NNS runtime_VBP guards_NNS in_IN potentially_RB insecure_JJ regions_NNS of_IN code_NN ._.
It_PRP differs_VBZ from_IN approaches_NNS such_JJ as_IN Myers_NNP '_POS Jflow_NN and_CC Jif_NN -LRB-_-LRB- 30_CD ,_, 31_CD -RRB-_-RRB- i_LS
general_JJ penetration-testing_JJ techniques_NNS ,_, but_CC like_IN all_DT testing-based_JJ techniques_NNS ,_, it_PRP can_MD not_RB provide_VB guarantees_NNS of_IN completeness_NN ._.
Huang_NNP and_CC colleagues_NNS also_RB define_VBP a_DT white-box_NN approach_NN for_IN input_NN validation_NN =_JJ -_: =[_NN 13_CD -RRB-_-RRB- -_: =_SYM -_: that_WDT relies_VBZ on_IN user-provided_JJ annotations_NNS ._.
Besides_IN the_DT fact_NN that_IN relying_VBG on_IN user-provided_JJ annotations_NNS limits_VBZ considerably_RB the_DT practical_JJ applicability_NN of_IN the_DT approach_NN ,_, the_DT technique_NN makes_VBZ assumptions_NNS t_NN
ores_VBZ the_DT application_NN of_IN static_JJ analysis_NN techniques_NNS to_TO the_DT domain_NN of_IN web-based_JJ applications_NNS ._.
The_DT current_JJ focus_NN of_IN the_DT researchers_NNS in_IN this_DT field_NN is_VBZ mostly_RB on_IN the_DT analysis_NN of_IN applications_NNS written_VBN in_IN PHP_NN =_JJ -_: =[_NN 10_CD ,_, 12_CD ,_, 13_CD ,_, 37_CD -RRB-_-RRB- -_: =_JJ -_: and_CC Java_NNP -LRB-_-LRB- 9_CD ,_, 21_CD -RRB-_-RRB- ._.
This_DT phenomenon_NN can_MD be_VB explained_VBN by_IN the_DT growing_VBG popularity_NN of_IN both_DT languages_NNS ._.
For_IN example_NN ,_, the_DT popularity_NN of_IN PHP_NNP has_VBZ grown_VBN tremendously_RB over_IN the_DT last_JJ five_CD years_NNS ,_, making_VBG PHP_NNP one_CD of_IN t_NN
general_JJ penetration-testing_JJ techniques_NNS ,_, but_CC like_IN all_DT testing-based_JJ techniques_NNS ,_, it_PRP can_MD not_RB provide_VB guarantees_NNS of_IN completeness_NN ._.
Huang_NNP and_CC colleagues_NNS also_RB define_VBP a_DT white-box_NN approach_NN for_IN input_NN validation_NN =_JJ -_: =[_NN 13_CD -RRB-_-RRB- -_: =_SYM -_: that_WDT relies_VBZ on_IN user-provided_JJ annotations_NNS ._.
Besides_IN the_DT fact_NN that_IN relying_VBG on_IN user-provided_JJ annotations_NNS limits_VBZ considerably_RB the_DT practical_JJ applicability_NN of_IN the_DT approach_NN ,_, the_DT technique_NN makes_VBZ assumptions_NNS t_NN
vulnerabilities_NNS ,_, even_RB if_IN an_DT implementation_NN was_VBD designed_VBN for_IN only_RB one_CD kind_NN of_IN vulnerability_NN ._.
Huang_NNP et_FW al._FW presented_VBD one_CD of_IN the_DT first_JJ taint_NN analyses_NNS for_IN web_NN applications_NNS and_CC applied_VBD it_PRP to_TO SQL_NN injection_NN =_JJ -_: =[_NN 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
They_PRP used_VBD a_DT CQual-like_JJ -LRB-_-LRB- 4_CD ,_, 5_CD -RRB-_-RRB- type_NN system_NN to_TO propagate_VB taint_NN information_NN through_IN PHP_NNP programs_NNS ._.
Livshits_NNP and_CC Lam_NNP -LRB-_-LRB- 17_CD -RRB-_-RRB- used_VBD a_DT precise_JJ points-to_JJ analysis_NN for_IN Java_NNP -LRB-_-LRB- 26_CD -RRB-_-RRB- and_CC queries_NNS specified_VBN in_IN PQL_NN -LRB-_-LRB- 16_CD -RRB-_-RRB-
ipt_NN injection_NN ,_, as_IN XSS_NN attacks_NNS have_VBP had_VBN notable_JJ impact_NN -LRB-_-LRB- 1_CD ,_, 7_CD -RRB-_-RRB- ._.
sMany_NN such_JJ efforts_NNS aim_VBP to_TO prevent_VB attacks_NNS on_IN the_DT server_NN ,_, ranging_VBG from_IN security_NN gateways_NNS -LRB-_-LRB- 32_CD -RRB-_-RRB- to_TO static_JJ analysis_NN -LRB-_-LRB- 42_CD -RRB-_-RRB- or_CC runtime_NN protection_NN =_JJ -_: =[_NN 21_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT efforts_NNS do_VBP not_RB prevent_VB any_DT injections_NNS that_WDT occur_VBP after_IN a_DT page_NN leaves_VBZ the_DT server_NN ,_, so_IN they_PRP do_VBP not_RB address_VB either_CC the_DT modifications_NNS or_CC the_DT vulnerabilities_NNS we_PRP discovered_VBD ._.
Some_DT researchers_NNS defend_VBP a_DT
e_LS the_DT transformed_VBN programs_NNS ._.
15sStatic_JJ Analysis_NNP ._.
Static_JJ taint_NN analysis_NN techniques_NNS have_VBP been_VBN proposed_VBN by_IN many_JJ for_IN finding_VBG security_NN vulnerabilities_NNS ,_, including_VBG input_NN validation_NN errors_NNS in_IN web_NN applications_NNS =_JJ -_: =[_NN 16_CD ,_, 13_CD -RRB-_-RRB- -_: =_JJ -_: ,_, user\/kernel_JJ pointer_NN bugs_NNS -LRB-_-LRB- 14_CD -RRB-_-RRB- ,_, format_NN string_NN bugs_NNS -LRB-_-LRB- 26_CD -RRB-_-RRB- ,_, and_CC bugs_NNS in_IN placement_NN of_IN authorization_NN hooks_NNS -LRB-_-LRB- 31_CD -RRB-_-RRB- ._.
The_DT main_JJ advantage_NN of_IN static_JJ analysis_NN -LRB-_-LRB- as_IN compared_VBN to_TO runtime_VB techniques_NNS -RRB-_-RRB- is_VBZ that_IN all_DT poten_NN
al_FW information_NN like_IN passwords_NNS ,_, for_IN example_NN ._.
2.2_CD Cross_NN site_NN scripting_VBG Cross_NN site_NN scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- consists_VBZ of_IN a_DT range_NN of_IN attacks_NNS where_WRB the_DT attacker_NN injects_VBZ malicious_JJ JavaScript_NNP into_IN the_DT web_NN application_NN =_JJ -_: =[_NN 4_CD ,_, 5_CD ,_, 6_CD -RRB-_-RRB- -_: =_SYM -_: ._.
With_IN cross_NN site_NN scripting_NN ,_, the_DT attacker_NN can_MD steal_VB or_CC modify_VB the_DT information_NN the_DT user_NN is_VBZ handling_VBG with_IN the_DT web_NN site_NN ._.
For_IN example_NN ,_, the_DT user_NN could_MD pass_VB the_DT credit_NN card_NN information_NN for_IN an_DT online_JJ shoppin_NN
edness_NN ,_, ''_'' similar_JJ to_TO Perl_NNP 's_POS ``_`` tainted_JJ mode_NN ''_'' -LRB-_-LRB- 40_CD -RRB-_-RRB- ._.
In_IN particular_JJ ,_, there_EX are_VBP two_CD recent_JJ techniques_NNS using_VBG static_JJ analysis_NN to_TO track_VB the_DT flow_NN of_IN untrusted_JJ input_NN through_IN a_DT program_NN :_: one_CD based_VBN on_IN a_DT type_NN system_NN =_JJ -_: =[_NN 15_CD -RRB-_-RRB- -_: =_JJ -_: -LRB-_-LRB- similar_JJ to_TO CQual_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- -RRB-_-RRB- and_CC one_CD based_VBN on_IN a_DT pointsto_NN analysis_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- -LRB-_-LRB- using_VBG a_DT precise_JJ points-to_JJ analysis_NN for_IN Java_NNP -LRB-_-LRB- 43_CD -RRB-_-RRB- and_CC policies_NNS specified_VBN in_IN PQL_NN -LRB-_-LRB- 22_CD ,_, 26_CD -RRB-_-RRB- -RRB-_-RRB- ._.
Both_DT systems_NNS trust_NN user_NN filters_NNS ,_, so_IN they_PRP d_SYM
d_NN is_VBZ for_IN instance_NN already_RB adopted_VBN by_IN Yao-Wen_NNP Huang_NNP et_FW al._FW in_IN securing_VBG web_NN application_NN against_IN web_NN vulnerabilities_NNS caused_VBN by_IN insecure_JJ information_NN flow_NN ,_, such_JJ as_IN SQL_NN injection_NN ,_, XSS_NN and_CC command_NN injection_NN =_JJ -_: =[_NN 30_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Their_PRP$ approach_NN uses_VBZ a_DT lattice-based_JJ static_JJ analysis_NN algorithm_NN for_IN verifying_VBG information_NN flow_NN based_VBN on_IN type_NN systems_NNS and_CC type_NN state_NN ._.
Sections_NNS of_IN code_NN considered_VBN vulnerable_JJ are_VBP automatically_RB instrument_NN
ve_IN rate_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- ._.
The_DT WebSSARI_NN system,initspre-model-checkingwork_NN ,_, allowsthespecification_NN oftaint-style_JJ data-flowproblemsonPHP-based_JJ applications_NNS ,_, and_CC systematically_RB searches_NNS for_IN dangerous_JJ informationflows_NNS =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Nguyen-Tuongetal_JJ ._.
usesimilar_JJ approaches_NNS ,_, also_RB for_IN PHP_NNP -LRB-_-LRB- 24_CD -RRB-_-RRB- ._.
In_IN a_DT more_RBR general_JJ context_NN FindBugs_NNP attempts_VBZ to_TO locate_VB a_DT broad_JJ class_NN of_IN bugs_NNS in_IN Java_NNP applicationsof_NN all_DT kinds_NNS -LRB-_-LRB- 15_CD -RRB-_-RRB- ,_, and_CC the_DT Metal_NNP system_NN le_FW
The_DT WebSSARI_NN system_NN ,_, in_IN its_PRP$ pre-model-checking_JJ work_NN ,_, allows_VBZ the_DT specification_NN of_IN taint-style_JJ data-flow_JJ problems_NNS on_IN PHP-based_JJ applications_NNS ,_, and_CC systematically_RB searches_NNS for_IN dangerous_JJ information_NN flows_VBZ =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Nguyen-Tuong_NNP et_FW al._FW use_VBP similar_JJ approaches_NNS ,_, also_RB for_IN PHP_NNP -LRB-_-LRB- 24_CD -RRB-_-RRB- ._.
In_IN a_DT more_RBR general_JJ context_NN FindBugs_NNP attempts_VBZ to_TO locate_VB a_DT broad_JJ class_NN of_IN bugs_NNS in_IN Java_NNP applications_NNS of_IN all_DT kinds_NNS -LRB-_-LRB- 15_CD -RRB-_-RRB- ,_, and_CC the_DT Metal_NNP syste_NN
uggested_VBD a_DT <jail>_NN tag_NN that_WDT would_MD disable_VB JavaScript_NNP for_IN the_DT jail_NN 's_POS contents_NNS -LRB-_-LRB- 4_CD -RRB-_-RRB- ._.
Browser-Enforced_JJ Embedded_VBN Policies_NNS -LRB-_-LRB- BEEP_NN -RRB-_-RRB- allow_VBP Web_NN developers_NNS to_TO define_VB a_DT whitelist_NN of_IN scripts_NNS that_WDT may_MD run_VB in_IN a_DT page_NN =_JJ -_: =[_NN 12_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT proposals_NNS are_VBP targeted_VBN at_IN isolating_VBG wholly-static_JJ content_NN and_CC do_VBP not_RB apply_VB to_TO interactive_JJ mashup_NN applications_NNS such_JJ as_IN social_JJ network_NN platforms_NNS ._.
5.2_CD iframe_NN Alternatives_NNP Two_CD iframe_JJ alternatives_NNS ,_,
y_NN ,_, right_RB before_IN it_PRP is_VBZ sent_VBN to_TO the_DT database_NN ._.
Detection_NN Techniques_NNS ._.
Finding_VBG security_NN vulnerabilities_NNS through_IN static_JJ analysis_NN is_VBZ mainly_RB focused_VBN on_IN detecting_VBG Cross-Site_JJ Scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- and_CC SQL_NN injections_NNS =_JJ -_: =[_NN 5_CD ,_, 20_CD ,_, 9_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Gatekeeper_NN -LRB-_-LRB- 11_CD -RRB-_-RRB- is_VBZ a_DT static_JJ approach_NN for_IN verifying_VBG whether_IN a_DT widget_NN follows_VBZ a_DT certain_JJ security_NN policy_NN ._.
The_DT authors_NNS have_VBP introduced_VBN a_DT safely_RB statically_RB analyzable_JJ subset_NN of_IN JavaScript_NNP ,_, in_IN which_WDT the_DT w_NN
raining_VBG and_CC enforces_VBZ them_PRP during_IN deployment_NN ._.
In_IN contrast_NN to_TO mitigation_NN ,_, our_PRP$ technique_NN is_VBZ for_IN creating_VBG attack_NN vectors_NNS and_CC is_VBZ applicable_JJ before_IN deployment_NN ._.
Static_JJ and_CC dynamic_JJ approaches_NNS can_MD be_VB combined_VBN =_JJ -_: =[_NN 9_CD ,_, 10_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Lam_NNP et_FW al._FW -LRB-_-LRB- 14_CD -RRB-_-RRB- combine_VBP static_JJ analysis_NN ,_, model_NN checking_NN and_CC dynamic_JJ monitoring_NN ._.
QED_NN -LRB-_-LRB- 18_CD -RRB-_-RRB- combines_VBZ static_JJ analysis_NN and_CC model_NN checking_NN to_TO automatically_RB create_VB SQLI_NN and_CC firstorder_NN XSS_NN attacks_NNS on_IN Java_NNP a_DT
s_NN focuses_VBZ on_IN verification_NN of_IN security_NN properties_NNS ._.
Lam_NNP et_FW al._FW -LRB-_-LRB- 9_CD -RRB-_-RRB- combine_VBP static_JJ analysis_NN with_IN model_NN checking_NN to_TO verify_VB that_IN information-flow_JJ patterns_NNS are_VBP satisfied_VBN in_IN Java-like_JJ programs_NNS ._.
Huang_NNP et_FW al._FW =_SYM -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: use_VB a_DT lattice-based_JJ static_JJ analysis_NN algorithm_NN derived_VBN from_IN type_NN systems_NNS and_CC typestate_NN to_TO ensure_VB similar_JJ information-flow_JJ properties_NNS ._.
The_DT tool_NN TAJ_NN -LRB-_-LRB- 11_CD -RRB-_-RRB- performs_VBZ taint_NN analysis_NN of_IN web_NN applications_NNS writ_VBP
ns_NNS ._.
The_DT lack_NN of_IN sanitization_NN can_MD introduce_VB vulnerabilities_NNS -LRB-_-LRB- e.g._FW ,_, cross-site_JJ scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- -LRB-_-LRB- 20_CD -RRB-_-RRB- and_CC SQL_NN injection_NN -LRB-_-LRB- 1,39_CD -RRB-_-RRB- flaws_NNS -RRB-_-RRB- that_WDT can_MD be_VB exploited_VBN by_IN attackers_NNS ._.
A_DT number_NN of_IN past_JJ research_NN efforts_NNS =_JJ -_: =[_NN 9,13,17,18,22,45_CD -RRB-_-RRB- -_: =_SYM -_: have_VBP focused_VBN on_IN the_DT problem_NN of_IN identifying_VBG vulnerabilities_NNS in_IN which_WDT external_JJ input_NN is_VBZ used_VBN without_IN any_DT prior_JJ sanitization_NN ._.
These_DT vulnerability_NN detectors_NNS are_VBP typically_RB based_VBN on_IN some_DT form_NN of_IN data_NN flow_NN
im_NN is_VBZ to_TO discover_VB and_CC fix_VB web_NN vulnerabilities_NNS such_JJ as_IN XSS_NN and_CC SQL_NN injection_NN ._.
The_DT target_NN audience_NN of_IN the_DT presented_VBN work_NN is_VBZ the_DT web_NN application_NN development_NN community_NN ._.
Similarly_RB ,_, in_IN their_PRP$ follow-up_JJ work_NN =_JJ -_: =[_NN 13_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Huang_NNP et_FW al._FW describe_VBP a_DT tool_NN called_VBN WebSSARI_NN that_WDT uses_VBZ static_JJ code_NN analysis_NN and_CC run-time_JJ inspection_NN to_TO locate_VB and_CC partially_RB fix_VB input-based_JJ web_NN security_NN vulnerabilities_NNS ._.
Although_IN the_DT proposed_VBN soluti_NNS
ty_NN and_CC integrity_NN ._.
Information-flow_JJ tracking_NN is_VBZ ubiquitous_JJ in_IN several_JJ recent_JJ practical_JJ approaches_NNS to_TO web_NN security_NN ._.
To_TO give_VB a_DT few_JJ recent_JJ examples_NNS ,_, these_DT approaches_NNS include_VBP server-side_JJ mechanisms_NNS -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 22_CD -RRB-_-RRB- -_: =_JJ -_: ,_, -LRB-_-LRB- 12_CD -RRB-_-RRB- -RRB-_-RRB- ,_, client-side_JJ mechanisms_NNS for_IN JavaScript_NNP -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 43_CD -RRB-_-RRB- -RRB-_-RRB- and_CC JVM_NN -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 10_CD -RRB-_-RRB- -RRB-_-RRB- ,_, as_RB well_RB as_IN mechanisms_NNS that_WDT combine_VBP protection_NN for_IN servers_NNS and_CC clients_NNS -LRB-_-LRB- 11_CD -RRB-_-RRB- ._.
However_RB ,_, while_IN promising_JJ ,_, this_DT line_NN of_IN wor_NN
y_NN affect_NN sensitive_JJ operations_NNS ._.
However_RB ,_, this_DT mechanism_NN does_VBZ not_RB track_VB implicit_JJ flows_NNS ._.
Information-flow_JJ control_NN as_IN combination_NN of_IN tainting_NN and_CC static_JJ analysis_NN has_VBZ been_VBN suggested_VBN by_IN ,_, e.g._FW ,_, Huang_NNP et_FW al._FW =_SYM -_: =[_NN 17_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Vogt_NNP et_FW al._FW -LRB-_-LRB- 36_CD -RRB-_-RRB- in_IN the_DT context_NN of_IN web_NN applications_NNS ,_, and_CC by_IN Chandra_NNP and_CC Franz_NNP -LRB-_-LRB- 6_CD -RRB-_-RRB- for_IN JVM_NNP ._.
However_RB ,_, work_NN by_IN Vogt_NNP et_FW al._FW is_VBZ the_DT only_JJ one_NN that_WDT treats_VBZ JavaScript_NNP ._.
Compared_VBN to_TO this_DT work_NN ,_, we_PRP identify_VBP uns_NNS
eparate_JJ paper_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- -LRB-_-LRB- cf._VBP discussion_NN in_IN Section_NN 7_CD -RRB-_-RRB- ._.
Tracking_VBG information_NN flow_NN in_IN web_NN applications_NNS is_VBZ becoming_VBG increasingly_RB important_JJ -LRB-_-LRB- e.g._FW ,_, recent_JJ highlights_VBZ are_VBP a_DT server-side_JJ mechanism_NN by_IN Huang_NNP et_FW al._FW =_SYM -_: =[_NN 10_CD -RRB-_-RRB- -_: =_JJ -_: and_CC a_DT clientside_NN mechanism_NN for_IN JavaScript_NNP by_IN Vogt_NNP et_FW al._FW -LRB-_-LRB- 24_CD -RRB-_-RRB- ,_, although_IN they_PRP do_VBP not_RB discuss_VB soundness_NN -RRB-_-RRB- ._.
Dynamism_NN of_IN web_NN applications_NNS puts_VBZ higher_JJR demands_NNS on_IN the_DT permissiveness_NN of_IN the_DT security_NN mechanis_NN
the_DT problem_NN with_IN the_DT formal_JJ impossibility_NN result_NN ._.
Tracking_VBG information_NN flow_NN in_IN web_NN applications_NNS is_VBZ becoming_VBG increasingly_RB important_JJ -LRB-_-LRB- e.g._FW ,_, recent_JJ highlights_VBZ are_VBP a_DT server-side_JJ mechanism_NN by_IN Huang_NNP et_FW al._FW =_SYM -_: =[_NN 24_CD -RRB-_-RRB- -_: =_JJ -_: and_CC a_DT client-side_JJ mechanism_NN for_IN JavaScript_NNP by_IN Vogt_NNP et_FW al._FW -LRB-_-LRB- 49_CD -RRB-_-RRB- ,_, although_IN they_PRP do_VBP not_RB discuss_VB soundness_NN -RRB-_-RRB- ._.
Dynamism_NN of_IN web_NN applications_NNS puts_VBZ higher_JJR demands_NNS on_IN the_DT permissiveness_NN of_IN the_DT security_NN mechani_NNS
ipting_VBG before_IN the_DT application_NN goes_VBZ into_IN operation_NN ._.
Runtime_NN analysis_NN allows_VBZ exploit_VB prevention_NN and_CC recovery_NN during_IN the_DT operation_NN of_IN an_DT application_NN ._.
The_DT WebSSARI_NN project_NN pioneered_VBD this_DT line_NN of_IN research_NN =_JJ -_: =[_NN 8_CD -RRB-_-RRB- -_: =_JJ -_: ,_, by_IN combining_VBG static_JJ and_CC dynamic_JJ analysis_NN for_IN PHP_NNP programs_NNS ._.
Several_JJ projects_NNS that_WDT came_VBD after_IN WebSSARI_NN improve_VB on_IN the_DT quality_NN of_IN static_JJ analysis_NN for_IN PHP_NN -LRB-_-LRB- 9_CD ,_, 33_CD -RRB-_-RRB- ._.
The_DT Griffin_NNP project_NN proposes_VBZ scalable_JJ
ks_NNS than_IN traditional_JJ computer_NN applications_NNS -LRB-_-LRB- 27_CD -RRB-_-RRB- ._.
Browser-based_JJ attacks_NNS have_VBP posed_VBN serious_JJ threats_NNS to_TO the_DT Web_NN in_IN recent_JJ years_NNS ._.
Exploiting_VBG the_DT vulnerabilities_NNS in_IN Web_NN browsers_NNS -LRB-_-LRB- 6_CD ,_, 25_CD -RRB-_-RRB- or_CC Web_NN applications_NNS =_JJ -_: =[_NN 11_CD ,_, 14_CD -RRB-_-RRB- -_: =_JJ -_: ,_, attackers_NNS may_MD directly_RB harm_VB a_DT Web_NN browser_NN 's_POS host_NN machine_NN and_CC user_NN through_IN various_JJ attacks_NNS such_JJ as_IN drive-by_JJ download_NN -LRB-_-LRB- 20_CD ,_, 24_CD ,_, 28_CD -RRB-_-RRB- ,_, crosssite_JJ scripting_NN -LRB-_-LRB- 10_CD ,_, 37_CD -RRB-_-RRB- ,_, cross-site_JJ request_NN forgery_NN -LRB-_-LRB- 2_CD ,_, 46_CD -RRB-_-RRB- ,_, an_DT
the_DT vulnerability_NN detection_NN techniques_NNS have_VBP focused_VBN on_IN server-side_JJ application_NN code_NN ._.
We_PRP classify_VBP them_PRP based_VBN on_IN the_DT nature_NN of_IN the_DT analysis_NN ,_, below_IN ._.
â€¢_CD Static_JJ and_CC Quasi-static_JJ techniques_NNS ._.
Static_JJ analysis_NN =_JJ -_: =[_NN 13_CD ,_, 16_CD ,_, 23_CD -RRB-_-RRB- -_: =_JJ -_: and_CC model_NN checking_NN techniques_NNS -LRB-_-LRB- 22_CD -RRB-_-RRB- aim_NN to_TO identify_VB cases_NNS where_WRB the_DT web_NN application_NN code_NN fails_VBZ to_TO sanitize_VB the_DT input_NN before_IN output_NN ._.
Most_RBS static_JJ analysis_NN tools_NNS are_VBP equipped_VBN with_IN the_DT policy_NN that_WDT once_RB da_NN
not_RB be_VB reached_VBN by_IN user_NN input_NN are_VBP intrinsically_RB safe_JJ ._.
This_DT observation_NN leads_VBZ to_TO a_DT different_JJ prevention_NN strategy_NN based_VBN on_IN the_DT concept_NN of_IN ``_`` tainted\/untainted_JJ ''_'' information_NN ._.
For_IN example_NN ,_, WebSSARI_NN is_VBZ a_DT tool_NN =_JJ -_: =[_NN 39_CD -RRB-_-RRB- -_: =_SYM -_: that_WDT performs_VBZ flow_NN Sensitive_JJ Type_NN Based_VBD static_JJ analysis_NN on_IN PHP_NNP applications_NNS ._.
Vulnerable_JJ sections_NNS of_IN code_NN are_VBP instrumented_VBN with_IN run_NN time_NN guards_NNS against_IN user_NN induced_VBD SQL-injections_JJ and_CC cross_JJ site_NN scrip_NN
on_IN of_IN new_JJ user_NN ``_`` foo_NN ''_'' with_IN logon_NN rights_NNS ._.
2.4_CD Modeling_NN Web_NN Application_NN Vulnerabilities_NNS The_DT primary_JJ objectives_NNS of_IN information_NN security_NN systems_NNS are_VBP to_TO protect_VB confidentiality_NN ,_, integrity_NN ,_, and_CC availability_NN =_JJ -_: =[_NN 60_CD -RRB-_-RRB- -_: =_SYM -_: ._.
From_IN our_PRP$ examples_NNS ,_, it_PRP is_VBZ obvious_JJ that_IN for_IN Web_NN applications_NNS ,_, compromises_NNS in_IN integrity_NN are_VBP the_DT main_JJ causes_NNS of_IN compromises_NNS in_IN confidentiality_NN and_CC availability_NN ._.
The_DT relationship_NN is_VBZ illustrated_VBN in_IN Figure_NNP
patches_NNS ._.
The_DT technique_NN makes_VBZ use_NN of_IN a_DT flow-sensitive_JJ ,_, context-sensitive_JJ ,_, interprocedural_JJ data_NN flow_NN checking_NN framework_NN that_WDT requires_VBZ no_DT additional_JJ annotations_NNS ._.
In_IN contrast_NN ,_, Flanagan_NNP et_FW al._FW 's_POS ESC\/Java_NN =_JJ -_: =[_NN 26_CD -RRB-_-RRB- -_: =_JJ -_: -LRB-_-LRB- designed_VBN to_TO check_VB the_DT correctness_NN of_IN Java_NNP programs_NNS -RRB-_-RRB- requires_VBZ additional_JJ annotations_NNS from_IN programmers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN
ded_VBN to_TO express_VB and_CC enforce_VB noninterference_NN policies_NNS -LRB-_-LRB- 30_CD -RRB-_-RRB- ._.
2_CD ._.
For_IN specifying_VBG and_CC verifying_VBG noninterference_NN policies_NNS ,_, we_PRP have_VBP proposed_VBN a_DT type_NN system_NN based_VBN on_IN Denning_NNP 's_POS axioms_NNS -LRB-_-LRB- 22_CD -RRB-_-RRB- and_CC Strom_NNP 's_POS typestate_NN =_JJ -_: =[_NN 68_CD -RRB-_-RRB- -_: =_SYM -_: ._.
The_DT system_NN 's_POS advantages_NNS are_VBP twofold_JJ :_: first_RB ,_, it_PRP captures_VBZ information-flow_JJ semantics_NNS more_RBR precisely_RB than_IN static_JJ systems_NNS ,_, resulting_VBG in_IN lower_JJR false_JJ positive_JJ rates_NNS ;_: second_RB ,_, it_PRP requires_VBZ no_DT annotation_NN effo_NN
tive_JJ verification_NN that_IN scales_NNS to_TO large_JJ programs_NNS ._.
It_PRP is_VBZ based_VBN on_IN the_DT assumption_NN that_IN most_JJS program_NN branches_NNS do_VBP not_RB affect_VB the_DT information_NN flow_NN property_NN that_WDT is_VBZ being_VBG checked_VBN ._.
Unlike_IN ESP_NNP ,_, Guyer_NNP et_FW al._FW 's_POS =_JJ -_: =[_NN 32_CD -RRB-_-RRB- -_: =_JJ -_: approach_NN has_VBZ a_DT specific_JJ security_NN focus_NN ._.
It_PRP used_VBD the_DT flow-sensitive_JJ ,_, context-sensitive_JJ ,_, interprocedural_JJ data_NN flow_NN analysis_NN framework_NN provided_VBN by_IN their_PRP$ Broadway_NNP optimizing_VBG compiler_NN to_TO check_VB for_IN format_NN
pes_NNS were_VBD undeterminable_JJ at_IN compile-time_NN ._.
These_DT kinds_NNS of_IN dynamic_JJ checks_NNS are_VBP extremely_RB expensive_JJ ,_, resulting_VBG in_IN the_DT creation_NN of_IN such_JJ static_JJ optimization_NN techniques_NNS as_IN dynamic_JJ typing_NN -LRB-_-LRB- 35_CD -RRB-_-RRB- and_CC soft_JJ typing_NN =_JJ -_: =[_NN 77_CD -RRB-_-RRB- -_: =_SYM -_: to_TO reduce_VB the_DT number_NN of_IN runtime_NN checks_NNS ._.
WebSSARI_NN takes_VBZ a_DT similar_JJ approach_NN --_: that_DT is_VBZ ,_, by_IN applying_VBG static_JJ analysis_NN ,_, it_PRP pinpoints_VBZ code_NN requiring_VBG runtime_NN checks_NNS and_CC inserts_NNS the_DT checks_NNS ._.
A_DT similar_JJ process_NN is_VBZ
age-based_JJ techniques_NNS for_IN specifying_VBG and_CC enforcing_VBG information-flow_JJ policies_NNS ._.
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS -LRB-_-LRB- 70_CD -RRB-_-RRB- based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP =_SYM -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBN such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NNP and_CC Simonet_NNP -LRB-_-LRB- 56_CD -RRB-_-RRB- proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP -LRB-_-LRB- 50_CD -RRB-_-RRB- went_VBD a_DT step_NN further_RBR to_TO provide_VB an_DT actual_JJ JIF_NN implementation_NN --_: a_DT secure_JJ information_NN flow_NN ver_NN
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS -LRB-_-LRB- 70_CD -RRB-_-RRB- based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP -LRB-_-LRB- 7_CD -RRB-_-RRB- proposed_VBD such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NN and_CC Simonet_NN =_JJ -_: =[_NN 56_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP -LRB-_-LRB- 50_CD -RRB-_-RRB- went_VBD a_DT step_NN further_RBR to_TO provide_VB an_DT actual_JJ JIF_NN implementation_NN --_: a_DT secure_JJ information_NN flow_NN verifier_NN for_IN the_DT Java_NNP language_NN ._.
However_RB ,_, even_RB though_IN these_DT languages_NNS can_MD guarante_VB
imperative_JJ programming_NN languages_NNS based_VBN on_IN a_DT program_NN abstraction_NN -LRB-_-LRB- similar_JJ to_TO Cousot_NNP and_CC Cousot_NNP 's_POS -LRB-_-LRB- 14_CD -RRB-_-RRB- abstract_JJ interpretation_NN -RRB-_-RRB- derived_VBN from_IN an_DT instrumented_JJ semantics_NNS of_IN a_DT language_NN ._.
Andrews_NNP and_CC Reitman_NNP =_SYM -_: =[_NN 2_CD -RRB-_-RRB- -_: =_SYM -_: used_VBD an_DT axiomatic_JJ logic_NN to_TO reformulate_VB Denning_NNP 's_POS model_NN and_CC developed_VBD a_DT compile-time_JJ certification_NN method_NN using_VBG Hoare_NNP 's_POS logic_NN ;_: in_IN both_DT cases_NNS ,_, soundness_NN was_VBD only_RB addressed_VBN intuitively_RB -LRB-_-LRB- a_DT more_RBR formal_JJ tr_NN
during_IN execution_NN ._.
Banatre_FW et_FW al._FW -LRB-_-LRB- 6_CD -RRB-_-RRB- have_VBP offered_VBN a_DT comparable_JJ approach_NN plus_CC a_DT proof_NN checking_NN method_NN that_WDT resembles_VBZ dataflow_NN analysis_NN techniques_NNS associated_VBN with_IN optimizing_VBG compilers_NNS ._.
Joshi_NNP and_CC Leino_NNP =_SYM -_: =[_NN 42_CD -RRB-_-RRB- -_: =_SYM -_: examined_VBN various_JJ logical_JJ forms_NNS for_IN representing_VBG information_NN flow_NN semantics_NNS ,_, leading_VBG to_TO a_DT characterization_NN containing_VBG Hoare_NN triples_NNS ._.
Darvas_FW et_FW al._FW -LRB-_-LRB- 18_CD -RRB-_-RRB- went_VBD a_DT step_NN further_RBR in_IN offering_VBG characterization_NN
ensitivity_NN comes_VBZ at_IN a_DT price_NN --_: every_DT branch_NN in_IN a_DT program_NN 's_POS control_NN flow_NN doubles_VBZ the_DT verifier_NN 's_POS search_NN space_NN and_CC therefore_RB limits_VBZ scalability_NN ._.
ESP_NNP ,_, the_DT verificationstool_NN recently_RB developed_VBN by_IN Das_FW et_FW al._FW =_SYM -_: =[_NN 19_CD -RRB-_-RRB- -_: =_JJ -_: ,_, is_VBZ representative_JJ of_IN this_DT approach_NN ;_: the_DT contribution_NN is_VBZ distinctive_JJ because_IN ESP_NNP allows_VBZ for_IN flow-sensitive_JJ verification_NN that_IN scales_NNS to_TO large_JJ programs_NNS ._.
It_PRP is_VBZ based_VBN on_IN the_DT assumption_NN that_IN most_JJS program_NN
argeted_VBD a_DT highlevel_JJ language_NN -LRB-_-LRB- PHP_NN -RRB-_-RRB- and_CC tried_VBD to_TO avoid_VB additional_JJ annotations_NNS ._.
Many_JJ previous_JJ security_NN verification_NN efforts_NNS have_VBP focused_VBN on_IN temporal_JJ safety_NN properties_NNS related_VBN to_TO control_NN flow_NN ._.
Schneider_NN =_JJ -_: =[_NN 61_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBN formalizing_VBG security_NN properties_NNS using_VBG security_NN automata_NN ,_, which_WDT define_VBP the_DT legal_JJ sequences_NNS of_IN program_NN actions_NNS ._.
Walker_NNP -LRB-_-LRB- 73_CD -RRB-_-RRB- proposed_VBD a_DT TAL_NNP extension_NN which_WDT uses_VBZ security_NN policies_NNS expressed_VBN in_IN S_NN
sed_VBN on_IN temporal_JJ safety_NN properties_NNS related_VBN to_TO control_NN flow_NN ._.
Schneider_NN -LRB-_-LRB- 61_CD -RRB-_-RRB- proposed_VBN formalizing_VBG security_NN properties_NNS using_VBG security_NN automata_NN ,_, which_WDT define_VBP the_DT legal_JJ sequences_NNS of_IN program_NN actions_NNS ._.
Walker_NNP =_SYM -_: =[_NN 73_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBD a_DT TAL_NNP extension_NN which_WDT uses_VBZ security_NN policies_NNS expressed_VBN in_IN Schneider_NNP 's_POS automata_NN to_TO derive_VB its_PRP$ type_NN system_NN ._.
Jensen_NNP et_FW al._FW -LRB-_-LRB- 41_CD -RRB-_-RRB- proposed_VBN using_VBG a_DT temporal_JJ logic_NN for_IN specifying_VBG a_DT program_NN 's_POS securi_NNS
By_IN applying_VBG flow_NN axioms_NNS ,_, one_PRP can_MD derive_VB flow_NN proofs_NNS that_WDT specify_VBP a_DT program_NN 's_POS effect_NN on_IN the_DT information_NN state_NN ._.
This_DT allows_VBZ the_DT security_NN classes_NNS of_IN variables_NNS to_TO change_VB during_IN execution_NN ._.
Banatre_FW et_FW al._FW =_SYM -_: =[_NN 6_CD -RRB-_-RRB- -_: =_SYM -_: have_VBP offered_VBN a_DT comparable_JJ approach_NN plus_CC a_DT proof_NN checking_NN method_NN that_WDT resembles_VBZ dataflow_NN analysis_NN techniques_NNS associated_VBN with_IN optimizing_VBG compilers_NNS ._.
Joshi_NNP and_CC Leino_NNP -LRB-_-LRB- 42_CD -RRB-_-RRB- examined_VBD various_JJ logical_JJ forms_NNS f_SYM
ped_VBD a_DT compile-time_JJ certification_NN method_NN using_VBG Hoare_NNP 's_POS logic_NN ;_: in_IN both_DT cases_NNS ,_, soundness_NN was_VBD only_RB addressed_VBN intuitively_RB -LRB-_-LRB- a_DT more_RBR formal_JJ treatment_NN of_IN Denning_NNP 's_POS soundness_NN can_MD be_VB found_VBN in_IN Mizuno_NNP and_CC Schmidt_NNP =_SYM -_: =[_NN 48_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
Orbaek_NN -LRB-_-LRB- 53_CD -RRB-_-RRB- proposed_VBD a_DT similar_JJ treatment_NN ,_, but_CC addressed_VBD the_DT secure_JJ information_NN flow_NN problem_NN in_IN terms_NNS of_IN data_NNS integrity_NN instead_RB of_IN confidentiality_NN ._.
Volpano_FW et_FW al._FW -LRB-_-LRB- 70_CD -RRB-_-RRB- argued_VBD that_IN both_DT works_NNS proved_VBD
ammers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW -LRB-_-LRB- 71_CD -RRB-_-RRB- ,_, RATS_NNS by_IN Secure_NNP Software_NNP -LRB-_-LRB- 64_CD -RRB-_-RRB- ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN =_JJ -_: =[_NN 20_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Splint_NNP by_IN Larochelle_NNP and_CC Evans_NNP -LRB-_-LRB- 44_CD -RRB-_-RRB- ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT unsound_JJ checkers_NNS search_NN for_IN specific_JJ error_NN patterns_NNS ._.
Splint_NNP is_VBZ the_DT only_JJ one_NN that_WDT requires_VBZ user_NN annotations_NNS ._.
With_IN the_DT exc_NN
were_VBD able_JJ to_TO reduce_VB that_DT rejection_NN rate_NN to_TO 8_CD percent_NN in_IN a_DT following_VBG test_NN involving_VBG 10,000_CD PHP_NNP files_NNS ._.
Figure_NNP 14_CD ._.
A_DT screenshot_NN of_IN the_DT WebSSARI_NNP GUI_NNP under_IN Windows_NNP ._.
6_CD ._.
EXPERIMENTAL_JJ RESULTS_NNS SourceForge.net_NN =_JJ -_: =[_NN 4_CD -RRB-_-RRB- -_: =_JJ -_: ,_, the_DT world_NN 's_POS largest_JJS open_JJ source_NN development_NN website_NNS ,_, hosts_NNS over_IN 70,000_CD open-source_JJ projects_NNS for_IN more_JJR than_IN 700,000_CD registered_VBN developers_NNS ._.
PHP_NNP ,_, currently_RB with_IN 7,792_CD registered_JJ projects_NNS ,_, clearly_RB outnum_NN
flow-sensitive_JJ analysis_NN techniques_NNS used_VBN by_IN optimizing_VBG compilers_NNS has_VBZ have_VBP been_VBN extensively_RB researched_VBN starting_VBG from_IN the_DT early_JJ works_NNS of_IN Allen_NNP and_CC Cocke_NNP -LRB-_-LRB- 1_LS -RRB-_-RRB- and_CC followed_VBN by_IN the_DT works_NNS of_IN Hecht_NNP and_CC Ullman_NNP =_SYM -_: =[_NN 34_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Graham_NNP and_CC Wegman_NNP -LRB-_-LRB- 31_CD -RRB-_-RRB- ,_, Barth_NNP -LRB-_-LRB- 8_CD -RRB-_-RRB- ,_, and_CC others_NNS ._.
These_DT methods_NNS yield_VBP more_RBR accurate_JJ runtime_JJ state_NN predictions_NNS than_IN the_DT other_JJ methods_NNS mentioned_VBN above_IN ._.
However_RB ,_, flow-sensitivity_NN comes_VBZ at_IN a_DT price_NN --_: every_DT b_NN
ing_IN The_DT goal_NN of_IN static_JJ checking_NN is_VBZ simply_RB to_TO find_VB software_NN bugs_NNS rather_RB than_IN to_TO prove_VB that_DT one_NN does_VBZ not_RB exist_VB -LRB-_-LRB- 3_CD -RRB-_-RRB- ._.
In_IN other_JJ words_NNS ,_, checkers_NNS are_VBP unsound_JJ ._.
A_DT pioneering_JJ work_NN was_VBD that_IN of_IN Bishop_NNP and_CC Dilger_NNP =_SYM -_: =[_NN 11_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT checked_VBD for_IN ``_`` time-of-check-to-time-of-use_JJ ''_'' -LRB-_-LRB- TOCTTOU_NN -RRB-_-RRB- race_NN conditions_NNS ._.
One_CD recent_JJ exciting_JJ result_NN is_VBZ that_DT of_IN Ashcraft_NNP and_CC Engler_NNP -LRB-_-LRB- 3_CD -RRB-_-RRB- ,_, who_WP used_VBD their_PRP$ metacompilation_NN -LRB-_-LRB- 33_CD -RRB-_-RRB- technique_NN to_TO find_VB over_RP
for_IN objects_NNS whose_WP$ types_NNS were_VBD undeterminable_JJ at_IN compile-time_NN ._.
These_DT kinds_NNS of_IN dynamic_JJ checks_NNS are_VBP extremely_RB expensive_JJ ,_, resulting_VBG in_IN the_DT creation_NN of_IN such_JJ static_JJ optimization_NN techniques_NNS as_IN dynamic_JJ typing_NN =_JJ -_: =[_NN 35_CD -RRB-_-RRB- -_: =_JJ -_: and_CC soft_JJ typing_NN -LRB-_-LRB- 77_CD -RRB-_-RRB- to_TO reduce_VB the_DT number_NN of_IN runtime_NN checks_NNS ._.
WebSSARI_NN takes_VBZ a_DT similar_JJ approach_NN --_: that_DT is_VBZ ,_, by_IN applying_VBG static_JJ analysis_NN ,_, it_PRP pinpoints_VBZ code_NN requiring_VBG runtime_NN checks_NNS and_CC inserts_NNS the_DT checks_NNS ._.
erministic_JJ programs_NNS ._.
A_DT similar_JJ approach_NN involving_VBG flow-sensitive_JJ analysis_NN techniques_NNS used_VBN by_IN optimizing_VBG compilers_NNS has_VBZ have_VBP been_VBN extensively_RB researched_VBN starting_VBG from_IN the_DT early_JJ works_NNS of_IN Allen_NNP and_CC Cocke_NNP =_SYM -_: =[_NN 1_CD -RRB-_-RRB- -_: =_JJ -_: and_CC followed_VBN by_IN the_DT works_NNS of_IN Hecht_NNP and_CC Ullman_NNP -LRB-_-LRB- 34_CD -RRB-_-RRB- ,_, Graham_NNP and_CC Wegman_NNP -LRB-_-LRB- 31_CD -RRB-_-RRB- ,_, Barth_NNP -LRB-_-LRB- 8_CD -RRB-_-RRB- ,_, and_CC others_NNS ._.
These_DT methods_NNS yield_VBP more_RBR accurate_JJ runtime_JJ state_NN predictions_NNS than_IN the_DT other_JJ methods_NNS mentioned_VBN above_IN ._.
tection_NN techniques_NNS are_VBP attractive_JJ because_IN of_IN their_PRP$ accuracy_NN in_IN detecting_VBG errors_NNS ._.
A_DT typical_JJ run-time_JJ approach_NN is_VBZ to_TO instrument_NN code_NN with_IN dynamic_JJ guards_NNS during_IN the_DT compilation_NN phase_NN ._.
Cowan_NNP 's_POS Stackguard_NN =_JJ -_: =[_NN 15_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ representative_JJ of_IN this_DT approach_NN ;_: its_PRP$ low_JJ overhead_NN and_CC high_JJ accuracy_NN has_VBZ led_VBN to_TO its_PRP$ inclusion_NN in_IN a_DT variety_NN of_IN commercial_JJ software_NN packages_NNS ._.
Immunix_JJ Secured_JJ Linux_NN 7_CD +_CC is_VBZ a_DT commercial_JJ distribution_NN of_IN
type_NN qualifier_NN theory_NN -LRB-_-LRB- 27_CD -RRB-_-RRB- ,_, Shankar_NNP et_FW al._FW -LRB-_-LRB- 65_CD -RRB-_-RRB- detected_VBD insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS -LRB-_-LRB- 33_CD -RRB-_-RRB- ,_, Ashcraft_NN and_CC Engler_NN =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_JJ -_: were_VBD also_RB able_JJ to_TO detect_VB insecure_JJ information_NN flow_NN in_IN Linux_NN and_CC OpenBSD_NN code_NN without_IN additional_JJ annotation_NN ._.
However_RB ,_, checkers_NNS are_VBP unsound_JJ ,_, and_CC both_DT addressed_VBD only_RB commonly_RB found_VBN insecure_JJ information_NN
ck_IN the_DT correctness_NN of_IN Java_NNP programs_NNS -RRB-_-RRB- requires_VBZ additional_JJ annotations_NNS from_IN programmers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW =_SYM -_: =[_NN 71_CD -RRB-_-RRB- -_: =_JJ -_: ,_, RATS_NNS by_IN Secure_NNP Software_NNP -LRB-_-LRB- 64_CD -RRB-_-RRB- ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- ,_, Splint_NN by_IN Larochelle_NNP and_CC Evans_NNP -LRB-_-LRB- 44_CD -RRB-_-RRB- ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT unsound_JJ checkers_NNS search_NN for_IN specific_JJ erro_NN
sed_VBN by_IN optimizing_VBG compilers_NNS has_VBZ have_VBP been_VBN extensively_RB researched_VBN starting_VBG from_IN the_DT early_JJ works_NNS of_IN Allen_NNP and_CC Cocke_NNP -LRB-_-LRB- 1_LS -RRB-_-RRB- and_CC followed_VBN by_IN the_DT works_NNS of_IN Hecht_NNP and_CC Ullman_NNP -LRB-_-LRB- 34_CD -RRB-_-RRB- ,_, Graham_NNP and_CC Wegman_NNP -LRB-_-LRB- 31_CD -RRB-_-RRB- ,_, Barth_NNP =_SYM -_: =[_NN 8_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC others_NNS ._.
These_DT methods_NNS yield_VBP more_RBR accurate_JJ runtime_JJ state_NN predictions_NNS than_IN the_DT other_JJ methods_NNS mentioned_VBN above_IN ._.
However_RB ,_, flow-sensitivity_NN comes_VBZ at_IN a_DT price_NN --_: every_DT branch_NN in_IN a_DT program_NN 's_POS control_NN flow_NN d_NN
t_NN al._FW 's_POS ESC\/Java_NN -LRB-_-LRB- 26_CD -RRB-_-RRB- -LRB-_-LRB- designed_VBN to_TO check_VB the_DT correctness_NN of_IN Java_NNP programs_NNS -RRB-_-RRB- requires_VBZ additional_JJ annotations_NNS from_IN programmers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =_JJ -_: ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW -LRB-_-LRB- 71_CD -RRB-_-RRB- ,_, RATS_NNS by_IN Secure_NNP Software_NNP -LRB-_-LRB- 64_CD -RRB-_-RRB- ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- ,_, Splint_NN by_IN Larochelle_NNP and_CC Evans_NNP -LRB-_-LRB- 44_CD -RRB-_-RRB- ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT uns_NNS
on_IN level_NN ;_: Sanctum_NNP 's_POS AppShield_NN -LRB-_-LRB- 58_CD -RRB-_-RRB- ,_, Kavado_NNP 's_POS InterDo_NN -LRB-_-LRB- 43_CD -RRB-_-RRB- ,_, and_CC a_DT number_NN of_IN commercial_JJ products_NNS now_RB offer_VBP similar_JJ strategies_NNS ._.
Most_JJS of_IN the_DT leading_VBG firewall_NN vendors_NNS are_VBP also_RB using_VBG deep_JJ packet_NN inspection_NN =_JJ -_: =[_NN 24_CD -RRB-_-RRB- -_: =_JJ -_: technologies_NNS in_IN their_PRP$ attempts_NNS to_TO filter_NN applicationlevel_NN traffic_NN ._.
According_VBG to_TO a_DT recent_JJ Gartner_NNP report_NN -LRB-_-LRB- 67_CD -RRB-_-RRB- ,_, those_DT that_WDT do_VBP n't_RB offer_VB application-level_JJ protection_NN will_MD eventually_RB ``_`` face_NN extinction_NN ._. ''_''
Al_NNP
nerate_JJ cross_NN referenced_VBD documentation_NN of_IN PHP_NN source_NN files_NNS ._.
A_DT screenshot_NN of_IN this_DT GUI_NN is_VBZ presented_VBN in_IN Figure_NNP 14_CD ._.
sIn_NN this_DT project_NN ,_, we_PRP provided_VBD a_DT code_NN walker_NN for_IN PHP_NNP ._.
We_PRP used_VBD Gagnon_NNP and_CC Hendren_NNP 's_POS SableCC_NN =_JJ -_: =[_NN 29_CD -RRB-_-RRB- -_: =_JJ -_: ,_, an_DT object-oriented_JJ compiler_NN framework_NN for_IN Java_NNP ._.
Similar_JJ to_TO yacc_NN and_CC other_JJ compiler_NN generators_NNS ,_, SableCC_NN accepts_VBZ LALR_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- -LRB-_-LRB- 23_CD -RRB-_-RRB- grammars_NNS ._.
No_DT formally_RB written_VBN grammar_NN specifications_NNS for_IN the_DT PHP_NNP language_NN
n_NN vulnerabilities_NNS discovered_VBN in_IN 2002_CD was_VBD 178_CD %_NN higher_JJR than_IN in_IN 2001_CD ,_, that_IN 95_CD percent_NN of_IN these_DT were_VBD remotely_RB exploitable_JJ ,_, and_CC that_IN 99_CD percent_NN were_VBD considered_VBN highly_RB or_CC moderately_RB severe_JJ ._.
Scott_NNP and_CC Sharp_NNP =_JJ -_: =[_NN 62_CD -RRB-_-RRB- -_: =_JJ -_: -LRB-_-LRB- 63_CD -RRB-_-RRB- have_VBP asserted_VBN that_IN Web_NN application_NN vulnerabilities_NNS are_VBP a_DT -RRB-_-RRB- inherent_JJ in_IN Web_NN application_NN programs_NNS ;_: and_CC b_LS -RRB-_-RRB- independent_JJ of_IN the_DT technology_NN in_IN which_WDT the_DT application_NN in_IN question_NN is_VBZ implemented_VBN ,_, the_DT secu_NN
concept_NN of_IN integrity_NN ._.
Denning_NN -LRB-_-LRB- 22_CD -RRB-_-RRB- established_VBD a_DT lattice_NN model_NN for_IN analyzing_VBG secure_JJ information_NN flow_NN in_IN imperative_JJ programming_NN languages_NNS based_VBN on_IN a_DT program_NN abstraction_NN -LRB-_-LRB- similar_JJ to_TO Cousot_NNP and_CC Cousot_NNP 's_POS =_JJ -_: =[_NN 14_CD -RRB-_-RRB- -_: =_JJ -_: abstract_JJ interpretation_NN -RRB-_-RRB- derived_VBN from_IN an_DT instrumented_JJ semantics_NNS of_IN a_DT language_NN ._.
Andrews_NNP and_CC Reitman_NNP -LRB-_-LRB- 2_CD -RRB-_-RRB- used_VBD an_DT axiomatic_JJ logic_NN to_TO reformulate_VB Denning_NNP 's_POS model_NN and_CC developed_VBD a_DT compile-time_JJ certificatio_NN
Web_NN application_NN security_NN ,_, they_PRP have_VBP at_IN least_JJS two_CD drawbacks_NNS :_: they_PRP require_VBP careful_JJ configuration_NN -LRB-_-LRB- 12_CD -RRB-_-RRB- ,_, and_CC they_PRP only_RB offer_VBP Web_NN application_NN protection_NN -LRB-_-LRB- that_DT is_VBZ ,_, they_PRP do_VBP n't_RB identify_VB errors_NNS -RRB-_-RRB- ._.
Huang_NNP et_FW al._FW =_SYM -_: =[_NN 38_CD -RRB-_-RRB- -_: =_SYM -_: designed_VBN a_DT Web_NN application_NN security_NN assessment_NN framework_NN that_WDT offers_VBZ black-boxed_JJ testing_NN for_IN identifying_VBG Web_NN application_NN vulnerabilities_NNS ._.
However_RB ,_, testing_NN processes_NNS can_MD not_RB guarantee_VB identification_NN of_IN
tegy_NN would_MD be_VB to_TO use_VB an_DT algorithm_NN capable_JJ of_IN giving_VBG counterexample_NN traces_NNS to_TO identify_VB the_DT point_NN where_WRB the_DT tainting_VBG process_NN begins_VBZ and_CC to_TO sanitize_VB the_DT data_NNS before_IN it_PRP propagates_VBZ ._.
In_IN a_DT following_VBG project_NN =_JJ -_: =[_NN 39_CD -RRB-_-RRB- -_: =_JJ -_: ,_, we_PRP addressed_VBD this_DT weakness_NN using_VBG bounded_VBN model_NN checking_NN ,_, which_WDT offers_VBZ counterexamples_NNS at_IN a_DT reasonable_JJ cost_NN ._.
8_CD ._.
CONCLUSION_NN Security_NN remains_VBZ a_DT major_JJ roadblock_NN to_TO universal_JJ acceptance_NN of_IN the_DT Web_NN for_IN ma_FW
ns_NN is_VBZ that_IN their_PRP$ most_RBS critical_JJ vulnerabilities_NNS are_VBP often_RB the_DT results_NNS of_IN insecure_JJ information_NN flow_NN ,_, against_IN which_WDT neither_CC encryption_NN nor_CC traditional_JJ Web_NN access_NN control_NN models_NNS -LRB-_-LRB- 55_CD -RRB-_-RRB- offer_VBP any_DT protection_NN =_JJ -_: =[_NN 57_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Sabelfeld_NNP and_CC Myers_NNP -LRB-_-LRB- 57_CD -RRB-_-RRB- recently_RB published_VBD a_DT comprehensive_JJ survey_NN on_IN language-based_JJ techniques_NNS for_IN specifying_VBG and_CC enforcing_VBG information-flow_JJ policies_NNS ._.
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS -LRB-_-LRB- 70_CD -RRB-_-RRB- based_VBN on_IN t_NN
ion_NN will_MD eventually_RB ``_`` face_NN extinction_NN ._. ''_''
Although_IN application-level_JJ firewalls_NNS offer_VBP immediate_JJ assurance_NN of_IN Web_NN application_NN security_NN ,_, they_PRP have_VBP at_IN least_JJS two_CD drawbacks_NNS :_: they_PRP require_VBP careful_JJ configuration_NN =_JJ -_: =[_NN 12_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC they_PRP only_RB offer_VBP Web_NN application_NN protection_NN -LRB-_-LRB- that_DT is_VBZ ,_, they_PRP do_VBP n't_RB identify_VB errors_NNS -RRB-_-RRB- ._.
Huang_NNP et_FW al._FW -LRB-_-LRB- 38_CD -RRB-_-RRB- designed_VBD a_DT Web_NN application_NN security_NN assessment_NN framework_NN that_WDT offers_VBZ black-boxed_JJ testing_NN for_IN i_FW
ck-end_JJ database_NN ._.
Current_JJ technologies_NNS such_JJ as_IN anti-virus_JJ software_NN programs_NNS and_CC network_NN firewalls_NNS offer_VBP comparatively_RB secure_JJ protection_NN at_IN the_DT host_NN and_CC network_NN levels_NNS ,_, but_CC not_RB at_IN the_DT application_NN level_NN =_JJ -_: =[_NN 17_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, when_WRB network_NN and_CC host-level_JJ entry_NN points_NNS are_VBP relatively_RB secure_JJ ,_, the_DT public_JJ interfaces_NNS of_IN Web_NN applications_NNS become_VBP the_DT focus_NN of_IN attacks_NNS -LRB-_-LRB- 46_CD -RRB-_-RRB- -LRB-_-LRB- 17_CD -RRB-_-RRB- ._.
The_DT recognition_NN of_IN this_DT problem_NN is_VBZ reflected_VBN
tion_NN flow_NN fall_NN into_IN two_CD categories_NNS ._.
Class_NN 1_CD false_JJ positives_NNS arise_VBP from_IN the_DT imprecise_JJ approximation_NN of_IN temporal_JJ variable_JJ properties_NNS ._.
The_DT problem_NN described_VBN in_IN the_DT preceding_JJ paragraph_NN and_CC Doh_NNP and_CC Shin_NNP 's_POS =_JJ -_: =[_NN 25_CD -RRB-_-RRB- -_: =_JJ -_: forward_JJ recovery_NN and_CC backward_RB recovery_NN definitions_NNS serve_VBP as_IN examples_NNS ._.
In_IN fact_NN ,_, most_JJS of_IN the_DT Denning-based_JJ systems_NNS suffer_VBP from_IN class_NN 1_CD errors_NNS because_IN the_DT security_NN class_NN of_IN their_PRP$ variables_NNS remains_VBZ const_NN
itional_JJ annotation_NN in_IN order_NN to_TO reduce_VB false_JJ positives_NNS ._.
Another_DT problem_NN is_VBZ that_IN most_JJS Web_NN applications_NNS today_NN are_VBP not_RB developed_VBN in_IN JIF_NNP or_CC Java_NNP ,_, but_CC in_IN script_NN languages_NNS -LRB-_-LRB- e.g._FW ,_, PHP_NNP ,_, ASP_NNP ,_, Perl_NNP ,_, and_CC Python_NNP -RRB-_-RRB- =_JJ -_: =[_NN 40_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Using_VBG a_DT type_NN qualifier_NN theory_NN -LRB-_-LRB- 27_CD -RRB-_-RRB- ,_, Shankar_NNP et_FW al._FW -LRB-_-LRB- 65_CD -RRB-_-RRB- detected_VBD insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS -LRB-_-LRB- 33_CD -RRB-_-RRB- ,_, Ashcraft_NNP a_DT
ecurity_NN via_IN numerous_JJ different_JJ approaches_NNS ._.
Scott_NNP and_CC Sharp_NNP proposed_VBD the_DT use_NN of_IN a_DT gateway_NN that_WDT filters_VBZ invalid_JJ and_CC malicious_JJ inputs_NNS at_IN the_DT application_NN level_NN ;_: Sanctum_NNP 's_POS AppShield_NN -LRB-_-LRB- 58_CD -RRB-_-RRB- ,_, Kavado_NNP 's_POS InterDo_NN =_JJ -_: =[_NN 43_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC a_DT number_NN of_IN commercial_JJ products_NNS now_RB offer_VBP similar_JJ strategies_NNS ._.
Most_JJS of_IN the_DT leading_VBG firewall_NN vendors_NNS are_VBP also_RB using_VBG deep_JJ packet_NN inspection_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- technologies_NNS in_IN their_PRP$ attempts_NNS to_TO filter_NN application_NN
-RRB-_-RRB- -LRB-_-LRB- 23_CD -RRB-_-RRB- grammars_NNS ._.
No_DT formally_RB written_VBN grammar_NN specifications_NNS for_IN the_DT PHP_NNP language_NN exist_VBP ,_, and_CC no_DT studies_NNS have_VBP been_VBN performed_VBN on_IN whether_IN PHP_NNP 's_POS grammar_NN can_MD be_VB fully_RB expressed_VBN in_IN LALR_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- ._.
We_PRP used_VBD Mandre_NNP 's_POS =_JJ -_: =[_NN 45_CD -RRB-_-RRB- -_: =_JJ -_: LALR_NN -LRB-_-LRB- 1_LS -RRB-_-RRB- PHP_NN grammar_NN for_IN SableCC_NN ,_, which_WDT has_VBZ never_RB been_VBN thoroughly_RB tested_VBN ._.
The_DT combination_NN of_IN SableCC_NNP and_CC Mandre_NNP 's_POS grammar_NN allowed_VBD us_PRP to_TO develop_VB a_DT code_NN walker_NN for_IN PHP_NNP ;_: however_RB ,_, an_DT initial_JJ test_NN drive_NN us_PRP
time_NN certification_NN method_NN using_VBG Hoare_NNP 's_POS logic_NN ;_: in_IN both_DT cases_NNS ,_, soundness_NN was_VBD only_RB addressed_VBN intuitively_RB -LRB-_-LRB- a_DT more_RBR formal_JJ treatment_NN of_IN Denning_NNP 's_POS soundness_NN can_MD be_VB found_VBN in_IN Mizuno_NNP and_CC Schmidt_NNP -LRB-_-LRB- 48_CD -RRB-_-RRB- -RRB-_-RRB- ._.
Orbaek_NN =_JJ -_: =[_NN 53_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBD a_DT similar_JJ treatment_NN ,_, but_CC addressed_VBD the_DT secure_JJ information_NN flow_NN problem_NN in_IN terms_NNS of_IN data_NNS integrity_NN instead_RB of_IN confidentiality_NN ._.
Volpano_FW et_FW al._FW -LRB-_-LRB- 70_CD -RRB-_-RRB- argued_VBD that_IN both_DT works_NNS proved_VBD soundness_NN with_IN
ities_NNS ._.
Since_IN we_PRP will_MD only_RB provide_VB brief_JJ descriptions_NNS of_IN the_DT most_RBS widely_RB exploited_VBN vulnerability_NN --_: script_NN injection_NN --_: readers_NNS are_VBP referred_VBN to_TO Scott_NNP and_CC Sharp_NNP -LRB-_-LRB- 62_CD -RRB-_-RRB- -LRB-_-LRB- 63_CD -RRB-_-RRB- ,_, Curphey_NNP et_FW al._FW -LRB-_-LRB- 17_CD -RRB-_-RRB- ,_, Curphey_NNP et_FW al._FW =_SYM -_: =[_NN 54_CD -RRB-_-RRB- -_: =_JJ -_: -LRB-_-LRB- 17_CD -RRB-_-RRB- ,_, and_CC Meier_NNP et_FW al._FW -LRB-_-LRB- 46_CD -RRB-_-RRB- for_IN more_JJR details_NNS ._.
2.1_CD Cross-Site_JJ Scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- Cross-site_JJ scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- is_VBZ perhaps_RB the_DT most_RBS common_JJ Web_NN application_NN vulnerability_NN ._.
Figure_NN 1_CD gives_VBZ an_DT example_NN of_IN an_DT XSS_NN b_NN
prove_VB Web_NN application_NN security_NN via_IN numerous_JJ different_JJ approaches_NNS ._.
Scott_NNP and_CC Sharp_NNP proposed_VBD the_DT use_NN of_IN a_DT gateway_NN that_WDT filters_VBZ invalid_JJ and_CC malicious_JJ inputs_NNS at_IN the_DT application_NN level_NN ;_: Sanctum_NNP 's_POS AppShield_NN =_JJ -_: =[_NN 58_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Kavado_NNP 's_POS InterDo_NN -LRB-_-LRB- 43_CD -RRB-_-RRB- ,_, and_CC a_DT number_NN of_IN commercial_JJ products_NNS now_RB offer_VBP similar_JJ strategies_NNS ._.
Most_JJS of_IN the_DT leading_VBG firewall_NN vendors_NNS are_VBP also_RB using_VBG deep_JJ packet_NN inspection_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- technologies_NNS in_IN their_PRP$ attempt_NN
tion_NN Vulnerability_NN and_CC Error_NN Scanner_NN -RRB-_-RRB- -LRB-_-LRB- 38_CD -RRB-_-RRB- ._.
Their_PRP$ framework_NN uses_VBZ black-boxed_JJ testing_NN to_TO identify_VB Web_NN application_NN vulnerabilities_NNS ._.
Similar_JJ approaches_NNS are_VBP adopted_VBN by_IN commercial_JJ projects_NNS such_JJ as_IN AppScan_NN =_JJ -_: =[_NN 59_CD -RRB-_-RRB- -_: =_JJ -_: ,_, WebInspect_NN -LRB-_-LRB- 66_CD -RRB-_-RRB- ,_, and_CC ScanDo_NN -LRB-_-LRB- 43_CD -RRB-_-RRB- ._.
While_IN this_DT approach_NN can_MD be_VB used_VBN to_TO identify_VB errors_NNS early_RB in_IN the_DT development_NN cycle_NN ,_, it_PRP does_VBZ not_RB provide_VB immediate_JJ Web_NN application_NN protection_NN as_IN offered_VBN by_IN Scott_NNP and_CC
grams_NNS -RRB-_-RRB- requires_VBZ additional_JJ annotations_NNS from_IN programmers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW -LRB-_-LRB- 71_CD -RRB-_-RRB- ,_, RATS_NNS by_IN Secure_NNP Software_NNP =_SYM -_: =[_NN 64_CD -RRB-_-RRB- -_: =_JJ -_: ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- ,_, Splint_NN by_IN Larochelle_NNP and_CC Evans_NNP -LRB-_-LRB- 44_CD -RRB-_-RRB- ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT unsound_JJ checkers_NNS search_NN for_IN specific_JJ error_NN patterns_NNS ._.
Splint_NNP is_VBZ the_DT only_RB
of_IN Web_NN applications_NNS ,_, but_CC they_PRP require_VBP careful_JJ configuration_NN by_IN experienced_JJ administrators_NNS -LRB-_-LRB- 12_CD -RRB-_-RRB- ._.
At_IN least_JJS four_CD assessment_NN frameworks_NNS for_IN Web_NN application_NN security_NN -LRB-_-LRB- WAVES_NNS -LRB-_-LRB- 38_CD -RRB-_-RRB- ,_, AppScan_NN -LRB-_-LRB- 59_CD -RRB-_-RRB- ,_, WebInspect_NN =_JJ -_: =[_NN 66_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC ScanDo_NN -LRB-_-LRB- 43_CD -RRB-_-RRB- -RRB-_-RRB- provide_VBP black-boxed_JJ testing_NN capability_NN for_IN identifying_VBG Web_NN application_NN vulnerabilities_NNS ._.
Still_RB ,_, testing_NN approaches_NNS can_MD never_RB guarantee_VB soundness_NN ._.
Here_RB we_PRP have_VBP tried_VBN to_TO establish_VB an_DT a_DT
lar_JJ strategies_NNS ._.
Most_JJS of_IN the_DT leading_VBG firewall_NN vendors_NNS are_VBP also_RB using_VBG deep_JJ packet_NN inspection_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- technologies_NNS in_IN their_PRP$ attempts_NNS to_TO filter_NN applicationlevel_NN traffic_NN ._.
According_VBG to_TO a_DT recent_JJ Gartner_NNP report_NN =_JJ -_: =[_NN 67_CD -RRB-_-RRB- -_: =_JJ -_: ,_, those_DT that_WDT do_VBP n't_RB offer_VB application-level_JJ protection_NN will_MD eventually_RB ``_`` face_NN extinction_NN ._. ''_''
Although_IN application-level_JJ firewalls_NNS offer_VBP immediate_JJ assurance_NN of_IN Web_NN application_NN security_NN ,_, they_PRP have_VBP at_IN least_JJS
es_NNS are_VBP organized_VBN according_VBG to_TO severity_NN ,_, with_IN general_JJ script_NN injection_NN the_DT most_RBS severe_JJ ,_, SQL_NN injection_NN second_NN ,_, and_CC XSS_NN third_JJ ._.
To_TO help_VB users_NNS investigate_VB reported_VBN vulnerabilities_NNS ,_, we_PRP added_VBD Watts_NNP '_POS PHPXREF_NN =_SYM -_: =[_NN 74_CD -RRB-_-RRB- -_: =_SYM -_: to_TO generate_VB cross_NN referenced_VBD documentation_NN of_IN PHP_NN source_NN files_NNS ._.
A_DT screenshot_NN of_IN this_DT GUI_NN is_VBZ presented_VBN in_IN Figure_NNP 14_CD ._.
sIn_NN this_DT project_NN ,_, we_PRP provided_VBD a_DT code_NN walker_NN for_IN PHP_NNP ._.
We_PRP used_VBD Gagnon_NNP and_CC Hendren_NNP 's_POS Sa_NN
techniques_NNS used_VBN by_IN optimizing_VBG compilers_NNS has_VBZ have_VBP been_VBN extensively_RB researched_VBN starting_VBG from_IN the_DT early_JJ works_NNS of_IN Allen_NNP and_CC Cocke_NNP -LRB-_-LRB- 1_LS -RRB-_-RRB- and_CC followed_VBN by_IN the_DT works_NNS of_IN Hecht_NNP and_CC Ullman_NNP -LRB-_-LRB- 34_CD -RRB-_-RRB- ,_, Graham_NNP and_CC Wegman_NNP =_SYM -_: =[_NN 31_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Barth_NNP -LRB-_-LRB- 8_CD -RRB-_-RRB- ,_, and_CC others_NNS ._.
These_DT methods_NNS yield_VBP more_RBR accurate_JJ runtime_JJ state_NN predictions_NNS than_IN the_DT other_JJ methods_NNS mentioned_VBN above_IN ._.
However_RB ,_, flow-sensitivity_NN comes_VBZ at_IN a_DT price_NN --_: every_DT branch_NN in_IN a_DT program_NN 's_POS con_NN
70_CD -RRB-_-RRB- based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP -LRB-_-LRB- 7_CD -RRB-_-RRB- proposed_VBD such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NNP and_CC Simonet_NNP -LRB-_-LRB- 56_CD -RRB-_-RRB- proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP =_SYM -_: =[_NN 50_CD -RRB-_-RRB- -_: =_SYM -_: went_VBD a_DT step_NN further_RBR to_TO provide_VB an_DT actual_JJ JIF_NN implementation_NN --_: a_DT secure_JJ information_NN flow_NN verifier_NN for_IN the_DT Java_NNP language_NN ._.
However_RB ,_, even_RB though_IN these_DT languages_NNS can_MD guarantee_VB secure_JJ information_NN flow_NN ,_, many_JJ
protection_NN -LRB-_-LRB- 57_CD -RRB-_-RRB- ._.
Sabelfeld_NNP and_CC Myers_NNP -LRB-_-LRB- 57_CD -RRB-_-RRB- recently_RB published_VBD a_DT comprehensive_JJ survey_NN on_IN language-based_JJ techniques_NNS for_IN specifying_VBG and_CC enforcing_VBG information-flow_JJ policies_NNS ._.
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS =_JJ -_: =[_NN 70_CD -RRB-_-RRB- -_: =_SYM -_: based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP -LRB-_-LRB- 7_CD -RRB-_-RRB- proposed_VBD such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NNP and_CC Simonet_NNP -LRB-_-LRB- 56_CD -RRB-_-RRB- proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP -LRB-_-LRB- 50_CD
t_NN ,_, we_PRP provided_VBD a_DT code_NN walker_NN for_IN PHP_NNP ._.
We_PRP used_VBD Gagnon_NNP and_CC Hendren_NNP 's_POS SableCC_NN -LRB-_-LRB- 29_CD -RRB-_-RRB- ,_, an_DT object-oriented_JJ compiler_NN framework_NN for_IN Java_NNP ._.
Similar_JJ to_TO yacc_NN and_CC other_JJ compiler_NN generators_NNS ,_, SableCC_NN accepts_VBZ LALR_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- =_SYM -_: =[_NN 23_CD -RRB-_-RRB- -_: =_JJ -_: grammars_NNS ._.
No_DT formally_RB written_VBN grammar_NN specifications_NNS for_IN the_DT PHP_NNP language_NN exist_VBP ,_, and_CC no_DT studies_NNS have_VBP been_VBN performed_VBN on_IN whether_IN PHP_NNP 's_POS grammar_NN can_MD be_VB fully_RB expressed_VBN in_IN LALR_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- ._.
We_PRP used_VBD Mandre_NNP 's_POS -LRB-_-LRB- 45_CD -RRB-_-RRB- L_NN
nd_IN Wagner_NNP -LRB-_-LRB- 13_CD -RRB-_-RRB- looked_VBD for_IN vulnerabilities_NNS in_IN real_JJ C_NN programs_NNS by_IN model_NN checking_NN for_IN violations_NNS of_IN a_DT program_NN 's_POS temporal_JJ safety_NN properties_NNS ._.
Though_IN their_PRP$ main_JJ focus_NN was_VBD not_RB on_IN security_NN ,_, Ball_NNP and_CC Rajamani_NNP =_SYM -_: =[_NN 5_CD -RRB-_-RRB- -_: =_SYM -_: adopted_VBD a_DT similar_JJ approach_NN for_IN their_PRP$ SLAM_NNP project_NN and_CC successfully_RB applied_VBD it_PRP to_TO Windows_NNP XP_NN device_NN drivers_NNS ._.
3.1_CD Type-Based_JJ Analysis_NN Since_IN vulnerabilities_NNS in_IN Web_NN applications_NNS are_VBP primarily_RB associated_VBN
and_CC Python_NNP -RRB-_-RRB- -LRB-_-LRB- 40_CD -RRB-_-RRB- ._.
Using_VBG a_DT type_NN qualifier_NN theory_NN -LRB-_-LRB- 27_CD -RRB-_-RRB- ,_, Shankar_NNP et_FW al._FW -LRB-_-LRB- 65_CD -RRB-_-RRB- detected_VBD insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS =_JJ -_: =[_NN 33_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Ashcraft_NNP and_CC Engler_NNP -LRB-_-LRB- 3_CD -RRB-_-RRB- were_VBD also_RB able_JJ to_TO detect_VB insecure_JJ information_NN flow_NN in_IN Linux_NN and_CC OpenBSD_NN code_NN without_IN additional_JJ annotation_NN ._.
However_RB ,_, checkers_NNS are_VBP unsound_JJ ,_, and_CC both_DT addressed_VBD only_RB commonly_RB fo_FW
ve_IN tracking_NN of_IN variable_JJ states_NNS ,_, it_PRP serves_VBZ as_IN a_DT technique_NN applicable_JJ to_TO reduce_VB the_DT number_NN of_IN class_NN 1_CD errors_NNS that_IN type-based_JJ information_NN flow_NN systems_NNS suffer_VBP ._.
Inspired_VBN by_IN typestate_NN ,_, DeLine_NN and_CC Fahndrich_NN =_JJ -_: =[_NN 21_CD -RRB-_-RRB- -_: =_SYM -_: extended_VBN C_NN types_NNS in_IN their_PRP$ Vault_NNP programming_NN language_NN with_IN predicates_NNS -LRB-_-LRB- named_VBN type_NN guards_NNS -RRB-_-RRB- that_WDT describe_VBP legal_JJ conditions_NNS on_IN the_DT use_NN of_IN the_DT type_NN ._.
In_IN other_JJ words_NNS ,_, types_NNS determine_VBP valid_JJ operations_NNS ,_, while_IN
ive_FW T-U_FW lattice_NN ._.
According_VBG to_TO our_PRP$ experimental_JJ results_NNS ,_, the_DT use_NN of_IN this_DT lattice_NN model_NN helped_VBD to_TO reduce_VB false_JJ positives_NNS by_IN 10.03_CD percent_NN ._.
Compared_VBN to_TO unsound_JJ checkers_NNS -LRB-_-LRB- 3_CD -RRB-_-RRB- -LRB-_-LRB- 26_CD -RRB-_-RRB- -LRB-_-LRB- 71_CD -RRB-_-RRB- -LRB-_-LRB- 64_CD -RRB-_-RRB- -LRB-_-LRB- 75_CD -RRB-_-RRB- -LRB-_-LRB- 20_CD -RRB-_-RRB- -LRB-_-LRB- 44_CD -RRB-_-RRB- =_JJ -_: =[_NN 69_CD -RRB-_-RRB- -_: =_JJ -_: ,_, our_PRP$ approach_NN attempts_VBZ to_TO provide_VB a_DT sound_JJ verification_NN framework_NN ._.
9_CD ._.
ACKNOWLEDGMENT_VB We_PRP deeply_RB appreciate_VBP the_DT anonymous_JJ reviewers_NNS for_IN offering_VBG us_PRP many_JJ valuable_JJ comments_NNS ._.
We_PRP would_MD also_RB like_VB to_TO thank_VB Dr_NN
wn_IN that_DT most_JJS Web_NN application_NN security_NN problems_NNS arise_VBP from_IN data_NN integrity_NN violations_NNS caused_VBN by_IN insecure_JJ information_NN flow_NN ,_, and_CC that_IN mechanisms_NNS are_VBP needed_VBN to_TO express_VB and_CC enforce_VB noninterference_NN policies_NNS =_JJ -_: =[_NN 30_CD -RRB-_-RRB- -_: =_SYM -_: ._.
2_CD ._.
For_IN specifying_VBG and_CC verifying_VBG noninterference_NN policies_NNS ,_, we_PRP have_VBP proposed_VBN a_DT type_NN system_NN based_VBN on_IN Denning_NNP 's_POS axioms_NNS -LRB-_-LRB- 22_CD -RRB-_-RRB- and_CC Strom_NNP 's_POS typestate_NN -LRB-_-LRB- 68_CD -RRB-_-RRB- ._.
The_DT system_NN 's_POS advantages_NNS are_VBP twofold_JJ :_: first_RB ,_, it_PRP cap_NN
proposed_VBN using_VBG a_DT temporal_JJ logic_NN for_IN specifying_VBG a_DT program_NN 's_POS security_NN properties_NNS based_VBN on_IN its_PRP$ control_NN flow_NN ,_, and_CC offered_VBD a_DT model_NN checking_NN technique_NN for_IN verification_NN ._.
In_IN a_DT similar_JJ effort_NN ,_, Chen_NNP and_CC Wagner_NNP =_SYM -_: =[_NN 13_CD -RRB-_-RRB- -_: =_SYM -_: looked_VBD for_IN vulnerabilities_NNS in_IN real_JJ C_NN programs_NNS by_IN model_NN checking_NN for_IN violations_NNS of_IN a_DT program_NN 's_POS temporal_JJ safety_NN properties_NNS ._.
Though_IN their_PRP$ main_JJ focus_NN was_VBD not_RB on_IN security_NN ,_, Ball_NNP and_CC Rajamani_NNP -LRB-_-LRB- 5_CD -RRB-_-RRB- adopted_VBD a_DT
e_LS false_JJ positives_NNS ._.
Another_DT problem_NN is_VBZ that_IN most_JJS Web_NN applications_NNS today_NN are_VBP not_RB developed_VBN in_IN JIF_NNP or_CC Java_NNP ,_, but_CC in_IN script_NN languages_NNS -LRB-_-LRB- e.g._FW ,_, PHP_NNP ,_, ASP_NNP ,_, Perl_NNP ,_, and_CC Python_NN -RRB-_-RRB- -LRB-_-LRB- 40_CD -RRB-_-RRB- ._.
Using_VBG a_DT type_NN qualifier_NN theory_NN =_JJ -_: =[_NN 27_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Shankar_NNP et_FW al._FW -LRB-_-LRB- 65_CD -RRB-_-RRB- detected_VBD insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS -LRB-_-LRB- 33_CD -RRB-_-RRB- ,_, Ashcraft_NN and_CC Engler_NN -LRB-_-LRB- 3_CD -RRB-_-RRB- were_VBD also_RB able_JJ to_TO dete_VB
ers_NNPS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW -LRB-_-LRB- 71_CD -RRB-_-RRB- ,_, RATS_NNS by_IN Secure_NNP Software_NNP -LRB-_-LRB- 64_CD -RRB-_-RRB- ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- ,_, Splint_NN by_IN Larochelle_NNP and_CC Evans_NNP =_SYM -_: =[_NN 44_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT unsound_JJ checkers_NNS search_NN for_IN specific_JJ error_NN patterns_NNS ._.
Splint_NNP is_VBZ the_DT only_JJ one_NN that_WDT requires_VBZ user_NN annotations_NNS ._.
With_IN the_DT exception_NN of_IN ESC\/Java_NN ,_, they_PRP are_VBP all_DT desi_NNS
checks_NNS ._.
WebSSARI_NN takes_VBZ a_DT similar_JJ approach_NN --_: that_DT is_VBZ ,_, by_IN applying_VBG static_JJ analysis_NN ,_, it_PRP pinpoints_VBZ code_NN requiring_VBG runtime_NN checks_NNS and_CC inserts_NNS the_DT checks_NNS ._.
A_DT similar_JJ process_NN is_VBZ found_VBN in_IN Necula_NNP et_FW al._FW 's_POS CCured_NN =_JJ -_: =[_NN 52_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Though_IN not_RB specifically_RB focused_VBN on_IN security_NN ,_, this_DT scheme_NN combines_VBZ type_NN inference_NN and_CC run-time_NN checks_NNS to_TO ensure_VB type_NN safety_NN for_IN existing_VBG C_NN programs_NNS ._.
A_DT major_JJ difference_NN is_VBZ that_IN our_PRP$ inserted_VBN guards_NNS per_IN
other_JJ problem_NN is_VBZ that_IN most_JJS Web_NN applications_NNS today_NN are_VBP not_RB developed_VBN in_IN JIF_NNP or_CC Java_NNP ,_, but_CC in_IN script_NN languages_NNS -LRB-_-LRB- e.g._FW ,_, PHP_NNP ,_, ASP_NNP ,_, Perl_NNP ,_, and_CC Python_NN -RRB-_-RRB- -LRB-_-LRB- 40_CD -RRB-_-RRB- ._.
Using_VBG a_DT type_NN qualifier_NN theory_NN -LRB-_-LRB- 27_CD -RRB-_-RRB- ,_, Shankar_NNP et_FW al._FW =_SYM -_: =[_NN 65_CD -RRB-_-RRB- -_: =_SYM -_: detected_VBN insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS -LRB-_-LRB- 33_CD -RRB-_-RRB- ,_, Ashcraft_NN and_CC Engler_NN -LRB-_-LRB- 3_CD -RRB-_-RRB- were_VBD also_RB able_JJ to_TO detect_VB insecure_JJ informati_NNS
analysis_NN to_TO offer_VB satisfactory_JJ runtime_NN program_NN state_NN approximation_NN ;_: one_CD strategy_NN is_VBZ to_TO delay_VB parts_NNS of_IN the_DT verification_NN process_NN until_IN runtime_NN ._.
A_DT good_JJ example_NN of_IN this_DT practice_NN is_VBZ Perl_NNP 's_POS ``_`` tainted_JJ mode_NN ''_'' =_SYM -_: =[_NN 72_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT ensures_VBZ system_NN integrity_NN by_IN tracking_VBG tainted_JJ data_NNS submitted_VBN by_IN the_DT user_NN at_IN runtime_NN ._.
Similarly_RB ,_, Myers_NNP -LRB-_-LRB- 50_CD -RRB-_-RRB- also_RB leaves_VBZ some_DT JIF_NN security_NN label_NN checking_NN operations_NNS until_IN runtime_NN ._.
In_IN dynamically_RB
systems_NNS have_VBP proven_VBN useful_JJ for_IN specifying_VBG and_CC checking_VBG program_NN safety_NN properties_NNS ._.
By_IN means_NNS of_IN programmer-supplied_JJ annotations_NNS ,_, both_DT proof-carrying_JJ codes_NNS -LRB-_-LRB- PCC_NN -RRB-_-RRB- -LRB-_-LRB- 51_CD -RRB-_-RRB- and_CC typed_VBD assembly_NN languages_NNS -LRB-_-LRB- TAL_NN -RRB-_-RRB- =_JJ -_: =[_NN 49_CD -RRB-_-RRB- -_: =_SYM -_: are_VBP designed_VBN to_TO provide_VB safetysproofs_NNS for_IN low-level_JJ compiler-generated_JJ programs_NNS ._.
We_PRP also_RB used_VBD a_DT type_NN system_NN to_TO verify_VB program_NN security_NN ,_, but_CC we_PRP targeted_VBD a_DT highlevel_JJ language_NN -LRB-_-LRB- PHP_NN -RRB-_-RRB- and_CC tried_VBD to_TO avoid_VB a_DT
mata_NN ,_, which_WDT define_VBP the_DT legal_JJ sequences_NNS of_IN program_NN actions_NNS ._.
Walker_NNP -LRB-_-LRB- 73_CD -RRB-_-RRB- proposed_VBD a_DT TAL_NNP extension_NN which_WDT uses_VBZ security_NN policies_NNS expressed_VBN in_IN Schneider_NNP 's_POS automata_NN to_TO derive_VB its_PRP$ type_NN system_NN ._.
Jensen_NNP et_FW al._FW =_SYM -_: =[_NN 41_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBN using_VBG a_DT temporal_JJ logic_NN for_IN specifying_VBG a_DT program_NN 's_POS security_NN properties_NNS based_VBN on_IN its_PRP$ control_NN flow_NN ,_, and_CC offered_VBD a_DT model_NN checking_NN technique_NN for_IN verification_NN ._.
In_IN a_DT similar_JJ effort_NN ,_, Chen_NNP and_CC Wagner_NNP
a_DT subject_NN can_MD not_RB access_VB information_NN classified_VBN above_IN its_PRP$ clearance_NN ,_, and_CC b_NN -RRB-_-RRB- a_DT subject_NN can_MD not_RB write_VB to_TO objects_NNS classified_VBN below_IN its_PRP$ clearance_NN ._.
Their_PRP$ original_JJ model_NN only_RB dealt_VBD with_IN confidentiality_NN ;_: Biba_NNP =_SYM -_: =[_NN 10_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ credited_VBN with_IN adding_VBG the_DT concept_NN of_IN integrity_NN ._.
Denning_NN -LRB-_-LRB- 22_CD -RRB-_-RRB- established_VBD a_DT lattice_NN model_NN for_IN analyzing_VBG secure_JJ information_NN flow_NN in_IN imperative_JJ programming_NN languages_NNS based_VBN on_IN a_DT program_NN abstraction_NN -LRB-_-LRB- si_FW
ecently_RB published_VBN a_DT comprehensive_JJ survey_NN on_IN language-based_JJ techniques_NNS for_IN specifying_VBG and_CC enforcing_VBG information-flow_JJ policies_NNS ._.
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS -LRB-_-LRB- 70_CD -RRB-_-RRB- based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NN =_JJ -_: =[_NN 22_CD -RRB-_-RRB- -_: =_SYM -_: appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP -LRB-_-LRB- 7_CD -RRB-_-RRB- proposed_VBD such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NNP and_CC Simonet_NNP -LRB-_-LRB- 56_CD -RRB-_-RRB- proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP -LRB-_-LRB- 50_CD -RRB-_-RRB- went_VBD a_DT step_NN further_RBR to_TO provide_VB an_DT actual_JJ
iated_VBN with_IN optimizing_VBG compilers_NNS ._.
Joshi_NNP and_CC Leino_NNP -LRB-_-LRB- 42_CD -RRB-_-RRB- examined_VBD various_JJ logical_JJ forms_NNS for_IN representing_VBG information_NN flow_NN semantics_NNS ,_, leading_VBG to_TO a_DT characterization_NN containing_VBG Hoare_NN triples_NNS ._.
Darvas_FW et_FW al._FW =_SYM -_: =[_NN 18_CD -RRB-_-RRB- -_: =_SYM -_: went_VBD a_DT step_NN further_RBR in_IN offering_VBG characterizations_NNS in_IN dynamic_JJ logic_NN ,_, which_WDT allows_VBZ the_DT use_NN of_IN general_JJ purpose_NN verifications_NNS tools_NNS -LRB-_-LRB- i.e._FW ,_, theorem_NN provers_NNS -RRB-_-RRB- to_TO analyze_VB secure_JJ information_NN flow_NN within_IN deter_VB
