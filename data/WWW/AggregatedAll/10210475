Efficient_JJ application_NN placement_NN in_IN a_DT dynamic_JJ hosting_VBG platform_NN
Web_NN hosting_VBG providers_NNS are_VBP increasingly_RB looking_VBG into_IN dynamic_NN hosting_VBG to_TO reduce_VB costs_NNS and_CC improve_VB the_DT performance_NN of_IN their_PRP$ platforms_NNS ._.
Instead_RB of_IN provisioning_VBG fixed_VBN resources_NNS to_TO each_DT customer_NN ,_, dynamic_NN hosting_VBG maintains_VBZ a_DT variable_JJ number_NN of_IN application_NN instances_NNS to_TO satisfy_VB current_JJ demand_NN ._.
While_IN existing_VBG research_NN in_IN this_DT area_NN has_VBZ mostly_RB focused_VBN on_IN the_DT algorithms_NNS that_WDT decide_VBP on_IN the_DT number_NN and_CC location_NN of_IN application_NN instances_NNS ,_, we_PRP address_VBP the_DT problem_NN of_IN efficient_JJ enactment_NN of_IN these_DT decisions_NNS once_IN they_PRP are_VBP made_VBN ._.
We_PRP propose_VBP a_DT new_JJ approach_NN to_TO application_NN placement_NN and_CC experimentally_RB show_VBP that_IN it_PRP dramatically_RB reduces_VBZ the_DT cost_NN of_IN application_NN placement_NN ,_, which_WDT in_IN turn_NN improves_VBZ the_DT end-to-end_JJ agility_NN of_IN the_DT hosting_VBG platform_NN in_IN reacting_VBG to_TO demand_VB changes_NNS ._.
chine_NN -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 10_CD ,_, 2_CD -RRB-_-RRB- -RRB-_-RRB- ,_, and_CC ,_, finally_RB ,_, each_DT application_NN instance_NN running_VBG on_IN a_DT dedicated_JJ physical_JJ machine_NN ,_, so_IN that_DT resource_NN management_NN in_IN the_DT data_NNS center_NN occurs_VBZ at_IN the_DT granularity_NN of_IN the_DT entire_JJ machines_NNS =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT environments_NNS differ_VBP in_IN their_PRP$ resource_NN sharing_NN flexibility_NN and_CC the_DT degree_NN of_IN application_NN isolation_NN they_PRP provide_VBP ._.
The_DT immediate_JJ target_NN of_IN our_PRP$ work_NN is_VBZ the_DT environment_NN where_WRB application_NN instances_NNS
e_LS number_NN of_IN application_NN instances_NNS on_IN physical_JJ servers_NNS ,_, and_CC most_JJS research_NN work_NN in_IN this_DT area_NN has_VBZ been_VBN focusing_VBG on_IN the_DT algorithms_NNS to_TO decide_VB on_IN the_DT number_NN and_CC location_NN of_IN the_DT application_NN instances_NNS -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 11_CD ,_, 19_CD ,_, 20_CD ,_, 12_CD ,_, 25_CD ,_, 26_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
We_PRP address_VBP an_DT orthogonal_JJ question_NN of_IN an_DT efficient_JJ way_NN to_TO enact_VB these_DT decisions_NNS once_IN they_PRP are_VBP made_VBN ._.
For_IN example_NN ,_, in_IN the_DT case_NN of_IN a_DT flash_NN crowd_NN or_CC an_DT applicationlevel_NN denial_NN of_IN service_NN attack_NN ,_, if_IN the_DT
e_LS number_NN of_IN application_NN instances_NNS on_IN physical_JJ servers_NNS ,_, and_CC most_JJS research_NN work_NN in_IN this_DT area_NN has_VBZ been_VBN focusing_VBG on_IN the_DT algorithms_NNS to_TO decide_VB on_IN the_DT number_NN and_CC location_NN of_IN the_DT application_NN instances_NNS -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 11_CD ,_, 19_CD ,_, 20_CD ,_, 12_CD ,_, 25_CD ,_, 26_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
We_PRP address_VBP an_DT orthogonal_JJ question_NN of_IN an_DT efficient_JJ way_NN to_TO enact_VB these_DT decisions_NNS once_IN they_PRP are_VBP made_VBN ._.
For_IN example_NN ,_, in_IN the_DT case_NN of_IN a_DT flash_NN crowd_NN or_CC an_DT applicationlevel_NN denial_NN of_IN service_NN attack_NN ,_, if_IN the_DT
been_VBN studied_VBN extensively_RB and_CC used_VBN in_IN multitude_NN of_IN applications_NNS ranging_VBG from_IN instruction_NN prefetching_NN in_IN microprocessors_NNS to_TO Web_NN prefetching_NN ._.
The_DT literature_NN on_IN prefetching_NN is_VBZ too_RB vast_JJ to_TO cite_VB here_RB -LRB-_-LRB- see_VB =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =_JJ -_: and_CC the_DT references_NNS therein_RB for_IN initial_JJ pointers_NNS to_TO prefetching_NN in_IN the_DT operating_NN systems_NNS context_NN -RRB-_-RRB- ._.
We_PRP particularly_RB used_VBD the_DT swap_NN prefetch_NN kernel_NN patch_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- as_IN a_DT base_NN for_IN our_PRP$ implementation_NN ._.
7_CD ._.
LIMITAT_NN
e_LS number_NN of_IN application_NN instances_NNS on_IN physical_JJ servers_NNS ,_, and_CC most_JJS research_NN work_NN in_IN this_DT area_NN has_VBZ been_VBN focusing_VBG on_IN the_DT algorithms_NNS to_TO decide_VB on_IN the_DT number_NN and_CC location_NN of_IN the_DT application_NN instances_NNS -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 11_CD ,_, 19_CD ,_, 20_CD ,_, 12_CD ,_, 25_CD ,_, 26_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
We_PRP address_VBP an_DT orthogonal_JJ question_NN of_IN an_DT efficient_JJ way_NN to_TO enact_VB these_DT decisions_NNS once_IN they_PRP are_VBP made_VBN ._.
For_IN example_NN ,_, in_IN the_DT case_NN of_IN a_DT flash_NN crowd_NN or_CC an_DT applicationlevel_NN denial_NN of_IN service_NN attack_NN ,_, if_IN the_DT
nterest_NN in_IN the_DT efficient_JJ management_NN of_IN data_NN centers_NNS and_CC hosting_VBG platforms_NNS ._.
Different_JJ approaches_NNS target_VBP different_JJ resource-sharing_JJ environments_NNS :_: multiple_JJ applications_NNS sharing_VBG the_DT same_JJ AppServ_NNP instance_NN =_JJ -_: =[_NN 21_CD ,_, 23_CD -RRB-_-RRB- -_: =_JJ -_: ,_, multiple_JJ AppServ_NNP ,_, each_DT dedicated_VBN to_TO its_PRP$ own_JJ application_NN ,_, sharing_VBG the_DT same_JJ physical_JJ machine_NN -LRB-_-LRB- 25_CD ,_, 13_CD -RRB-_-RRB- ,_, each_DT application_NN running_VBG in_IN its_PRP$ own_JJ dedicated_JJ virtual_JJ machine_NN ,_, with_IN virtual_JJ machines_NNS sharing_VBG a_DT ph_NN
0s_NNS delay_VBP on_IN the_DT idle_JJ machine_NN ._.
Other_JJ studies_NNS also_RB report_VBP long_JJ application_NN startup_NN delays_NNS that_WDT could_MD extend_VB to_TO several_JJ minutes_NNS depending_VBG on_IN the_DT particularities_NNS of_IN the_DT application_NN and_CC the_DT server_NN machine_NN =_JJ -_: =[_NN 18_CD ,_, 13_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Startup_NN delays_NNS on_IN the_DT order_NN of_IN minutes_NNS clearly_RB limit_VBP the_DT agility_NN of_IN a_DT hosting_VBG platform_NN :_: an_DT overloaded_JJ site_NN will_MD have_VB to_TO wait_VB this_DT long_JJ even_RB after_IN the_DT platform_NN decides_VBZ to_TO give_VB the_DT site_NN more_JJR resources_NNS
e_LS number_NN of_IN application_NN instances_NNS on_IN physical_JJ servers_NNS ,_, and_CC most_JJS research_NN work_NN in_IN this_DT area_NN has_VBZ been_VBN focusing_VBG on_IN the_DT algorithms_NNS to_TO decide_VB on_IN the_DT number_NN and_CC location_NN of_IN the_DT application_NN instances_NNS -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 11_CD ,_, 19_CD ,_, 20_CD ,_, 12_CD ,_, 25_CD ,_, 26_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
We_PRP address_VBP an_DT orthogonal_JJ question_NN of_IN an_DT efficient_JJ way_NN to_TO enact_VB these_DT decisions_NNS once_IN they_PRP are_VBP made_VBN ._.
For_IN example_NN ,_, in_IN the_DT case_NN of_IN a_DT flash_NN crowd_NN or_CC an_DT applicationlevel_NN denial_NN of_IN service_NN attack_NN ,_, if_IN the_DT
ch_NN dedicated_VBN to_TO its_PRP$ own_JJ application_NN ,_, sharing_VBG the_DT same_JJ physical_JJ machine_NN -LRB-_-LRB- 25_CD ,_, 13_CD -RRB-_-RRB- ,_, each_DT application_NN running_VBG in_IN its_PRP$ own_JJ dedicated_JJ virtual_JJ machine_NN ,_, with_IN virtual_JJ machines_NNS sharing_VBG a_DT physical_JJ machine_NN -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 10_CD ,_, 2_CD -RRB-_-RRB- -_: =--RRB-_NN ,_, and_CC ,_, finally_RB ,_, each_DT application_NN instance_NN running_VBG on_IN a_DT dedicated_JJ physical_JJ machine_NN ,_, so_IN that_DT resource_NN management_NN in_IN the_DT data_NNS center_NN occurs_VBZ at_IN the_DT granularity_NN of_IN the_DT entire_JJ machines_NNS -LRB-_-LRB- 3_CD -RRB-_-RRB- ._.
These_DT environme_NN
rnatives_NNS we_PRP explore_VBP in_IN this_DT paper_NN ._.
Regular_JJ Startup_NNP ._.
Dynamic_NNP application_NN placement_NN mechanisms_NNS often_RB deploy_VBP AppServ_NNP instances_NNS from_IN scratch_NN ,_, including_VBG copying_VBG the_DT necessary_JJ files_NNS onto_IN the_DT target_NN servers_NNS =_JJ -_: =[_NN 21_CD -RRB-_-RRB- -_: =_SYM -_: ._.
An_DT obvious_JJ optimization_NN of_IN this_DT scheme_NN -LRB-_-LRB- which_WDT is_VBZ sometimes_RB approximated_VBN within_IN a_DT data_NN center_NN by_IN using_VBG a_DT shared_JJ file_NN server_NN -RRB-_-RRB- is_VBZ to_TO pre-deploy_VB all_DT applications_NNS everywhere_RB ,_, and_CC simply_RB start_VB and_CC stop_VB Ap_NN
However_RB ,_, our_PRP$ approach_NN is_VBZ fully_RB applicable_JJ to_TO the_DT full_JJ three-tier_JJ arrangements_NNS as_RB well_RB ._.
Different_JJ applications_NNS exhibit_VBP performance_NN bottlenecks_NNS at_IN different_JJ tiers_NNS ._.
We_PRP focus_VBP on_IN the_DT application_NN tier_NN ;_: see_VB =_JJ -_: =[_NN 22_CD ,_, 15_CD -RRB-_-RRB- -_: =_SYM -_: for_IN examples_NNS of_IN the_DT work_NN addressing_VBG the_DT important_JJ issue_NN of_IN the_DT back-end_JJ tier_NN performance_NN ._.
The_DT components_NNS in_IN our_PRP$ hosting_VBG architecture_NN essential_JJ for_IN the_DT discussion_NN in_IN this_DT paper_NN are_VBP shown_VBN in_IN Figure_NNP 1_CD ._.
However_RB ,_, our_PRP$ approach_NN is_VBZ fully_RB applicable_JJ to_TO the_DT full_JJ three-tier_JJ arrangements_NNS as_RB well_RB ._.
Different_JJ applications_NNS exhibit_VBP performance_NN bottlenecks_NNS at_IN different_JJ tiers_NNS ._.
We_PRP focus_VBP on_IN the_DT application_NN tier_NN ;_: see_VB =_JJ -_: =[_NN 22_CD ,_, 15_CD -RRB-_-RRB- -_: =_SYM -_: for_IN examples_NNS of_IN the_DT work_NN addressing_VBG the_DT important_JJ issue_NN of_IN the_DT back-end_JJ tier_NN performance_NN ._.
The_DT components_NNS in_IN our_PRP$ hosting_VBG architecture_NN essential_JJ for_IN the_DT discussion_NN in_IN this_DT paper_NN are_VBP shown_VBN in_IN Figure_NNP 1_CD ._.
verhead_NN can_MD be_VB significant_JJ depending_VBG on_IN the_DT application_NN 's_POS operation_NN mix_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- ._.
In_IN a_DT parallel_JJ study_NN ,_, we_PRP observed_VBD the_DT problem_NN of_IN highcost_JJ application_NN placement_NN in_IN the_DT virtual_JJ machine_NN environment_NN as_RB well_RB =_JJ -_: =[_NN 18_CD -RRB-_-RRB- -_: =_SYM -_: ._.
We_PRP believe_VBP our_PRP$ techniques_NNS should_MD also_RB be_VB useful_JJ in_IN virtualized_JJ environments_NNS and_CC plan_NN to_TO explore_VB them_PRP in_IN this_DT context_NN in_IN the_DT future_NN ._.
Finally_RB ,_, while_IN our_PRP$ testbed_NN mimics_VBZ a_DT single_JJ data_NN center_NN ,_, our_PRP$ techni_NNS
ch_NN dedicated_VBN to_TO its_PRP$ own_JJ application_NN ,_, sharing_VBG the_DT same_JJ physical_JJ machine_NN -LRB-_-LRB- 25_CD ,_, 13_CD -RRB-_-RRB- ,_, each_DT application_NN running_VBG in_IN its_PRP$ own_JJ dedicated_JJ virtual_JJ machine_NN ,_, with_IN virtual_JJ machines_NNS sharing_VBG a_DT physical_JJ machine_NN -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 10_CD ,_, 2_CD -RRB-_-RRB- -_: =--RRB-_NN ,_, and_CC ,_, finally_RB ,_, each_DT application_NN instance_NN running_VBG on_IN a_DT dedicated_JJ physical_JJ machine_NN ,_, so_IN that_DT resource_NN management_NN in_IN the_DT data_NNS center_NN occurs_VBZ at_IN the_DT granularity_NN of_IN the_DT entire_JJ machines_NNS -LRB-_-LRB- 3_CD -RRB-_-RRB- ._.
These_DT environme_NN
ents_NNS on_IN the_DT Internet_NN to_TO a_DT server_NN machine_NN that_WDT currently_RB hosts_VBZ a_DT replica_NN of_IN the_DT requested_VBN application_NN ._.
The_DT request_NN router_NN can_MD be_VB a_DT load_NN balancing_NN switch_NN -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 8_CD -RRB-_-RRB- -RRB-_-RRB- ,_, a_DT requestrouting_VBG DNS_NN server_NN -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 1_CD ,_, 4_CD -RRB-_-RRB- -_: =--RRB-_NN ,_, or_CC an_DT HTTP_NN gateway_NN -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 9_CD -RRB-_-RRB- -RRB-_-RRB- ._.
The_DT request_NN router_NN applies_VBZ the_DT policies_NNS and_CC configurations_NNS that_IN the_DT central_JJ controller_NN issues_NNS at_IN the_DT hosting_VBG platform_NN level_NN ._.
A_DT local_JJ controller_NN runs_VBZ on_IN every_DT server_NN
move_NN applications_NNS '_POS state_NN between_IN disk_NN and_CC main_JJ memory_NN ,_, becomes_VBZ the_DT bottleneck_NN in_IN application_NN placement_NN ._.
We_PRP resurrect_VBP long-abandoned_JJ process_NN swapping_VBG -LRB-_-LRB- moving_VBG an_DT entire_JJ process_NN between_IN disk_NN and_CC memory_NN =_JJ -_: =[_NN 5_CD -RRB-_-RRB- -_: =--RRB-_NN to_TO address_VB this_DT problem_NN ._.
We_PRP demonstrate_VBP how_WRB process_NN swapping_VBG avoids_VBZ the_DT inefficiencies_NNS of_IN modern_JJ OS_NN memory_NN paging_NN techniques_NNS when_WRB activating_VBG a_DT suspended_JJ AppServ_NNP ._.
Finally_RB ,_, we_PRP recognize_VBP that_IN modern_JJ op_NN
,_, Web_NN hosting_VBG 1_CD ._.
INTRODUCTION_NN Web_NN hosting_VBG has_VBZ become_VBN a_DT $_$ 4B_NN industry_NN -LRB-_-LRB- 27_CD -RRB-_-RRB- and_CC a_DT crucial_JJ part_NN of_IN Web_NN infrastructure_NN ._.
Over_IN half_NN of_IN small_JJ and_CC mid-size_JJ businesses_NNS utilize_VBP hosting_VBG to_TO implement_VB Web_NN presence_NN =_JJ -_: =[_NN 14_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC 5,000_CD Web_NN hosting_VBG companies_NNS with_IN over_IN 100_CD clients_NNS were_VBD ∗_NNP This_NNP work_NN is_VBZ supported_VBN in_IN part_NN by_IN the_DT NSF_NNP under_IN Grants_NNPS CNS-0615190_NN ,_, ITR\/ANI_NN -0205519_CD ,_, and_CC CNS-0831535_NN ._.
Copyright_NN is_VBZ held_VBN by_IN the_DT Internatio_NNP
s_NN ,_, Network_NNP operating_VBG systems_NNS General_NNP Terms_NNS Performance_NNP ,_, Design_NNP Keywords_NNPS Application_NN servers_NNS ,_, Startup_NNP performance_NN ,_, Dynamic_NNP placement_NN ,_, Web_NN hosting_VBG 1_CD ._.
INTRODUCTION_NN Web_NN hosting_VBG has_VBZ become_VBN a_DT $_$ 4B_CD industry_NN =_JJ -_: =[_NN 27_CD -RRB-_-RRB- -_: =_JJ -_: and_CC a_DT crucial_JJ part_NN of_IN Web_NN infrastructure_NN ._.
Over_IN half_NN of_IN small_JJ and_CC mid-size_JJ businesses_NNS utilize_VBP hosting_VBG to_TO implement_VB Web_NN presence_NN -LRB-_-LRB- 14_CD -RRB-_-RRB- ,_, and_CC 5,000_CD Web_NN hosting_VBG companies_NNS with_IN over_IN 100_CD clients_NNS were_VBD ∗_NNP This_NNP
