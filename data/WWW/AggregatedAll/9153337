Lock-free_JJ consistency_NN control_NN for_IN web_NN 2.0_CD applications_NNS
Online_JJ collaboration_NN and_CC sharing_NN is_VBZ the_DT central_JJ theme_NN of_IN many_JJ web-based_JJ services_NNS that_WDT create_VBP the_DT so-called_JJ Web_NN 2.0_CD phenomena_NNS ._.
Using_VBG the_DT Internet_NN as_IN a_DT computing_NN platform_NN ,_, many_JJ Web_NN 2.0_CD applications_NNS set_VBD up_RP mirror_NN sites_NNS to_TO provide_VB large-scale_JJ availability_NN and_CC to_TO achieve_VB load_NN balance_NN ._.
However_RB ,_, in_IN the_DT age_NN of_IN Web_NN 2.0_CD ,_, where_WRB every_DT user_NN is_VBZ also_RB a_DT writer_NN and_CC publisher_NN ,_, the_DT deployment_NN of_IN mirror_NN sites_NNS makes_VBZ consistency_NN maintenance_NN a_DT Web_NN scale_NN problem_NN ._.
Traditional_JJ concurrency_NN control_NN methods_NNS -LRB-_-LRB- e.g._FW two_CD phase_NN lock_NN ,_, serialization_NN ,_, etc._NN -RRB-_-RRB- are_VBP not_RB up_RB to_TO the_DT task_NN for_IN several_JJ reasons_NNS ._.
First_JJ ,_, large_JJ network_NN latency_NN between_IN mirror_NN sites_NNS will_MD make_VB two_CD phase_NN locking_VBG a_DT throughput_NN bottleneck_NN ._.
Second_RB ,_, locking_VBG will_MD block_VB a_DT large_JJ portion_NN of_IN concurrent_JJ operations_NNS ,_, which_WDT makes_VBZ it_PRP impossible_JJ to_TO provide_VB large-scale_JJ availability_NN ._.
On_IN the_DT other_JJ hand_NN ,_, most_JJS Web_NN 2.0_CD operations_NNS do_VBP not_RB need_VB strict_JJ serializability_NN -_: it_PRP is_VBZ not_RB the_DT intention_NN of_IN a_DT user_NN who_WP is_VBZ correcting_VBG a_DT typo_NN in_IN a_DT shared_JJ document_NN to_TO block_VB another_DT who_WP is_VBZ adding_VBG a_DT comment_NN ,_, as_RB long_RB as_IN consistency_NN can_MD still_RB be_VB achieved_VBN ._.
Thus_RB ,_, in_IN order_NN to_TO enable_VB maximal_JJ online_NN collaboration_NN and_CC sharing_NN ,_, we_PRP need_VBP a_DT lock-free_JJ mechanism_NN that_WDT can_MD maintain_VB consistency_NN among_IN mirror_NN sites_NNS on_IN the_DT Web_NN ._.
In_IN this_DT paper_NN ,_, we_PRP propose_VBP a_DT flexible_JJ and_CC efficient_JJ method_NN to_TO achieve_VB consistency_NN maintenance_NN in_IN the_DT Web_NN 2.0_CD world_NN ._.
Our_PRP$ experiments_NNS show_VBP its_PRP$ good_JJ performance_NN improvement_NN compared_VBN with_IN existing_VBG methods_NNS based_VBN on_IN distributed_VBN lock_NN ._.
N._NNP Santoro_NNP -LRB-_-LRB- Eds_NNP ._. -RRB-_-RRB-
:_: OPODIS_NN 2009_CD ,_, LNCS_NN 5923_CD ,_, pp_NN ._.
255_CD --_: 269_CD ,_, 2009_CD ._.
c_NN â—‹_CD Springer-Verlag_NNP Berlin_NNP Heidelberg_NNP 2009256_NNP M._NNP Majuntke_NNP et_FW al._FW the_DT storage_NN management_NN system_NN WebDAV_NN -LRB-_-LRB- 6_CD -RRB-_-RRB- ,_, upcoming_VBG Web_NN 2.0_CD applications_NNS =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: like_IN Google_NNP docs_NNS -LRB-_-LRB- 8_CD -RRB-_-RRB- ,_, and_CC a_DT large_JJ number_NN of_IN distributed_VBN file_NN systems_NNS -LRB-_-LRB- 9_CD -RRB-_-RRB- ._.
Online_JJ collaboration_NN usually_RB assumes_VBZ that_IN the_DT participating_VBG clients_NNS trust_VBP each_DT other_JJ --_: otherwise_RB there_EX exists_VBZ no_DT basis_NN for_IN re_NN
utdated_JJ value_NN ,_, if_IN the_DT reader_NN was_VBD already_RB influenced_VBN by_IN a_DT more_RBR recent_JJ update_VBP ._.
Causality_NNP has_VBZ proven_VBN to_TO be_VB important_JJ in_IN various_JJ applications_NNS ,_, such_JJ as_IN various_JJ collaborative_JJ tools_NNS and_CC Web_NN 2.0_CD applications_NNS =_JJ -_: =[_NN 21_CD ,_, 25_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Although_IN usually_RB necessary_JJ for_IN applications_NNS ,_, causality_NN is_VBZ often_RB insufficient_JJ ._.
For_IN example_NN ,_, it_PRP does_VBZ not_RB rule_VB out_RP replay_NN attacks_NNS or_CC prevent_VB two_CD clients_NNS from_IN reading_VBG two_CD different_JJ versions_NNS of_IN an_DT object_NN
lways_NNS preserve_VBP fork_NN sequential_JJ consistency_NN ._.
1_CD Introduction_NN We_PRP examine_VBP an_DT online_JJ collaboration_NN facility_NN providing_VBG storage_NN and_CC data_NN sharing_NN functions_NNS for_IN remote_JJ clients_NNS that_WDT do_VBP not_RB communicate_VB directly_RB =_JJ -_: =[_NN 3_CD ,_, 4_CD ,_, 13_CD ,_, 14_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Specifically_RB ,_, we_PRP consider_VBP a_DT server_NN that_WDT implements_VBZ single-writer_JJ multi-reader_NN registers_VBZ ._.
The_DT storage_NN server_NN may_MD be_VB faulty_JJ ,_, potentially_RB exhibiting_VBG Byzantine_JJ faults_NNS -LRB-_-LRB- 10_CD ,_, 8_CD ,_, 11_CD ,_, 2_CD -RRB-_-RRB- ._.
When_WRB the_DT server_NN is_VBZ
operation_NN becomes_VBZ stable_JJ ._.
Upon_IN completion_NN ,_, only_RB a_DT weaker_JJR notion_NN holds_VBZ ,_, which_WDT should_MD include_VB at_IN least_JJS causal_JJ consistency_NN -LRB-_-LRB- 13_CD -RRB-_-RRB- ,_, a_DT basic_JJ condition_NN that_WDT has_VBZ proven_VBN to_TO be_VB important_JJ in_IN various_JJ applications_NNS =_JJ -_: =[_NN 1_CD ,_, 24_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Whereas_IN the_DT client_NN invokes_VBZ operations_NNS synchronously_RB ,_, stability_NN notifications_NNS occur_VBP asynchronously_RB ;_: the_DT client_NN can_MD invoke_VB more_JJR operations_NNS while_IN waiting_VBG for_IN a_DT notification_NN on_IN a_DT previous_JJ operation_NN ._.
Fai_NN
