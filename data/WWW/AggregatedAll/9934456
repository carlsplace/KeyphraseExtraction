Debugging_VBG standard_JJ document_NN formats_NNS
We_PRP present_VBP a_DT tool_NN for_IN helping_VBG XML_NN schema_NN designers_NNS to_TO obtain_VB a_DT high_JJ quality_NN level_NN for_IN their_PRP$ specifications_NNS ._.
The_DT tool_NN allows_VBZ one_CD to_TO analyze_VB relations_NNS between_IN classes_NNS of_IN XML_NN documents_NNS and_CC formally_RB prove_VB them_PRP ._.
For_IN instance_NN ,_, the_DT tool_NN can_MD be_VB used_VBN to_TO check_VB forward_RB and_CC backward_RB compatibilities_NNS of_IN recommendations_NNS ._.
When_WRB such_JJ a_DT relation_NN does_VBZ not_RB hold_VB ,_, the_DT tool_NN allows_VBZ one_CD to_TO identify_VB the_DT reasons_NNS and_CC reports_VBZ detailed_JJ counter-examples_NNS that_WDT exemplify_VBP the_DT problem_NN ._.
For_IN this_DT purpose_NN ,_, the_DT tool_NN relies_VBZ on_IN recent_JJ advances_NNS in_IN logic-based_JJ automated_JJ theorem_NN proving_NN techniques_NNS that_WDT allow_VBP for_IN efficient_JJ reasoning_NN on_IN very_RB large_JJ sets_NNS of_IN XML_NN documents_NNS ._.
We_PRP believe_VBP this_DT tool_NN can_MD be_VB of_IN great_JJ value_NN for_IN standardization_NN bodies_NNS that_WDT define_VBP specifications_NNS using_VBG various_JJ XML_NN type_NN definition_NN languages_NNS -LRB-_-LRB- such_JJ as_IN W3C_NN specifications_NNS -RRB-_-RRB- ,_, and_CC are_VBP concerned_VBN with_IN quality_NN assurance_NN for_IN their_PRP$ normative_JJ recommendations_NNS ._.
ility_NN to_TO convert_VB the_DT XTiger_NN template_NN into_IN an_DT XML_NN schema_NN greatly_RB simplifies_VBZ comparison_NN with_IN the_DT original_JJ XML_NN schema_NN ._.
When_WRB a_DT literal_JJ comparison_NN does_VBZ not_RB make_VB sense_NN ,_, we_PRP plan_VBP to_TO use_VB the_DT tool_NN presented_VBN in_IN =_JJ -_: =[_NN 5_CD -RRB-_-RRB- -_: =_SYM -_: to_TO make_VB sure_JJ that_IN both_DT schemas_NNS define_VBP exactly_RB the_DT same_JJ type_NN of_IN XML_NN documents_NNS ._.
At_IN some_DT point_NN we_PRP could_MD also_RB have_VB imagined_VBN to_TO go_VB one_CD step_NN further_RBR and_CC to_TO generate_VB the_DT document_NN template_NN from_IN the_DT XML_NN schem_NN
schema_NN languages_NNS ._.
Moreover_RB ,_, the_DT issues_NNS of_IN forward_RB and_CC backward_RB compatibility_NN of_IN document_NN instances_NNS obviously_RB are_VBP posed_VBN when_WRB schema_NN languages_NNS change_VBP from_IN a_DT version_NN to_TO another_DT ._.
We_PRP have_VBP developed_VBN a_DT tool_NN =_JJ -_: =[_NN 6_CD -RRB-_-RRB- -_: =_SYM -_: for_IN helping_VBG XML_NN schema_NN designers_NNS to_TO obtain_VB a_DT high_JJ quality_NN level_NN for_IN their_PRP$ specifications_NNS ._.
It_PRP has_VBZ been_VBN implemented_VBN as_IN a_DT Java\/JSP_NN web_NN application_NN and_CC user_NN interaction_NN is_VBZ offered_VBN through_IN a_DT web_NN user_NN inte_NN
ility_NN to_TO convert_VB the_DT XTiger_NN template_NN into_IN an_DT XML_NN schema_NN greatly_RB simplifies_VBZ comparison_NN with_IN the_DT original_JJ XML_NN schema_NN ._.
When_WRB a_DT literal_JJ comparison_NN does_VBZ not_RB make_VB sense_NN ,_, we_PRP plan_VBP to_TO use_VB the_DT tool_NN presented_VBN in_IN =_JJ -_: =[_NN 5_CD -RRB-_-RRB- -_: =_SYM -_: to_TO make_VB sure_JJ that_IN both_DT schemas_NNS define_VBP exactly_RB the_DT same_JJ type_NN of_IN XML_NN documents_NNS ._.
At_IN some_DT point_NN we_PRP could_MD also_RB have_VB imagined_VBN to_TO go_VB one_CD step_NN further_RBR and_CC to_TO generate_VB the_DT document_NN template_NN from_IN the_DT XML_NN schem_NN
ritten_NN in_IN different_JJ languages_NNS are_VBP equivalent_JJ ,_, i.e._FW they_PRP describe_VBP the_DT same_JJ structure_NN ,_, possibly_RB with_IN some_DT differences_NNS due_JJ to_TO the_DT expressivity_NN of_IN the_DT language_NN for_IN defining_VBG tree_NN grammar_NN based_VBN constraints_NNS =_JJ -_: =[_NN 7_CD ,_, 3_CD ,_, 2_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Otherwise_RB ,_, another_DT issue_NN is_VBZ to_TO precisely_RB identify_VB the_DT differences_NNS between_IN two_CD versions_NNS of_IN the_DT same_JJ schema_NN expressed_VBN in_IN different_JJ languages_NNS ._.
Moreover_RB ,_, the_DT issues_NNS raised_VBN by_IN forward_RB and_CC backward_RB compat_NN
ritten_NN in_IN different_JJ languages_NNS are_VBP equivalent_JJ ,_, i.e._FW they_PRP describe_VBP the_DT same_JJ structure_NN ,_, possibly_RB with_IN some_DT differences_NNS due_JJ to_TO the_DT expressivity_NN of_IN the_DT language_NN for_IN defining_VBG tree_NN grammar_NN based_VBN constraints_NNS =_JJ -_: =[_NN 7_CD ,_, 3_CD ,_, 2_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Otherwise_RB ,_, another_DT issue_NN is_VBZ to_TO precisely_RB identify_VB the_DT differences_NNS between_IN two_CD versions_NNS of_IN the_DT same_JJ schema_NN expressed_VBN in_IN different_JJ languages_NNS ._.
Moreover_RB ,_, the_DT issues_NNS raised_VBN by_IN forward_RB and_CC backward_RB compat_NN
through_IN area_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- of_IN Figure_NNP 2_CD :_: Screenshot_NN of_IN the_DT Solver_NNP Interface_NNP ._.
Predicates_NNS are_VBP in_IN fact_NN translated_VBN automatically_RB by_IN our_PRP$ tool_NN to_TO logical_JJ formulas_NNS used_VBN by_IN a_DT solver_NN we_PRP developed_VBD in_IN an_DT earlier_JJR work_NN -LRB-_-LRB- see_VB =_JJ -_: =[_NN 5_CD ,_, 1_CD -RRB-_-RRB- -_: =_SYM -_: for_IN the_DT underlying_JJ logic_NN and_CC its_PRP$ satisfiability-testing_JJ algorithm_NN -RRB-_-RRB- ._.
As_IN a_DT result_NN ,_, the_DT low_JJ level_NN logical_JJ formulation_NN and_CC resolution_NN remain_VBP transparent_JJ to_TO the_DT XML_NN schema_NN designer_NN ._.
Additional_JJ predicates_NNS
ritten_NN in_IN different_JJ languages_NNS are_VBP equivalent_JJ ,_, i.e._FW they_PRP describe_VBP the_DT same_JJ structure_NN ,_, possibly_RB with_IN some_DT differences_NNS due_JJ to_TO the_DT expressivity_NN of_IN the_DT language_NN for_IN defining_VBG tree_NN grammar_NN based_VBN constraints_NNS =_JJ -_: =[_NN 7_CD ,_, 3_CD ,_, 2_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Otherwise_RB ,_, another_DT issue_NN is_VBZ to_TO precisely_RB identify_VB the_DT differences_NNS between_IN two_CD versions_NNS of_IN the_DT same_JJ schema_NN expressed_VBN in_IN different_JJ languages_NNS ._.
Moreover_RB ,_, the_DT issues_NNS raised_VBN by_IN forward_RB and_CC backward_RB compat_NN
rithm_NN -RRB-_-RRB- ._.
As_IN a_DT result_NN ,_, the_DT low_JJ level_NN logical_JJ formulation_NN and_CC resolution_NN remain_VBP transparent_JJ to_TO the_DT XML_NN schema_NN designer_NN ._.
Additional_JJ predicates_NNS related_VBN to_TO the_DT analysis_NN of_IN XPath_NN expressions_NNS can_MD be_VB found_VBN in_IN =_JJ -_: =[_NN 4_CD -RRB-_-RRB- -_: =_SYM -_: ._.
During_IN the_DT demonstration_NN ,_, we_PRP show_VBP that_IN the_DT tool_NN works_VBZ well_RB in_IN terms_NNS of_IN performance_NN on_IN the_DT fairly_RB large_JJ schemas_NNS such_JJ as_IN XHTML_NN ,_, MathML_NN ,_, and_CC SMIL_NNP ._.
Once_RB a_DT counter-example_NN is_VBZ generated_VBN ,_, we_PRP provide_VBP it_PRP to_TO
through_IN area_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- of_IN Figure_NNP 2_CD :_: Screenshot_NN of_IN the_DT Solver_NNP Interface_NNP ._.
Predicates_NNS are_VBP in_IN fact_NN translated_VBN automatically_RB by_IN our_PRP$ tool_NN to_TO logical_JJ formulas_NNS used_VBN by_IN a_DT solver_NN we_PRP developed_VBD in_IN an_DT earlier_JJR work_NN -LRB-_-LRB- see_VB =_JJ -_: =[_NN 5_CD ,_, 1_CD -RRB-_-RRB- -_: =_SYM -_: for_IN the_DT underlying_JJ logic_NN and_CC its_PRP$ satisfiability-testing_JJ algorithm_NN -RRB-_-RRB- ._.
As_IN a_DT result_NN ,_, the_DT low_JJ level_NN logical_JJ formulation_NN and_CC resolution_NN remain_VBP transparent_JJ to_TO the_DT XML_NN schema_NN designer_NN ._.
Additional_JJ predicates_NNS
