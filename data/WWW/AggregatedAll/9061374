Extending_VBG the_DT compatibility_NN notion_NN for_IN abstract_JJ WS-BPEL_NN processes_NNS
WS-BPEL_NN defines_VBZ a_DT standard_NN for_IN executable_JJ processes_NNS ._.
Executable_JJ processes_NNS are_VBP business_NN processes_NNS which_WDT can_MD be_VB automated_VBN through_IN an_DT IT_NNP infrastructure_NN ._.
The_DT WS-BPEL_NN specification_NN also_RB introduces_VBZ the_DT concept_NN of_IN abstract_JJ processes_NNS :_: In_IN contrast_NN to_TO their_PRP$ executable_JJ siblings_NNS ,_, abstract_JJ processes_NNS are_VBP not_RB executable_JJ and_CC can_MD have_VB parts_NNS where_WRB business_NN logic_NN is_VBZ disguised_VBN ._.
Nevertheless_RB ,_, the_DT WS-BPEL_NN specification_NN introduces_VBZ a_DT notion_NN of_IN compatibility_NN between_IN such_JJ an_DT under-specified_JJ abstract_JJ process_NN and_CC a_DT fully_RB specified_VBN executable_JJ one_CD ._.
Basically_RB ,_, this_DT compatibility_NN notion_NN defines_VBZ a_DT set_NN of_IN syntactical_JJ rules_NNS that_WDT can_MD be_VB augmented_VBN or_CC restricted_VBN by_IN profiles_NNS ._.
So_RB far_RB ,_, there_EX exist_VBP two_CD of_IN such_JJ profiles_NNS :_: the_DT Abstract_NNP Process_VB Profile_NNP for_IN Observable_NNP Behavior_NNP and_CC the_DT Abstract_NNP Process_VB Profile_NNP for_IN Templates_NNPS ._.
None_NN of_IN these_DT profiles_NNS defines_VBZ a_DT concept_NN of_IN behavioral_JJ equivalence_JJ ._.
Therefore_RB ,_, both_DT profiles_NNS are_VBP too_RB strict_JJ with_IN respect_NN to_TO the_DT rules_NNS they_PRP impose_VBP when_WRB deciding_VBG whether_IN an_DT executable_JJ process_NN is_VBZ compatible_JJ to_TO an_DT abstract_JJ one_CD ._.
In_IN this_DT paper_NN ,_, we_PRP propose_VBP a_DT novel_JJ profile_NN that_WDT extends_VBZ the_DT existing_VBG Abstract_NNP Process_VB Profile_NNP for_IN Observable_NNP Behavior_NNP by_IN defining_VBG a_DT behavioral_JJ relationship_NN ._.
We_PRP also_RB show_VBP that_IN our_PRP$ novel_JJ profile_NN allows_VBZ for_IN more_JJR flexibility_NN when_WRB deciding_VBG whether_IN an_DT executable_JJ and_CC an_DT abstract_JJ process_NN are_VBP compatible_JJ ._.
cal_JJ models_NNS for_IN the_DT buyer_NN -LRB-_-LRB- left_NN -RRB-_-RRB- and_CC the_DT shipper_NN -LRB-_-LRB- right_NN -RRB-_-RRB- ._.
The_DT approach_NN requires_VBZ a_DT suitable_JJ decision_NN procedure_NN for_IN checking_NN accordance_NN -LRB-_-LRB- 23,22_CD -RRB-_-RRB- or_CC powerful_JJ transformation_NN rules_NNS which_WDT preserve_VBP accordance_NN =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Both_DT appear_VBP to_TO be_VB more_RBR advanced_JJ for_IN establishing_VBG deadlock_NN freedom_NN than_IN for_IN livelock_NN freedom_NN ,_, so_RB more_JJR progress_NN needs_VBZ to_TO be_VB made_VBN there_RB ._.
A_DT second_JJ opportunity_NN for_IN deriving_VBG local_JJ processes_NNS is_VBZ to_TO use_VB the_DT
ucing_VBG a_DT posteriori_NN or_CC better_JJR on_IN the_DT fly_NN the_DT global_JJ component_NN ._.
At_IN last_JJ ,_, the_DT dynamical_JJ insertion_NN of_IN a_DT component_NN in_IN a_DT business_NN process_NN requires_VBZ to_TO check_VB whether_IN this_DT insertion_NN is_VBZ behaviorally_RB consistent_JJ =_JJ -_: =[_NN 24_CD ,_, 13_CD -RRB-_-RRB- -_: =_JJ -_: Goals_NNS ._.
We_PRP do_VBP not_RB intend_VB to_TO check_VB global_JJ properties_NNS based_VBN on_IN a_DT modular_JJ verification_NN technique_NN ._.
Rather_RB ,_, given_VBN an_DT interaction_NN protocol_NN per_IN component_NN and_CC a_DT global_JJ property_NN to_TO ensure_VB ,_, we_PRP want_VBP to_TO synthetiz_VB
ntations_NNS for_IN the_DT example_NN online_NN shop_NN are_VBP depicted_VBN in_IN Fig._NNP 3_CD ._.
1_CD Beside_NN insertion_NN of_IN internal_JJ activities_NNS such_JJ as_IN ``_`` store_NN order_NN ''_'' ,_, also_RB reordering_NN of_IN activities_NNS does_VBZ not_RB necessarily_RB jeopardize_VB conformance_NN =_JJ -_: =[_NN 8_CD -RRB-_-RRB- -_: =_SYM -_: ._.
For_IN example_NN ,_, implementation_NN in_IN Fig._NNP 3_CD -LRB-_-LRB- a_DT -RRB-_-RRB- receives_VBZ the_DT order_NN and_CC the_DT confirmation_NN message_NN concurrently_RB ,_, 1_CD To_TO ease_VB the_DT presentation_NN ,_, we_PRP again_RB use_VBP BPMN_NN to_TO diagram_NN the_DT implementations_NNS and_CC focus_VB on_IN the_DT m_NN
and_CC we_PRP project_VBP it_PRP to_TO those_DT interactions_NNS that_WDT appear_VBP in_IN its_PRP$ protocol_NN ,_, the_DT question_NN is_VBZ whether_IN or_CC not_RB the_DT projected_JJ orchestration_NN is_VBZ compatible_JJ with_IN the_DT service_NN 's_POS protocol_NN ._.
This_DT question_NN is_VBZ studied_VBN in_IN =_JJ -_: =[_NN 9_CD -RRB-_-RRB- -_: =_SYM -_: ._.
4_CD Adaptation_NN When_WRB two_CD services_NNS are_VBP incompatible_JJ ,_, it_PRP may_MD be_VB possible_JJ to_TO introduce_VB an_DT adapter_NN to_TO resolve_VB their_PRP$ mismatches_NNS ._.
In_IN such_JJ cases_NNS ,_, the_DT service_NN protocols_NNS are_VBP said_VBN to_TO be_VB adaptable_JJ ._.
Depending_VBG on_IN t_NN
perations_NNS ,_, we_PRP would_MD transform_VB given_VBN service_NN behaviors_NNS ._.
Potential_JJ applications_NNS include_VBP the_DT repair_NN of_IN malfunctioning_VBG compositions_NNS -LRB-_-LRB- 7_CD -RRB-_-RRB- ,_, the_DT generation_NN of_IN public_JJ views_NNS out_IN of_IN private_JJ views_NNS ,_, or_CC vice_RB versa_RB =_JJ -_: =[_NN 8_CD ,_, 9_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Service_NN behaviors_NNS need_VBP to_TO be_VB compared_VBN with_IN each_DT other_JJ ._.
A_DT core_NN concept_NN in_IN this_DT regard_NN is_VBZ the_DT one_CD of_IN equivalence_JJ ._.
Several_JJ equivalence_JJ notions_NNS for_IN services_NNS have_VBP already_RB been_VBN proposed_VBN ._.
Not_RB all_DT of_IN these_DT
her_PRP$ Snew_NNP can_MD substitute_VB Sold_NNP -LRB-_-LRB- 2_CD -RRB-_-RRB- ._.
The_DT approach_NN ensures_VBZ that_IN every_DT service_NN S_NN that_WDT interacts_VBZ properly_RB with_IN Sold_NN also_RB interacts_VBZ properly_RB with_IN Snew_NNP ._.
A_DT properly_RB interacting_VBG service_NN is_VBZ called_VBN a_DT partner_NN ._.
In_IN =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_JJ -_: ,_, we_PRP have_VBP applied_VBN these_DT techniques_NNS to_TO WS-BPEL_NN processes_NNS ._.
However_RB ,_, this_DT approach_NN only_RB covers_VBZ the_DT static_JJ and_CC not_RB the_DT dynamic_JJ business_NN protocol_NN evolution_NN ._.
A_DT service_NN has_VBZ running_VBG instances_NNS ._.
In_IN case_NN a_DT servi_NN
real_JJ -LRB-_-LRB- BPEL_NN -RRB-_-RRB- specification_NN using_VBG ,_, for_IN instance_NN ,_, the_DT feature-complete_JJ Petri_NNP net_NN semantics_NNS -LRB-_-LRB- 7_CD -RRB-_-RRB- for_IN BPEL_NN which_WDT is_VBZ available_JJ as_IN an_DT implemented_VBN translation_NN from_IN BPEL_NN to_TO Petri_NNP nets_NNS using_VBG the_DT tool_NN BPEL2oWFN_NN =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_SYM -_: ._.
On_IN the_DT level_NN of_IN service_NN models_NNS ,_, a_DT strategy_NN of_IN a_DT given_JJ finite_JJ state_NN service_NN S_NN is_VBZ another_DT finite_JJ state_NN service_NN S_NN ′_NN with_IN compatible_JJ interface_NN such_JJ that_IN the_DT composition_NN of_IN S_NN with_IN S_NN ′_NN forms_VBZ a_DT deadlock_NN fr_NN
