Evaluation_NN of_IN edge_NN caching\/offloading_NN for_IN dynamic_JJ content_NN delivery_NN
As_IN dynamic_JJ content_NN becomes_VBZ increasingly_RB dominant_JJ ,_, it_PRP becomes_VBZ an_DT important_JJ research_NN topic_NN as_IN how_WRB the_DT edge_NN resources_NNS such_JJ as_IN client-side_JJ proxies_NNS ,_, which_WDT are_VBP otherwise_RB underutilized_VBN for_IN such_JJ content_NN ,_, can_MD be_VB put_VBN into_IN use_NN ._.
However_RB ,_, it_PRP is_VBZ unclear_JJ what_WP will_MD be_VB the_DT best_JJS strategy_NN and_CC the_DT design\/deployment_NN tradeoffs_NNS lie_VBP therein_RB ._.
In_IN this_DT paper_NN ,_, using_VBG one_CD representative_JJ e-commerce_NN benchmark_NN ,_, we_PRP report_VBP our_PRP$ experience_NN of_IN an_DT extensive_JJ investigation_NN of_IN different_JJ offloading_VBG and_CC caching_VBG options_NNS ._.
Our_PRP$ results_NNS point_VBP out_RP that_IN ,_, while_IN great_JJ benefits_NNS can_MD be_VB reached_VBN in_IN general_JJ ,_, advanced_JJ offloading_VBG strategies_NNS can_MD be_VB overly_RB complex_JJ and_CC even_RB counter-productive_JJ ._.
In_IN contrast_NN ,_, simple_JJ augmentation_NN at_IN proxies_NNS to_TO enable_VB fragment_NN caching_NN and_CC page_NN composition_NN achieves_VBZ most_JJS of_IN the_DT benefit_NN without_IN compromising_VBG important_JJ considerations_NNS such_JJ as_IN security_NN ._.
cation_NN modifications_NNS -LRB-_-LRB- 59_CD ,_, 133_CD -RRB-_-RRB- ._.
As_IN a_DT result_NN ,_, databases_NNS tend_VBP to_TO be_VB centralized_VBN to_TO meet_VB the_DT strong_JJ consistency_NN requirements_NNS of_IN many_JJ eBusiness_NN applications_NNS such_JJ as_IN banking_NN ,_, finance_NN ,_, and_CC online_NN retailing_NN =_JJ -_: =[_NN 165_CD -RRB-_-RRB- -_: =_SYM -_: ._.
In_IN the_DT absence_NN of_IN both_CC caching_NN and_CC replication_NN ,_, WAN_NNP bandwidth_NN can_MD easily_RB become_VB a_DT limiting_VBG factor_NN in_IN the_DT performance_NN and_CC scalability_NN of_IN data-intensive_JJ applications_NNS ._.
This_DT chapter_NN reports_VBZ on_IN a_DT new_JJ sol_NN
ving_JJ data_NNS and_CC application_NN closer_RBR to_TO users_NNS ,_, researchers_NNS have_VBP proposed_VBN several_JJ variants_NNS of_IN edge_NN caching_NN depending_VBG upon_IN how_WRB much_JJ of_IN the_DT application_NN is_VBZ offloaded_VBN to_TO the_DT edge_NN caches_NNS -LRB-_-LRB- 1_CD ,_, 2_CD ,_, 4_CD -RRB-_-RRB- ._.
Yuan_NNP et_FW al._FW =_SYM -_: =[_NN 17_CD -RRB-_-RRB- -_: =_JJ -_: present_JJ an_DT in-depth_JJ evaluation_NN of_IN these_DT variants_NNS studying_VBG the_DT pros_NNS and_CC cons_NNS of_IN each_DT approach_NN ._.
However_RB ,_, very_RB few_JJ of_IN the_DT current_JJ edge_NN caching_NN techniques_NNS promote_VBP cooperation_NN among_IN the_DT individual_JJ edge_NN ca_MD
this_DT trend_NN very_RB well_RB ,_, by_IN migrating_VBG the_DT presentation_NN tier_NN to_TO the_DT edge_NN server_NN ,_, and_CC keeping_VBG the_DT business_NN logic_NN and_CC database_NN access_NN in_IN the_DT original_JJ server_NN ._.
This_DT has_VBZ been_VBN exploited_VBN in_IN the_DT recent_JJ study_NN in_IN =_JJ -_: =[_NN 19_CD ,_, 47_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Examples_NNS of_IN this_DT method_NN are_VBP vMatrix_NN -LRB-_-LRB- 4_CD -RRB-_-RRB- ,_, IBM_NNP Websphere_NNP -LRB-_-LRB- 21_CD -RRB-_-RRB- ,_, Active_JJ Cache_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ,_, Gemini_NNP -LRB-_-LRB- 30_CD -RRB-_-RRB- ,_, Proxy_NN +_CC -LRB-_-LRB- 48_CD -RRB-_-RRB- ,_, and_CC SEE_VB -LRB-_-LRB- 27_CD -RRB-_-RRB- ._.
Function_NN caching_NN makes_VBZ content_NN delivery_NN closely_RB coupled_VBN with_IN Web_NN application_NN d_NN
its_PRP$ including_VBG latency_NN and_CC server_NN load_NN reduction_NN are_VBP important_JJ factors_NNS to_TO consider_VB ,_, issues_NNS such_JJ as_IN engineering_NN complexity_NN as_RB well_RB as_IN security_NN implication_NN are_VBP of_IN even_RB higher_JJR priority_NN ._.
Our_PRP$ previous_JJ work_NN =_JJ -_: =[_NN 12_CD -RRB-_-RRB- -_: =_SYM -_: investigates_VBZ what_WP will_MD be_VB the_DT best_JJS offloading_NN and_CC caching_NN strategies_NNS and_CC their_PRP$ design\/deployment_NN tradeoffs_NNS given_VBN the_DT proxy_NN resources_NNS at_IN the_DT edge_NN of_IN the_DT network_NN ._.
We_PRP have_VBP shown_VBN that_IN simply_RB caching_VBG dyna_NN
stributed_VBN database_NN system_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ._.
As_IN a_DT result_NN ,_, databases_NNS tend_VBP to_TO be_VB centralized_VBN to_TO meet_VB the_DT strong_JJ consistency_NN requirements_NNS of_IN many_JJ eBusiness_NN applications_NNS such_JJ as_IN banking_NN ,_, finance_NN ,_, and_CC online_NN retailing_NN =_JJ -_: =[_NN 50_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Thus_RB ,_, the_DT back-end_JJ database_NN is_VBZ usually_RB located_JJ far_RB from_IN many_JJ sets_NNS of_IN first_JJ and_CC second-tier_JJ nodes_NNS -LRB-_-LRB- 4_CD -RRB-_-RRB- ._.
In_IN the_DT absence_NN of_IN both_CC caching_NN and_CC replication_NN ,_, WAN_NNP bandwidth_NN can_MD easily_RB become_VB a_DT limiting_VBG facto_JJ
bjects_NNS at_IN edge_NN proxy_NN servers_NNS closer_RBR to_TO the_DT user_NN minimizes_VBZ the_DT delay_NN at_IN the_DT user-end_NN while_IN reducing_VBG the_DT bandwidth_NN requirements_NNS at_IN the_DT origin_NN server_NN by_IN serving_VBG a_DT fraction_NN of_IN the_DT requests_NNS at_IN the_DT proxies_NNS =_JJ -_: =[_NN 25_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Furthermore_RB ,_, Barnett_NNP shows_VBZ that_IN distributed_VBN approaches_NNS can_MD solve_VB the_DT main_JJ problems_NNS associated_VBN with_IN centralized_JJ design_NN without_IN increasing_VBG cost_NN -LRB-_-LRB- 16_CD -RRB-_-RRB- ._.
However_RB ,_, Hefeeda_NNP et_FW al._FW argue_VBP that_IN proxy-based_JJ app_NN
ance_NN to_TO network_NN partitions_NNS -LRB-_-LRB- 7_CD -RRB-_-RRB- ._.
As_IN a_DT result_NN ,_, databases_NNS tend_VBP to_TO be_VB centralized_VBN to_TO meet_VB the_DT strong_JJ consistency_NN requirements_NNS of_IN many_JJ eBusiness_NN applications_NNS such_JJ as_IN banking_NN ,_, finance_NN ,_, and_CC online_NN retailing_NN =_JJ -_: =[_NN 38_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Thus_RB ,_, the_DT back-end_JJ database_NN is_VBZ usually_RB located_JJ far_RB from_IN many_JJ sets_NNS of_IN first_JJ and_CC second-tier_JJ nodes_NNS -LRB-_-LRB- 2_CD -RRB-_-RRB- ._.
In_IN the_DT absence_NN of_IN both_CC caching_NN and_CC replication_NN ,_, WAN_NNP bandwidth_NN can_MD easily_RB become_VB a_DT limiting_VBG facto_JJ
ance_NN to_TO network_NN partitions_NNS -LRB-_-LRB- 7_CD -RRB-_-RRB- ._.
As_IN a_DT result_NN ,_, databases_NNS tend_VBP to_TO be_VB centralized_VBN to_TO meet_VB the_DT strong_JJ consistency_NN requirements_NNS of_IN many_JJ eBusiness_NN applications_NNS such_JJ as_IN banking_NN ,_, finance_NN ,_, and_CC online_NN retailing_NN =_JJ -_: =[_NN 38_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Thus_RB ,_, the_DT back-end_JJ database_NN is_VBZ usually_RB located_JJ far_RB from_IN many_JJ sets_NNS of_IN first_JJ and_CC second-tier_JJ nodes_NNS -LRB-_-LRB- 2_CD -RRB-_-RRB- ._.
In_IN the_DT absence_NN of_IN both_CC caching_NN and_CC replication_NN ,_, WAN_NNP bandwidth_NN can_MD easily_RB become_VB a_DT limiting_VBG facto_JJ
usiness_NN logic_NN tier_NN -RRB-_-RRB- ,_, and_CC web_NN server_NN tier_NN -LRB-_-LRB- or_CC the_DT presentation_NN tier_NN -RRB-_-RRB- ._.
Of_IN these_DT three_CD layers_NNS ,_, the_DT database_NN layer_NN is_VBZ generally_RB maintained_VBN at_IN the_DT origin_NN server_NN for_IN the_DT purposes_NNS of_IN simplicity_NN ._.
Chun_NNP et_FW al._FW =_SYM -_: =[_NN 108_CD -RRB-_-RRB- -_: =_SYM -_: present_VB a_DT comparative_JJ study_NN of_IN 4_CD different_JJ offloading_VBG strategies_NNS ._.
The_DT four_CD strategies_NNS are_VBP evaluated_VBN with_IN respect_NN to_TO the_DT security_NN concerns_NNS ,_, implementation_NN complexities_NNS ,_, and_CC performance_NN ._.
The_DT results_NNS pr_VBP
es_NNS assume_VBP that_IN the_DT pages_NNS of_IN the_DT site_NN are_VBP already_RB fragmented_JJ ,_, which_WDT generally_RB either_CC implies_VBZ that_IN the_DT site_NN is_VBZ constructed_VBN with_IN specific_JJ tools_NNS that_WDT make_VBP it_PRP possible_JJ to_TO create_VB and_CC handle_VB fragments_NNS -LRB-_-LRB- -LRB-_-LRB- 10_CD -RRB-_-RRB- ,_, =_JJ -_: =[_NN 9_CD -RRB-_-RRB- -_: =--RRB-_NN ,_, orsthat_VBP the_DT administrator_NN does_VBZ the_DT fragmentation_NN manually_RB -LRB-_-LRB- -LRB-_-LRB- 11_CD -RRB-_-RRB- ,_, -LRB-_-LRB- 3_CD -RRB-_-RRB- -RRB-_-RRB- ._.
The_DT first_JJ assumption_NN is_VBZ too_RB restrictive_JJ ,_, as_IN existing_VBG sites_NNS seldom_RB handle_VBP fragments_NNS originally_RB ,_, while_IN the_DT second_JJ is_VBZ costly_JJ ,_, erro_NN
its_PRP$ including_VBG latency_NN and_CC server_NN load_NN reduction_NN are_VBP important_JJ factors_NNS to_TO consider_VB ,_, issues_NNS such_JJ as_IN engineering_NN complexity_NN as_RB well_RB as_IN security_NN implication_NN are_VBP of_IN even_RB higher_JJR priority_NN ._.
Our_PRP$ previous_JJ work_NN =_JJ -_: =[_NN 20_CD -RRB-_-RRB- -_: =_SYM -_: investigates_VBZ what_WP will_MD be_VB the_DT best_JJS offloading_NN and_CC caching_NN strategies_NNS and_CC their_PRP$ design\/deployment_NN tradeoffs_NNS given_VBN the_DT proxy_NN resources_NNS at_IN the_DT edge_NN of_IN the_DT network_NN ._.
We_PRP have_VBP shown_VBN that_IN simply_RB caching_VBG dyna_NN
