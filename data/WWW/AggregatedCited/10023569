Autonomous_JJ resource_NN provisioning_VBG for_IN multi-service_JJ web_NN applications_NNS
Dynamic_NNP resource_NN provisioning_VBG aims_NNS at_IN maintaining_VBG the_DT end-to-end_JJ response_NN time_NN of_IN a_DT web_NN application_NN within_IN a_DT pre-defined_JJ SLA_NNP ._.
Although_IN the_DT topic_NN has_VBZ been_VBN well_RB studied_VBN for_IN monolithic_JJ applications_NNS ,_, provisioning_VBG resources_NNS for_IN applications_NNS composed_VBN of_IN multiple_JJ services_NNS remains_VBZ a_DT challenge_NN ._.
When_WRB the_DT SLA_NNP is_VBZ violated_VBN ,_, one_PRP must_MD decide_VB which_WDT service_NN -LRB-_-LRB- s_NNS -RRB-_-RRB- should_MD be_VB reprovisioned_VBN for_IN optimal_JJ effect_NN ._.
We_PRP propose_VBP to_TO assign_VB an_DT SLA_NNP only_RB to_TO the_DT front-end_JJ service_NN ._.
Other_JJ services_NNS are_VBP not_RB given_VBN any_DT particular_JJ response_NN time_NN objectives_NNS ._.
Services_NNPS are_VBP autonomously_RB responsible_JJ for_IN their_PRP$ own_JJ provisioning_VBG operations_NNS and_CC collaboratively_RB negotiate_VB performance_NN objectives_NNS with_IN each_DT other_JJ to_TO decide_VB the_DT provisioning_VBG service_NN -LRB-_-LRB- s_NNS -RRB-_-RRB- ._.
We_PRP demonstrate_VBP through_IN extensive_JJ experiments_NNS that_IN our_PRP$ system_NN can_MD add\/remove\/shift_VB both_DT servers_NNS and_CC caches_NNS within_IN an_DT entire_JJ multi-service_JJ application_NN under_IN varying_VBG workloads_NNS to_TO meet_VB the_DT SLA_NNP target_NN and_CC improve_VB resource_NN utilization_NN ._.
multiservice_JJ Web_NN applications_NNS ,_, where_WRB Web_NN applications_NNS are_VBP not_RB only_RB constructed_VBN as_IN a_DT sequence_NN of_IN tiers_NNS but_CC can_MD also_RB consist_VB of_IN multiple_JJ services_NNS interacting_VBG with_IN each_DT otherin_NN a_DT directed_JJ acyclic_JJ graph_NN =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT works_NNS however_RB assume_VBP that_IN the_DT underlying_JJ provisioning_VBG machines_NNS are_VBP homogeneous_JJ ._.
This_DT is_VBZ a_DT reasonable_JJ assumption_NN in_IN mediumscale_JJ environments_NNS such_JJ as_IN cluster_NN computers_NNS ._.
However_RB ,_, in_IN Cloud_NNP computi_NNS
uired_JJ number_NN of_IN servers_NNS per_IN service_NN can_MD be_VB derived_VBN ._.
This_DT model_NN considers_VBZ that_IN each_DT server_NN has_VBZ a_DT fixed_VBN maximum_NN capacity_NN ,_, approach_NN basically_RB equivalent_JJ to_TO assigning_VBG an_DT SLA_NN to_TO each_DT service_NN ._.
As_IN proved_VBN in_IN =_JJ -_: =[_NN 6_CD -RRB-_-RRB- -_: =_JJ -_: ,_, this_DT can_MD lead_VB to_TO resources_NNS wasting_VBG and_CC over-provisioning_NN ._.
Studies_NNS presented_VBN in_IN -LRB-_-LRB- 6_CD -RRB-_-RRB- focus_NN on_IN multi-service_JJ web_NN applications_NNS designed_VBN as_IN directed_JJ acyclic_JJ graphs_NNS ._.
They_PRP consider_VBP that_IN only_RB the_DT front-end_NN
ng_NN is_VBZ another_DT direction_NN for_IN improving_VBG the_DT Web_NN performance_NN ._.
While_IN not_RB directly_RB related_JJ ,_, our_PRP$ work_NN was_VBD partially_RB inspired_VBN by_IN the_DT work_NN of_IN dynamic_JJ resource_NN provisioning_VBG between_IN multiple_JJ dependent_JJ services_NNS =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_JJ -_: ,_, -LRB-_-LRB- 8_CD -RRB-_-RRB- ._.
Intuitively_RB ,_, allocating_VBG more_JJR resource_NN to_TO the_DT back-end_JJ server_NN may_MD improve_VB theâ€˜ServiceTime_NN '_'' ,_, whileputtingmorefront-endserverscloser_JJ totheclientsmayreducetheRTT_NN ._.
Althoughourapproachdoes_NNS not_RB realloca_NN
can_MD be_VB represented_VBN as_IN a_DT directed_JJ acyclic_JJ graph_NN ._.
Thus_RB ,_, we_PRP need_VBP a_DT provisioning_VBG algorithm_NN that_WDT is_VBZ able_JJ to_TO provide_VB very_RB good_JJ performance_NN for_IN arbitrary_JJ complex_NN applications_NNS ._.
We_PRP chose_VBD the_DT one_NN presented_VBN in_IN =_JJ -_: =[_NN 17_CD -RRB-_-RRB- -_: =_SYM -_: ._.
This_DT dynamic_JJ resource_NN provisioning_VBG algorithm_NN for_IN service_NN based_JJ web_NN applications_NNS claims_VBZ that_IN a_DT service_NN level_NN agreement_NN -LRB-_-LRB- SLA_NN -RRB-_-RRB- should_MD only_RB be_VB assigned_VBN to_TO the_DT front-end_JJ service_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- ._.
Based_VBN on_IN this_DT assum_NN
iving_VBG a_DT performance_NN objective_NN only_RB to_TO the_DT frontend_NN services_NNS ,_, and_CC making_VBG the_DT other_JJ components_NNS negotiate_VBP the_DT most_RBS efficient_JJ use_NN of_IN resources_NNS so_IN that_IN the_DT global_JJ performance_NN is_VBZ maintained_VBN at_IN minimum_JJ cost_NN =_JJ -_: =[_NN 2_CD -RRB-_-RRB- -_: =_SYM -_: ._.
ConPaaS_NN will_MD exploit_VB its_PRP$ global_JJ knowledge_NN of_IN each_DT application_NN 's_POS service_NN composition_NN to_TO guarantee_VB performance_NN using_VBG as_IN few_JJ resources_NNS as_IN possible_JJ ._.
3.3_CD Cloud_NN heterogeneity_NN The_DT performance_NN of_IN virtual_JJ in_IN
a_DT web_NN application_NN needs_VBZ for_IN service_NN ,_, also_RB contribute_VBP to_TO optimal_JJ capacity_NN provisioning_VBG ._.
Recent_JJ works_NNS on_IN cloud_NN network_NN provisioning_VBG have_VBP accounted_VBN for_IN parameters_NNS like_IN scheduling_NN and_CC multi-tier_JJ services_NNS =_JJ -_: =[_NN 24_CD -RRB-_-RRB- -_: =_JJ -_: ,_, but_CC do_VBP not_RB provide_VB any_DT analytical_JJ results_NNS on_IN the_DT impact_NN of_IN these_DT parameters_NNS on_IN optimally_RB provisioned_VBN capacity_NN ,_, nor_CC do_VBP they_PRP evaluate_VB the_DT optimal_JJ provisioned_JJ capacity_NN ._.
In_IN contrast_NN with_IN existing_VBG approa_NN
