Better_NNP abstractions_NNS for_IN secure_JJ server-side_JJ scripting_NN
It_PRP is_VBZ notoriously_RB difficult_JJ to_TO program_VB a_DT solid_JJ web_NN application_NN ._.
Besides_IN addressing_VBG web_NN interactions_NNS ,_, state_NN maintenance_NN ,_, and_CC whimsical_JJ user_NN navigation_NN behaviors_NNS ,_, programmers_NNS must_MD also_RB avoid_VB a_DT minefield_NN of_IN security_NN vulnerabilities_NNS ._.
The_DT problem_NN is_VBZ twofold_JJ ._.
First_RB ,_, we_PRP lack_VBP a_DT clear_JJ understanding_NN of_IN the_DT new_JJ computation_NN model_NN underlying_VBG web_NN applications_NNS ._.
Second_RB ,_, we_PRP lack_VBP proper_JJ abstractions_NNS for_IN hiding_VBG common_JJ and_CC subtle_JJ coding_NN details_NNS that_WDT are_VBP orthogonal_JJ to_TO the_DT business_NN functionalities_NNS of_IN specific_JJ web_NN applications_NNS ._.
This_DT paper_NN addresses_VBZ both_DT issues_NNS ._.
First_RB ,_, we_PRP present_VBP a_DT language_NN BASS_NN for_IN declarative_JJ server-side_JJ scripting_NN ._.
BASS_NN allows_VBZ programmers_NNS to_TO work_VB in_IN an_DT ideal_JJ world_NN ,_, using_VBG new_JJ abstractions_NNS to_TO tackle_VB common_JJ but_CC problematic_JJ aspects_NNS of_IN web_NN programming_NN ._.
The_DT meta_NN properties_NNS of_IN BASS_NN provide_VBP useful_JJ security_NN guarantees_NNS ._.
Second_RB ,_, we_PRP present_VBP a_DT language_NN MOSS_NN reflecting_VBG realistic_JJ web_NN programming_NN concepts_NNS and_CC scenarios_NNS ,_, thus_RB articulating_VBG the_DT computation_NN model_NN behind_IN web_NN programming_NN ._.
Finally_RB ,_, we_PRP present_VBP a_DT translation_NN from_IN BASS_NN to_TO MOSS_NNP ,_, demonstrating_VBG how_WRB the_DT ideal_JJ programming_NN model_NN and_CC security_NN guarantees_NNS of_IN BASS_NN can_MD be_VB implemented_VBN in_IN practice_NN ._.
BASS_NN is_VBZ a_DT recent_JJ attempt_NN to_TO build_VB security_NN into_IN a_DT declarative_JJ high-level_JJ web_NN programming_NN model_NN ,_, working_VBG on_IN the_DT observation_NN that_IN security_NN issues_NNS are_VBP often_RB orthogonal_JJ to_TO the_DT main_JJ web_NN application_NN logic_NN =_JJ -_: =[_NN 55_CD -RRB-_-RRB- -_: =_SYM -_: ._.
It_PRP enables_VBZ the_DT programmer_NN to_TO specify_VB the_DT business_NN logic_NN of_IN the_DT application_NN without_IN needing_VBG to_TO write_VB the_DT security_NN related_JJ logic_NN ._.
Abstractions_NNS for_IN common_JJ operations_NNS ,_, such_JJ as_IN form_NN input_NN ,_, are_VBP baked_JJ into_IN
r._NN Moreover_RB ,_, when_WRB executable_JJ content_NN is_VBZ transferred_VBN to_TO the_DT client_NN as_IN XML_NN or_CC JSON_NN and_CC composed_VBN into_IN displayable_JJ HTML_NNP by_IN JavaScript_NNP ,_, previously_RB proposed_VBN on-the-wire_JJ rewriting_VBG tactics_NNS become_VBP ineffective_JJ =_JJ -_: =[_NN 37_CD ,_, 30_CD -RRB-_-RRB- -_: =_SYM -_: ._.
To_TO address_VB this_DT problem_NN ,_, multiple_JJ proposals_NNS have_VBP focused_VBN on_IN changing_VBG the_DT browser_NN to_TO add_VB additional_JJ isolation_NN mechanisms_NNS or_CC programming_NN abstractions_NNS -LRB-_-LRB- 18_CD ,_, 11_CD ,_, 37_CD ,_, 16_CD ,_, 25_CD -RRB-_-RRB- ._.
A_DT common_JJ theme_NN is_VBZ to_TO give_VB we_PRP
cations_NNS ._.
These_DT techniques_NNS include_VBP static_JJ code_NN analysis_NN -LRB-_-LRB- 9_CD ,_, 14_CD ,_, 33_CD --_: 35_CD -RRB-_-RRB- ,_, dynamic_JJ tainting_NN -LRB-_-LRB- 23_CD ,_, 24_CD ,_, 27_CD -RRB-_-RRB- ,_, combination_NN of_IN dynamic_JJ tainting_NN and_CC static_JJ analysis_NN -LRB-_-LRB- 32_CD -RRB-_-RRB- ,_, prevention_NN by_IN construction_NN or_CC by_IN design_NN =_JJ -_: =[_NN 8_CD ,_, 13_CD ,_, 29_CD ,_, 36_CD -RRB-_-RRB- -_: =_JJ -_: and_CC enforcement_NN mechanisms_NNS executing_VBG within_IN the_DT browser_NN -LRB-_-LRB- 1_CD ,_, 7_CD ,_, 10_CD ,_, 31_CD -RRB-_-RRB- ._.
Some_DT of_IN these_DT techniques_NNS have_VBP been_VBN commercialized_VBN and_CC can_MD be_VB found_VBN in_IN today_NN 's_POS development_NN toolsets_NNS ._.
An_DT example_NN is_VBZ Microsoft_NNP 's_POS F_NN
b_LS Engineering_NNP volves_VBZ the_DT automatic_JJ enforcement_NN of_IN a_DT simple_JJ security_NN policy_NN controlled_VBN by_IN the_DT administrator_NN of_IN the_DT Web_NN application_NN ._.
Security_NN is_VBZ always_RB of_IN concern_NN in_IN publicly_RB available_JJ Web_NN applications_NNS =_JJ -_: =[_NN 29_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Typical_JJ automated_JJ client-server_NN partitioning_VBG technologies_NNS such_JJ as_IN Hilda_NNP -LRB-_-LRB- 28_CD -RRB-_-RRB- have_VBP ignored_VBN the_DT security_NN problems_NNS caused_VBN by_IN porting_VBG some_DT parts_NNS of_IN the_DT server-side_JJ logic_NN of_IN a_DT Web_NN application_NN to_TO the_DT untr_NN
ed_VBN numerous_JJ tools_NNS and_CC techniques_NNS to_TO detect_VB and_CC prevent_VB such_JJ vulnerabilities_NNS ,_, including_VBG static_JJ code_NN analysis_NN -LRB-_-LRB- 8_CD ,_, 11_CD ,_, 27_CD ,_, 28_CD ,_, 31_CD -RRB-_-RRB- ,_, dynamic_JJ tainting_NN -LRB-_-LRB- 18_CD ,_, 19_CD ,_, 20_CD -RRB-_-RRB- ,_, prevention_NN by_IN construction_NN or_CC by_IN design_NN =_JJ -_: =[_NN 7_CD ,_, 10_CD ,_, 21_CD ,_, 32_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC client-side_JJ mechanisms_NNS executing_VBG within_IN the_DT browser_NN -LRB-_-LRB- 2_CD ,_, 6_CD ,_, 9_CD ,_, 26_CD -RRB-_-RRB- ._.
Some_DT of_IN these_DT techniques_NNS have_VBP been_VBN integrated_VBN in_IN developer_NN toolsets_NNS -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 13_CD ,_, 5_CD -RRB-_-RRB- -RRB-_-RRB- ._.
Moreover_RB ,_, organizations_NNS such_JJ as_IN OWASP_NN -LRB-_-LRB- 25_CD -RRB-_-RRB-
