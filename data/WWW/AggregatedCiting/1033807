A_DT fault_NN model_NN and_CC mutation_NN testing_NN of_IN access_NN control_NN policies_NNS
To_TO increase_VB confidence_NN in_IN the_DT correctness_NN of_IN specified_JJ policies_NNS ,_, policy_NN developers_NNS can_MD conduct_VB policy_NN testing_NN by_IN supplying_VBG typical_JJ test_NN inputs_NNS -LRB-_-LRB- requests_NNS -RRB-_-RRB- and_CC subsequently_RB checking_VBG test_NN outputs_NNS -LRB-_-LRB- responses_NNS -RRB-_-RRB- against_IN expected_VBN ones_NNS ._.
Unfortunately_RB ,_, manual_JJ testing_NN is_VBZ tedious_JJ and_CC few_JJ tools_NNS exist_VBP for_IN automated_JJ testing_NN of_IN access_NN control_NN policies_NNS ._.
We_PRP present_VBP a_DT fault_NN model_NN for_IN access_NN control_NN policies_NNS and_CC a_DT framework_NN to_TO explore_VB it_PRP ._.
The_DT framework_NN includes_VBZ mutation_NN operators_NNS used_VBN to_TO implement_VB the_DT fault_NN model_NN ,_, mutant_JJ generation_NN ,_, equivalent-mutant_JJ detection_NN ,_, and_CC mutant-killing_JJ determination_NN ._.
This_DT framework_NN allows_VBZ us_PRP to_TO investigate_VB our_PRP$ fault_NN model_NN ,_, evaluate_VB coverage_NN criteria_NNS for_IN test_NN generation_NN and_CC selection_NN ,_, and_CC determine_VB a_DT relationship_NN between_IN structural_JJ coverage_NN and_CC fault-detection_JJ effectiveness_NN ._.
We_PRP have_VBP implemented_VBN the_DT framework_NN and_CC applied_VBD it_PRP to_TO various_JJ policies_NNS written_VBN in_IN XACML_NNP ._.
Our_PRP$ experimental_JJ results_NNS offer_VBP valuable_JJ insights_NNS into_IN choosing_NN mutation_NN operators_NNS in_IN mutation_NN testing_NN and_CC choosing_NN coverage_NN criteria_NNS in_IN test_NN generation_NN and_CC selection_NN ._.
ach_NN simply_RB involves_VBZ generating_VBG and\/or_CC executing_VBG fewer_JJR mutants_NNS ;_: selective_JJ mutation_NN and_CC mutant_JJ sampling_NN both_DT fall_NN into_IN this_DT category_NN ._.
Constrained_VBN mutation_NN -LRB-_-LRB- 33_CD ,_, 36_CD -RRB-_-RRB- later_RB refined_VBD into_IN selective_JJ mutation_NN =_JJ -_: =[_NN 28_CD ,_, 29_CD ,_, 33_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ an_DT approximation_NN technique_NN that_WDT tries_VBZ to_TO select_VB only_JJ mutants_NNS that_WDT are_VBP truly_RB distinct_JJ from_IN other_JJ mutants_NNS ._.
Results_NNS show_VBP that_IN 5_CD out_IN of_IN 22_CD mutation_NN operators_NNS are_VBP key_JJ operators_NNS and_CC these_DT 5_CD provide_VBP almo_NN
over_IN all_DT possible_JJ requests_NNS for_IN a_DT given_VBN policy_NN ,_, if_IN its_PRP$ domain_NN set_NN is_VBZ finite_JJ ._.
The_DT second_JJ one_CD is_VBZ a_DT random_JJ test_NN generation_NN tool_NN -LRB-_-LRB- 25_CD -RRB-_-RRB- that_WDT randomly_RB generates_VBZ tests_NNS for_IN XACML_NN policies_NNS ._.
The_DT third_JJ technique_NN =_JJ -_: =[_NN 24_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ a_DT novel_JJ framework_NN that_WDT automatically_RB generates_VBZ highquality_NN tests_NNS based_VBN on_IN a_DT change-impact_JJ analysis_NN tool_NN such_JJ as_IN Margrave_NNP -LRB-_-LRB- 9_CD -RRB-_-RRB- ._.
Because_IN the_DT number_NN of_IN automatically_RB generated_VBN tests_NNS is_VBZ often_RB too_RB large_JJ
he_PRP subject_JJ names_NNS ._.
Columns_NNS 2-5_CD show_VBP the_DT numbers_NNS of_IN policy_NN sets_NNS ,_, policies_NNS ,_, rules_NNS ,_, and_CC conditions_NNS ,_, respectively_RB ._.
The_DT conference_NN 1_CD policy_NN is_VBZ a_DT slightly_RB modified_VBN version_NN of_IN the_DT policy_NN used_VBN by_IN Zhang_NNP et_FW al._FW =_SYM -_: =[_NN 38_CD -RRB-_-RRB- -_: =_SYM -_: ._.
The_DT 1_CD http:\/\/www.cs.bham.ac.uk\/Ëœmdr\/research\/_NN projects\/05-AccessControl_NN \/_: Table_NNP 2_CD :_: Policies_NNS used_VBN in_IN the_DT experiment_NN ._.
Subject_JJ #_# PolSet_NNP #_# Pol_NN #_# Rule_NNP #_# Cond_FW codeA_FW 5_CD 2_CD 2_CD 0_CD codeB_NN 7_CD 3_CD 3_CD 0_CD codeC_NN 8_CD 4_CD 4_CD 0_CD code_NN
s_VBZ a_DT result_NN are_VBP often_RB not_RB available_JJ -LRB-_-LRB- 9_CD -RRB-_-RRB- ._.
Our_PRP$ mutation_NN testing_NN framework_NN leverages_VBZ Margrave_NNP 's_POS change-impact_JJ analysis_NN feature_NN to_TO detect_VB a_DT subset_NN of_IN equivalent_JJ mutants_NNS ._.
Although_IN various_JJ coverage_NN criteria_NNS =_JJ -_: =[_NN 40_CD -RRB-_-RRB- -_: =_SYM -_: for_IN software_NN programs_NNS exist_VBP ,_, only_RB recently_RB have_VBP coverage_NN criteria_NNS for_IN access_NN control_NN policies_NNS been_VBN proposed_VBN -LRB-_-LRB- 25_CD -RRB-_-RRB- ._.
Policy_NN coverage_NN criteria_NNS are_VBP needed_VBN to_TO measure_VB how_WRB well_RB policies_NNS are_VBP tested_VBN and_CC which_WDT
access_NN to_TO which_WDT resources_NNS in_IN a_DT system_NN ._.
To_TO facilitate_VB managing_VBG and_CC maintaining_VBG access_NN control_NN ,_, access_NN control_NN policies_NNS are_VBP increasingly_RB written_VBN in_IN specification_NN languages_NNS such_JJ as_IN XACML_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- and_CC Ponder_NN =_JJ -_: =[_NN 6_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Whenever_VB a_DT principal_JJ requests_NNS access_NN to_TO a_DT resource_NN ,_, that_IN request_NN is_VBZ passed_VBN to_TO a_DT software_NN component_NN called_VBD a_DT Policy_NNP Decision_NNP Point_NNP -LRB-_-LRB- PDP_NNP -RRB-_-RRB- ._.
A_DT PDP_NN evaluates_VBZ the_DT request_NN against_IN the_DT specified_VBN access_NN cont_NN
r_NN inspection_NN without_IN incurring_VBG substantial_JJ loss_NN in_IN fault_NN detection_NN capability_NN ._.
We_PRP have_VBP defined_VBN request_NN selection_NN or_CC reduction_NN problem_NN -LRB-_-LRB- 25_CD -RRB-_-RRB- similar_JJ to_TO the_DT test_NN minimization_NN problem_NN for_IN program_NN testing_NN =_JJ -_: =[_NN 14_CD -RRB-_-RRB- -_: =_JJ -_: :_: Given_VBN :_: request_NN set_VBN QS_NNP ,_, a_DT set_NN of_IN requirements_NNS r1_NN ,_, r2_NN ,_, ..._: ,_, rn_IN that_DT must_MD be_VB satisfied_VBN to_TO provide_VB the_DT desired_VBN test_NN coverage_NN of_IN the_DT policies_NNS ,_, and_CC subsets_NNS of_IN QS_NN ,_, Q1_NN ,_, Q2_NN ,_, ..._: ,_, Qn_NN ,_, one_CD associated_VBN with_IN each_DT
operators_NNS and_CC these_DT 5_CD provide_VBP almost_RB the_DT same_JJ coverage_NN with_IN cost_NN reductions_NNS of_IN four_CD times_NNS with_IN small_JJ programs_NNS and_CC up_IN to_TO 50_CD times_NNS for_IN larger_JJR programs_NNS -LRB-_-LRB- 28_CD ,_, 29_CD -RRB-_-RRB- ._.
Mutant_JJ sampling_NN ,_, first_RB proposed_VBN by_IN Acree_NN =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_JJ -_: and_CC Budd_NNP -LRB-_-LRB- 4_CD -RRB-_-RRB- ,_, involves_VBZ randomly_RB selecting_VBG a_DT subset_NN of_IN mutant_JJ programs_NNS ,_, which_WDT are_VBP then_RB evaluated_VBN ._.
Results_NNS from_IN Wong_NNP -LRB-_-LRB- 35_CD -RRB-_-RRB- show_VBP that_IN a_DT 10_CD %_NN random_JJ sample_NN of_IN mutants_NNS is_VBZ only_RB 16_CD %_NN less_RBR effective_JJ than_IN a_DT full_JJ
cient_JJ evidence_NN has_VBZ been_VBN collected_VBN to_TO determine_VB that_IN a_DT statistically_RB appropriate_JJ sample_NN size_NN has_VBZ been_VBN reached_VBN ._.
Various_JJ test_NN smarter_RBR approaches_NNS involve_VBP optimizations_NNS for_IN specific_JJ computer_NN architectures_NNS =_JJ -_: =[_NN 5_CD ,_, 20_CD ,_, 26_CD ,_, 31_CD -RRB-_-RRB- -_: =_JJ -_: and_CC techniques_NNS that_WDT exploit_VBP the_DT classic_JJ space-time_NN trade-off_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ._.
For_IN example_NN ,_, weak_JJ mutation_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- is_VBZ an_DT approximation_NN technique_NN that_WDT reduces_VBZ execution_NN costs_NNS by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT m_NN
cient_JJ evidence_NN has_VBZ been_VBN collected_VBN to_TO determine_VB that_IN a_DT statistically_RB appropriate_JJ sample_NN size_NN has_VBZ been_VBN reached_VBN ._.
Various_JJ test_NN smarter_RBR approaches_NNS involve_VBP optimizations_NNS for_IN specific_JJ computer_NN architectures_NNS =_JJ -_: =[_NN 5_CD ,_, 20_CD ,_, 26_CD ,_, 31_CD -RRB-_-RRB- -_: =_JJ -_: and_CC techniques_NNS that_WDT exploit_VBP the_DT classic_JJ space-time_NN trade-off_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ._.
For_IN example_NN ,_, weak_JJ mutation_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- is_VBZ an_DT approximation_NN technique_NN that_WDT reduces_VBZ execution_NN costs_NNS by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT m_NN
cient_JJ evidence_NN has_VBZ been_VBN collected_VBN to_TO determine_VB that_IN a_DT statistically_RB appropriate_JJ sample_NN size_NN has_VBZ been_VBN reached_VBN ._.
Various_JJ test_NN smarter_RBR approaches_NNS involve_VBP optimizations_NNS for_IN specific_JJ computer_NN architectures_NNS =_JJ -_: =[_NN 5_CD ,_, 20_CD ,_, 26_CD ,_, 31_CD -RRB-_-RRB- -_: =_JJ -_: and_CC techniques_NNS that_WDT exploit_VBP the_DT classic_JJ space-time_NN trade-off_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ._.
For_IN example_NN ,_, weak_JJ mutation_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- is_VBZ an_DT approximation_NN technique_NN that_WDT reduces_VBZ execution_NN costs_NNS by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT m_NN
cient_JJ evidence_NN has_VBZ been_VBN collected_VBN to_TO determine_VB that_IN a_DT statistically_RB appropriate_JJ sample_NN size_NN has_VBZ been_VBN reached_VBN ._.
Various_JJ test_NN smarter_RBR approaches_NNS involve_VBP optimizations_NNS for_IN specific_JJ computer_NN architectures_NNS =_JJ -_: =[_NN 5_CD ,_, 20_CD ,_, 26_CD ,_, 31_CD -RRB-_-RRB- -_: =_JJ -_: and_CC techniques_NNS that_WDT exploit_VBP the_DT classic_JJ space-time_NN trade-off_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ._.
For_IN example_NN ,_, weak_JJ mutation_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- is_VBZ an_DT approximation_NN technique_NN that_WDT reduces_VBZ execution_NN costs_NNS by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT m_NN
k_NN whether_IN they_PRP are_VBP as_IN expected_VBN ._.
Like_IN software_NN verification_NN and_CC testing_NN techniques_NNS ,_, formal_JJ policy_NN verification_NN and_CC testing_NN techniques_NNS are_VBP complementary_JJ means_NNS to_TO achieve_VB the_DT same_JJ goal_NN ._.
Mutation_NN testing_NN =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: iteratively_RB modifies_VBZ the_DT program_NN under_IN test_NN to_TO produce_VB numerous_JJ faulty_JJ versions_NNS -LRB-_-LRB- called_VBN mutants_NNS -RRB-_-RRB- ,_, each_DT containing_VBG one_CD fault_NN ._.
Mutation_NN testing_NN has_VBZ historically_RB been_VBN applied_VBN to_TO general-purpose_JJ programm_NN
set_NN of_IN tests_NNS ._.
Our_PRP$ new_JJ fault_NN model_NN and_CC corresponding_JJ automated_JJ mutator_NN allow_VBP us_PRP to_TO quickly_RB evaluate_VB test_NN generators_NNS and_CC techniques_NNS of_IN test_NN selection_NN in_IN terms_NNS of_IN fault-detection_JJ capability_NN ._.
Techniques_NNS =_JJ -_: =[_NN 8_CD -RRB-_-RRB- -_: =_SYM -_: have_VBP been_VBN proposed_VBN Figure_NNP 2_CD :_: An_DT example_NN XACML_NN policy_NN to_TO leverage_NN mutation_NN testing_NN to_TO automatically_RB generate_VB and\/or_CC reduce_VB test_NN sets_NNS for_IN general_JJ purpose_NN programming_NN languages_NNS ._.
We_PRP take_VBP similar_JJ approach_NN
rom_VB the_DT output_NN of_IN the_DT same_JJ test_NN executed_VBN on_IN the_DT original_JJ program_NN ,_, then_RB the_DT fault_NN is_VBZ detected_VBN and_CC the_DT mutant_NN is_VBZ said_VBN to_TO be_VB killed_VBN ._.
The_DT fundamental_JJ premise_NN of_IN mutation_NN testing_NN as_IN stated_VBN by_IN Geist_NNP et_FW al._FW =_SYM -_: =[_NN 11_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ that_IN ,_, in_IN practice_NN ,_, if_IN the_DT software_NN contains_VBZ a_DT fault_NN ,_, there_EX will_MD usually_RB be_VB a_DT set_NN of_IN mutants_NNS that_WDT can_MD only_RB be_VB killed_VBN by_IN a_DT test_NN that_WDT also_RB detects_VBZ that_IN fault_NN ._.
In_IN other_JJ words_NNS ,_, the_DT ability_NN to_TO detect_VB sm_NN
mutants_NNS and_CC test_NN smarter_RBR ._.
The_DT test_NN fewer_JJR approach_NN simply_RB involves_VBZ generating_VBG and\/or_CC executing_VBG fewer_JJR mutants_NNS ;_: selective_JJ mutation_NN and_CC mutant_JJ sampling_NN both_DT fall_NN into_IN this_DT category_NN ._.
Constrained_VBN mutation_NN =_JJ -_: =[_NN 33_CD ,_, 36_CD -RRB-_-RRB- -_: =_SYM -_: later_RB refined_VBN into_IN selective_JJ mutation_NN -LRB-_-LRB- 28_CD ,_, 29_CD ,_, 33_CD -RRB-_-RRB- is_VBZ an_DT approximation_NN technique_NN that_WDT tries_VBZ to_TO select_VB only_JJ mutants_NNS that_WDT are_VBP truly_RB distinct_JJ from_IN other_JJ mutants_NNS ._.
Results_NNS show_VBP that_IN 5_CD out_IN of_IN 22_CD mutation_NN o_NN
hnique_NN that_WDT reduces_VBZ execution_NN costs_NNS by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT mutant_JJ and_CC original_JJ programs_NNS instead_RB of_IN their_PRP$ output_NN at_IN program_NN termination_NN ._.
Weak_JJ mutation_NN has_VBZ been_VBN discussed_VBN theoretically_RB =_JJ -_: =[_NN 16_CD ,_, 27_CD ,_, 37_CD -RRB-_-RRB- -_: =_JJ -_: ,_, studied_VBN empirically_RB -LRB-_-LRB- 12_CD ,_, 22_CD ,_, 32_CD -RRB-_-RRB- ,_, and_CC probed_VBN with_IN variants_NNS that_WDT differ_VBP on_IN exactly_RB when_WRB the_DT program_NN states_NNS should_MD be_VB compared_VBN -LRB-_-LRB- 27,37_CD -RRB-_-RRB- ._.
Weak_JJ mutation_NN has_VBZ been_VBN shown_VBN to_TO generate_VB tests_NNS that_WDT were_VBD almost_RB
s_NN by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT mutant_JJ and_CC original_JJ programs_NNS instead_RB of_IN their_PRP$ output_NN at_IN program_NN termination_NN ._.
Weak_JJ mutation_NN has_VBZ been_VBN discussed_VBN theoretically_RB -LRB-_-LRB- 16_CD ,_, 27_CD ,_, 37_CD -RRB-_-RRB- ,_, studied_VBD empirically_RB =_JJ -_: =[_NN 12_CD ,_, 22_CD ,_, 32_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC probed_VBN with_IN variants_NNS that_WDT differ_VBP on_IN exactly_RB when_WRB the_DT program_NN states_NNS should_MD be_VB compared_VBN -LRB-_-LRB- 27,37_CD -RRB-_-RRB- ._.
Weak_JJ mutation_NN has_VBZ been_VBN shown_VBN to_TO generate_VB tests_NNS that_WDT were_VBD almost_RB as_RB effective_JJ as_IN tests_NNS generated_VBN wi_IN
te_IN sample_NN size_NN has_VBZ been_VBN reached_VBN ._.
Various_JJ test_NN smarter_RBR approaches_NNS involve_VBP optimizations_NNS for_IN specific_JJ computer_NN architectures_NNS -LRB-_-LRB- 5_CD ,_, 20_CD ,_, 26_CD ,_, 31_CD -RRB-_-RRB- and_CC techniques_NNS that_WDT exploit_VBP the_DT classic_JJ space-time_NN trade-off_NN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: ._.
For_IN example_NN ,_, weak_JJ mutation_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- is_VBZ an_DT approximation_NN technique_NN that_WDT reduces_VBZ execution_NN costs_NNS by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT mutant_JJ and_CC original_JJ programs_NNS instead_RB of_IN their_PRP$ output_NN at_IN program_NN ter_NN
s_NN by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT mutant_JJ and_CC original_JJ programs_NNS instead_RB of_IN their_PRP$ output_NN at_IN program_NN termination_NN ._.
Weak_JJ mutation_NN has_VBZ been_VBN discussed_VBN theoretically_RB -LRB-_-LRB- 16_CD ,_, 27_CD ,_, 37_CD -RRB-_-RRB- ,_, studied_VBD empirically_RB =_JJ -_: =[_NN 12_CD ,_, 22_CD ,_, 32_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC probed_VBN with_IN variants_NNS that_WDT differ_VBP on_IN exactly_RB when_WRB the_DT program_NN states_NNS should_MD be_VB compared_VBN -LRB-_-LRB- 27,37_CD -RRB-_-RRB- ._.
Weak_JJ mutation_NN has_VBZ been_VBN shown_VBN to_TO generate_VB tests_NNS that_WDT were_VBD almost_RB as_RB effective_JJ as_IN tests_NNS generated_VBN wi_IN
icies_NNS ._.
Finally_RB we_PRP conclude_VBP with_IN Section_NN 8_CD ._.
2_CD ._.
RELATED_NNS WORK_VBP To_TO help_VB ensure_VB the_DT correctness_NN of_IN policy_NN specifications_NNS ,_, researchers_NNS and_CC practitioners_NNS have_VBP developed_VBN formal_JJ verification_NN tools_NNS for_IN policies_NNS =_JJ -_: =[_NN 9_CD ,_, 18_CD ,_, 39_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Fisler_NNP et_FW al._FW -LRB-_-LRB- 9_CD -RRB-_-RRB- developed_VBD a_DT tool_NN called_VBN Margrave_NNP that_WDT can_MD verify_VB XACML_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- policies_NNS against_IN properties_NNS ,_, if_IN properties_NNS are_VBP specified_VBN ,_, and_CC perform_VB change-impact_JJ analysis_NN on_IN two_CD versions_NNS of_IN policies_NNS
Various_JJ test_NN smarter_RBR approaches_NNS involve_VBP optimizations_NNS for_IN specific_JJ computer_NN architectures_NNS -LRB-_-LRB- 5_CD ,_, 20_CD ,_, 26_CD ,_, 31_CD -RRB-_-RRB- and_CC techniques_NNS that_WDT exploit_VBP the_DT classic_JJ space-time_NN trade-off_NN -LRB-_-LRB- 10_CD -RRB-_-RRB- ._.
For_IN example_NN ,_, weak_JJ mutation_NN =_JJ -_: =[_NN 17_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ an_DT approximation_NN technique_NN that_WDT reduces_VBZ execution_NN costs_NNS by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT mutant_JJ and_CC original_JJ programs_NNS instead_RB of_IN their_PRP$ output_NN at_IN program_NN termination_NN ._.
Weak_JJ mutation_NN has_VBZ been_VBN
hnique_NN that_WDT reduces_VBZ execution_NN costs_NNS by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT mutant_JJ and_CC original_JJ programs_NNS instead_RB of_IN their_PRP$ output_NN at_IN program_NN termination_NN ._.
Weak_JJ mutation_NN has_VBZ been_VBN discussed_VBN theoretically_RB =_JJ -_: =[_NN 16_CD ,_, 27_CD ,_, 37_CD -RRB-_-RRB- -_: =_JJ -_: ,_, studied_VBN empirically_RB -LRB-_-LRB- 12_CD ,_, 22_CD ,_, 32_CD -RRB-_-RRB- ,_, and_CC probed_VBN with_IN variants_NNS that_WDT differ_VBP on_IN exactly_RB when_WRB the_DT program_NN states_NNS should_MD be_VB compared_VBN -LRB-_-LRB- 27,37_CD -RRB-_-RRB- ._.
Weak_JJ mutation_NN has_VBZ been_VBN shown_VBN to_TO generate_VB tests_NNS that_WDT were_VBD almost_RB
these_DT 5_CD provide_VBP almost_RB the_DT same_JJ coverage_NN with_IN cost_NN reductions_NNS of_IN four_CD times_NNS with_IN small_JJ programs_NNS and_CC up_IN to_TO 50_CD times_NNS for_IN larger_JJR programs_NNS -LRB-_-LRB- 28_CD ,_, 29_CD -RRB-_-RRB- ._.
Mutant_JJ sampling_NN ,_, first_RB proposed_VBN by_IN Acree_NN -LRB-_-LRB- 3_CD -RRB-_-RRB- and_CC Budd_NN =_JJ -_: =[_NN 4_CD -RRB-_-RRB- -_: =_JJ -_: ,_, involves_VBZ randomly_RB selecting_VBG a_DT subset_NN of_IN mutant_JJ programs_NNS ,_, which_WDT are_VBP then_RB evaluated_VBN ._.
Results_NNS from_IN Wong_NNP -LRB-_-LRB- 35_CD -RRB-_-RRB- show_VBP that_IN a_DT 10_CD %_NN random_JJ sample_NN of_IN mutants_NNS is_VBZ only_RB 16_CD %_NN less_RBR effective_JJ than_IN a_DT full_JJ set_NN in_IN ascer_NN
50_CD times_NNS for_IN larger_JJR programs_NNS -LRB-_-LRB- 28_CD ,_, 29_CD -RRB-_-RRB- ._.
Mutant_JJ sampling_NN ,_, first_RB proposed_VBN by_IN Acree_NN -LRB-_-LRB- 3_CD -RRB-_-RRB- and_CC Budd_NN -LRB-_-LRB- 4_CD -RRB-_-RRB- ,_, involves_VBZ randomly_RB selecting_VBG a_DT subset_NN of_IN mutant_JJ programs_NNS ,_, which_WDT are_VBP then_RB evaluated_VBN ._.
Results_NNS from_IN Wong_NNP =_SYM -_: =[_NN 35_CD -RRB-_-RRB- -_: =_SYM -_: show_VBP that_IN a_DT 10_CD %_NN random_JJ sample_NN of_IN mutants_NNS is_VBZ only_RB 16_CD %_NN less_RBR effective_JJ than_IN a_DT full_JJ set_NN in_IN ascertaining_VBG fault-detection_JJ effectiveness_NN ._.
Another_DT sampling_NN approach_NN -LRB-_-LRB- 34_CD -RRB-_-RRB- selects_VBZ mutant_JJ programs_NNS based_VBN on_IN a_DT Ba_NN
access_NN requests_NNS will_MD be_VB permitted_VBN ._.
5.1_CD Mutation_NN Operators_NNP Mutation_NN operators_NNS describe_VBP modification_NN rules_NNS for_IN modifying_VBG access_NN control_NN policies_NNS to_TO introduce_VB faults_NNS into_IN the_DT policies_NNS ._.
Previous_JJ studies_NNS =_JJ -_: =[_NN 15,21_CD -RRB-_-RRB- -_: =_SYM -_: have_VBP been_VBN conducted_VBN to_TO investigate_VB the_DT types_NNS and_CC effectiveness_NN of_IN various_JJ mutation_NN operators_NNS for_IN general-purpose_JJ programming_NN languages_NNS ;_: however_RB ,_, these_DT mutation_NN operators_NNS often_RB do_VBP not_RB directly_RB apply_VB t_NN
are_VBP then_RB evaluated_VBN ._.
Results_NNS from_IN Wong_NNP -LRB-_-LRB- 35_CD -RRB-_-RRB- show_VBP that_IN a_DT 10_CD %_NN random_JJ sample_NN of_IN mutants_NNS is_VBZ only_RB 16_CD %_NN less_RBR effective_JJ than_IN a_DT full_JJ set_NN in_IN ascertaining_VBG fault-detection_JJ effectiveness_NN ._.
Another_DT sampling_NN approach_NN =_JJ -_: =[_NN 34_CD -RRB-_-RRB- -_: =_SYM -_: selects_VBZ mutant_JJ programs_NNS based_VBN on_IN a_DT Bayesian_JJ sequential_JJ probability_NN ratio_NN test_NN until_IN sufficient_JJ evidence_NN has_VBZ been_VBN collected_VBN to_TO determine_VB that_IN a_DT statistically_RB appropriate_JJ sample_NN size_NN has_VBZ been_VBN reached_VBN ._.
semantics_NNS of_IN the_DT policy_NN ,_, it_PRP is_VBZ structurally_RB similar_JJ and_CC thus_RB suitable_JJ for_IN the_DT experiment_NN ._.
Five_CD of_IN the_DT policies_NNS ,_, namely_RB simple-policy_NN ,_, codeA_NN ,_, codeB_NN ,_, codeC_NN ,_, and_CC codeD_NN are_VBP examples_NNS used_VBN by_IN Fisler_NNP et_FW al._FW =_SYM -_: =[_NN 9_CD ,_, 13_CD -RRB-_-RRB- -_: =_SYM -_: ._.
The_DT remaining_VBG policies_NNS are_VBP examples_NNS of_IN real_JJ XACML_NN policies_NNS used_VBN by_IN Fedora_NNP 2_CD ._.
Fedora_NNP is_VBZ an_DT open_JJ source_NN software_NN that_WDT gives_VBZ organizations_NNS a_DT flexible_JJ serviceoriented_JJ architecture_NN for_IN managing_NN and_CC deli_NNS
be_VB compared_VBN -LRB-_-LRB- 27,37_CD -RRB-_-RRB- ._.
Weak_JJ mutation_NN has_VBZ been_VBN shown_VBN to_TO generate_VB tests_NNS that_WDT were_VBD almost_RB as_RB effective_JJ as_IN tests_NNS generated_VBN with_IN strong_JJ mutation_NN and_CC that_IN at_IN least_JJS 50_CD %_NN or_CC more_JJR of_IN the_DT execution_NN time_NN was_VBD saved_VBN =_JJ -_: =[_NN 30_CD ,_, 32_CD -RRB-_-RRB- -_: =_SYM -_: ._.
6.2_CD Equivalent-Mutant_JJ Detection_NN Cost_NN of_IN mutation_NN testing_NN also_RB includes_VBZ detection_NN of_IN equivalent_JJ mutants_NNS -LRB-_-LRB- 33_CD -RRB-_-RRB- ._.
Although_IN there_EX are_VBP syntactic_JJ differences_NNS between_IN an_DT equivalent_JJ mutant_NN and_CC the_DT program_NN und_NN
icies_NNS ._.
Finally_RB we_PRP conclude_VBP with_IN Section_NN 8_CD ._.
2_CD ._.
RELATED_NNS WORK_VBP To_TO help_VB ensure_VB the_DT correctness_NN of_IN policy_NN specifications_NNS ,_, researchers_NNS and_CC practitioners_NNS have_VBP developed_VBN formal_JJ verification_NN tools_NNS for_IN policies_NNS =_JJ -_: =[_NN 9_CD ,_, 18_CD ,_, 39_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Fisler_NNP et_FW al._FW -LRB-_-LRB- 9_CD -RRB-_-RRB- developed_VBD a_DT tool_NN called_VBN Margrave_NNP that_WDT can_MD verify_VB XACML_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- policies_NNS against_IN properties_NNS ,_, if_IN properties_NNS are_VBP specified_VBN ,_, and_CC perform_VB change-impact_JJ analysis_NN on_IN two_CD versions_NNS of_IN policies_NNS
ests_NNS reduces_VBZ to_TO optimization_NN problems_NNS called_VBN ``_`` minimum_JJ set_NN cover_NN ''_'' and_CC ``_`` minimum_JJ exact_JJ cover_NN ''_'' ,_, respectively_RB ;_: these_DT problems_NNS are_VBP known_VBN to_TO be_VB NP_NNP complete_JJ ,_, and_CC in_IN practice_NN approximation_NN algorithms_NNS are_VBP used_VBN =_JJ -_: =[_NN 19_CD -RRB-_-RRB- -_: =_SYM -_: ._.
We_PRP employ_VBP a_DT greedy_JJ algorithm_NN that_WDT removes_VBZ a_DT request_NN from_IN a_DT request_NN set_VBN if_IN and_CC only_RB if_IN the_DT request_NN does_VBZ not_RB increase_VB any_DT of_IN the_DT coverage_NN metrics_NNS that_WDT are_VBP achieved_VBN by_IN previously_RB evaluated_VBN requests_NNS in_IN
s_NN by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT mutant_JJ and_CC original_JJ programs_NNS instead_RB of_IN their_PRP$ output_NN at_IN program_NN termination_NN ._.
Weak_JJ mutation_NN has_VBZ been_VBN discussed_VBN theoretically_RB -LRB-_-LRB- 16_CD ,_, 27_CD ,_, 37_CD -RRB-_-RRB- ,_, studied_VBD empirically_RB =_JJ -_: =[_NN 12_CD ,_, 22_CD ,_, 32_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC probed_VBN with_IN variants_NNS that_WDT differ_VBP on_IN exactly_RB when_WRB the_DT program_NN states_NNS should_MD be_VB compared_VBN -LRB-_-LRB- 27,37_CD -RRB-_-RRB- ._.
Weak_JJ mutation_NN has_VBZ been_VBN shown_VBN to_TO generate_VB tests_NNS that_WDT were_VBD almost_RB as_RB effective_JJ as_IN tests_NNS generated_VBN wi_IN
ach_NN simply_RB involves_VBZ generating_VBG and\/or_CC executing_VBG fewer_JJR mutants_NNS ;_: selective_JJ mutation_NN and_CC mutant_JJ sampling_NN both_DT fall_NN into_IN this_DT category_NN ._.
Constrained_VBN mutation_NN -LRB-_-LRB- 33_CD ,_, 36_CD -RRB-_-RRB- later_RB refined_VBD into_IN selective_JJ mutation_NN =_JJ -_: =[_NN 28_CD ,_, 29_CD ,_, 33_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ an_DT approximation_NN technique_NN that_WDT tries_VBZ to_TO select_VB only_JJ mutants_NNS that_WDT are_VBP truly_RB distinct_JJ from_IN other_JJ mutants_NNS ._.
Results_NNS show_VBP that_IN 5_CD out_IN of_IN 22_CD mutation_NN operators_NNS are_VBP key_JJ operators_NNS and_CC these_DT 5_CD provide_VBP almo_NN
access_NN requests_NNS will_MD be_VB permitted_VBN ._.
5.1_CD Mutation_NN Operators_NNP Mutation_NN operators_NNS describe_VBP modification_NN rules_NNS for_IN modifying_VBG access_NN control_NN policies_NNS to_TO introduce_VB faults_NNS into_IN the_DT policies_NNS ._.
Previous_JJ studies_NNS =_JJ -_: =[_NN 15,21_CD -RRB-_-RRB- -_: =_SYM -_: have_VBP been_VBN conducted_VBN to_TO investigate_VB the_DT types_NNS and_CC effectiveness_NN of_IN various_JJ mutation_NN operators_NNS for_IN general-purpose_JJ programming_NN languages_NNS ;_: however_RB ,_, these_DT mutation_NN operators_NNS often_RB do_VBP not_RB directly_RB apply_VB t_NN
s_NN will_MD not_RB be_VB wasted_VBN in_IN evaluating_VBG test_NN inputs_NNS or_CC comparing_VBG test_NN outputs_NNS for_IN equivalent_JJ mutants_NNS ._.
Detecting_VBG such_JJ mutants_NNS in_IN software_NN is_VBZ generally_RB intractable_JJ -LRB-_-LRB- 8_CD -RRB-_-RRB- and_CC historically_RB has_VBZ been_VBN done_VBN by_IN hand_NN =_JJ -_: =[_NN 33_CD -RRB-_-RRB- -_: =_JJ -_: but_CC using_VBG a_DT change-impact_JJ analysis_NN tool_NN such_JJ as_IN Margrave_NNP -LRB-_-LRB- 9_CD -RRB-_-RRB- allows_VBZ us_PRP to_TO detect_VB equivalent_JJ mutants_NNS among_IN generated_VBN mutants_NNS ._.
We_PRP originally_RB believed_VBD equivalent-mutant_JJ detection_NN to_TO be_VB an_DT important_JJ effi_NN
hnique_NN that_WDT reduces_VBZ execution_NN costs_NNS by_IN comparing_VBG the_DT internal_JJ states_NNS of_IN the_DT mutant_JJ and_CC original_JJ programs_NNS instead_RB of_IN their_PRP$ output_NN at_IN program_NN termination_NN ._.
Weak_JJ mutation_NN has_VBZ been_VBN discussed_VBN theoretically_RB =_JJ -_: =[_NN 16_CD ,_, 27_CD ,_, 37_CD -RRB-_-RRB- -_: =_JJ -_: ,_, studied_VBN empirically_RB -LRB-_-LRB- 12_CD ,_, 22_CD ,_, 32_CD -RRB-_-RRB- ,_, and_CC probed_VBN with_IN variants_NNS that_WDT differ_VBP on_IN exactly_RB when_WRB the_DT program_NN states_NNS should_MD be_VB compared_VBN -LRB-_-LRB- 27,37_CD -RRB-_-RRB- ._.
Weak_JJ mutation_NN has_VBZ been_VBN shown_VBN to_TO generate_VB tests_NNS that_WDT were_VBD almost_RB
icies_NNS ._.
Finally_RB we_PRP conclude_VBP with_IN Section_NN 8_CD ._.
2_CD ._.
RELATED_NNS WORK_VBP To_TO help_VB ensure_VB the_DT correctness_NN of_IN policy_NN specifications_NNS ,_, researchers_NNS and_CC practitioners_NNS have_VBP developed_VBN formal_JJ verification_NN tools_NNS for_IN policies_NNS =_JJ -_: =[_NN 9_CD ,_, 18_CD ,_, 39_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Fisler_NNP et_FW al._FW -LRB-_-LRB- 9_CD -RRB-_-RRB- developed_VBD a_DT tool_NN called_VBN Margrave_NNP that_WDT can_MD verify_VB XACML_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- policies_NNS against_IN properties_NNS ,_, if_IN properties_NNS are_VBP specified_VBN ,_, and_CC perform_VB change-impact_JJ analysis_NN on_IN two_CD versions_NNS of_IN policies_NNS
