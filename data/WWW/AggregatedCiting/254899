Securing_VBG web_NN application_NN code_NN by_IN static_JJ analysis_NN and_CC runtime_NN protection_NN
Security_NN remains_VBZ a_DT major_JJ roadblock_NN to_TO universal_JJ acceptance_NN of_IN the_DT Web_NN for_IN many_JJ kinds_NNS of_IN transactions_NNS ,_, especially_RB since_IN the_DT recent_JJ sharp_JJ increase_NN in_IN remotely_RB exploitable_JJ vulnerabilities_NNS have_VBP been_VBN attributed_VBN to_TO Web_NN application_NN bugs_NNS ._.
Many_JJ verification_NN tools_NNS are_VBP discovering_VBG previously_RB unknown_JJ vulnerabilities_NNS in_IN legacy_NN C_NN programs_NNS ,_, raising_VBG hopes_NNS that_IN the_DT same_JJ success_NN can_MD be_VB achieved_VBN with_IN Web_NN applications_NNS ._.
In_IN this_DT paper_NN ,_, we_PRP describe_VBP a_DT sound_JJ and_CC holistic_JJ approach_NN to_TO ensuring_VBG Web_NN application_NN security_NN ._.
Viewing_VBG Web_NN application_NN vulnerabilities_NNS as_IN a_DT secure_JJ information_NN flow_NN problem_NN ,_, we_PRP created_VBD a_DT lattice-based_JJ static_JJ analysis_NN algorithm_NN derived_VBN from_IN type_NN systems_NNS and_CC typestate_NN ,_, and_CC addressed_VBD its_PRP$ soundness_NN ._.
During_IN the_DT analysis_NN ,_, sections_NNS of_IN code_NN considered_VBN vulnerable_JJ are_VBP instrumented_VBN with_IN runtime_NN guards_NNS ,_, thus_RB securing_VBG Web_NN applications_NNS in_IN the_DT absence_NN of_IN user_NN intervention_NN ._.
With_IN sufficient_JJ annotations_NNS ,_, runtime_NN overhead_NN can_MD be_VB reduced_VBN to_TO zero_VB ._.
We_PRP also_RB created_VBD a_DT tool_NN named_VBN ._.
WebSSARI_NN -LRB-_-LRB- Web_NN application_NN Security_NNP by_IN Static_NNP Analysis_NNP and_CC Runtime_NNP Inspection_NNP -RRB-_-RRB- to_TO test_VB our_PRP$ algorithm_NN ,_, and_CC used_VBD it_PRP to_TO verify_VB 230_CD open-source_JJ Web_NN application_NN projects_NNS on_IN SourceForge.net_NN ,_, which_WDT were_VBD selected_VBN to_TO represent_VB projects_NNS of_IN different_JJ maturity_NN ,_, popularity_NN ,_, and_CC scale_NN ._.
69_CD contained_VBD vulnerabilities_NNS ._.
After_IN notifying_VBG the_DT developers_NNS ,_, 38_CD acknowledged_VBD our_PRP$ findings_NNS and_CC stated_VBD their_PRP$ plans_NNS to_TO provide_VB patches_NNS ._.
Our_PRP$ statistics_NNS also_RB show_VBP that_IN static_JJ analysis_NN reduced_VBD potential_JJ runtime_NN overhead_NN by_IN 98.4_CD %_NN ._.
on_IN of_IN new_JJ user_NN ``_`` foo_NN ''_'' with_IN logon_NN rights_NNS ._.
2.4_CD Modeling_NN Web_NN Application_NN Vulnerabilities_NNS The_DT primary_JJ objectives_NNS of_IN information_NN security_NN systems_NNS are_VBP to_TO protect_VB confidentiality_NN ,_, integrity_NN ,_, and_CC availability_NN =_JJ -_: =[_NN 60_CD -RRB-_-RRB- -_: =_SYM -_: ._.
From_IN our_PRP$ examples_NNS ,_, it_PRP is_VBZ obvious_JJ that_IN for_IN Web_NN applications_NNS ,_, compromises_NNS in_IN integrity_NN are_VBP the_DT main_JJ causes_NNS of_IN compromises_NNS in_IN confidentiality_NN and_CC availability_NN ._.
The_DT relationship_NN is_VBZ illustrated_VBN in_IN Figure_NNP
patches_NNS ._.
The_DT technique_NN makes_VBZ use_NN of_IN a_DT flow-sensitive_JJ ,_, context-sensitive_JJ ,_, interprocedural_JJ data_NN flow_NN checking_NN framework_NN that_WDT requires_VBZ no_DT additional_JJ annotations_NNS ._.
In_IN contrast_NN ,_, Flanagan_NNP et_FW al._FW 's_POS ESC\/Java_NN =_JJ -_: =[_NN 26_CD -RRB-_-RRB- -_: =_JJ -_: -LRB-_-LRB- designed_VBN to_TO check_VB the_DT correctness_NN of_IN Java_NNP programs_NNS -RRB-_-RRB- requires_VBZ additional_JJ annotations_NNS from_IN programmers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN
ded_VBN to_TO express_VB and_CC enforce_VB noninterference_NN policies_NNS -LRB-_-LRB- 30_CD -RRB-_-RRB- ._.
2_CD ._.
For_IN specifying_VBG and_CC verifying_VBG noninterference_NN policies_NNS ,_, we_PRP have_VBP proposed_VBN a_DT type_NN system_NN based_VBN on_IN Denning_NNP 's_POS axioms_NNS -LRB-_-LRB- 22_CD -RRB-_-RRB- and_CC Strom_NNP 's_POS typestate_NN =_JJ -_: =[_NN 68_CD -RRB-_-RRB- -_: =_SYM -_: ._.
The_DT system_NN 's_POS advantages_NNS are_VBP twofold_JJ :_: first_RB ,_, it_PRP captures_VBZ information-flow_JJ semantics_NNS more_RBR precisely_RB than_IN static_JJ systems_NNS ,_, resulting_VBG in_IN lower_JJR false_JJ positive_JJ rates_NNS ;_: second_RB ,_, it_PRP requires_VBZ no_DT annotation_NN effo_NN
tive_JJ verification_NN that_IN scales_NNS to_TO large_JJ programs_NNS ._.
It_PRP is_VBZ based_VBN on_IN the_DT assumption_NN that_IN most_JJS program_NN branches_NNS do_VBP not_RB affect_VB the_DT information_NN flow_NN property_NN that_WDT is_VBZ being_VBG checked_VBN ._.
Unlike_IN ESP_NNP ,_, Guyer_NNP et_FW al._FW 's_POS =_JJ -_: =[_NN 32_CD -RRB-_-RRB- -_: =_JJ -_: approach_NN has_VBZ a_DT specific_JJ security_NN focus_NN ._.
It_PRP used_VBD the_DT flow-sensitive_JJ ,_, context-sensitive_JJ ,_, interprocedural_JJ data_NN flow_NN analysis_NN framework_NN provided_VBN by_IN their_PRP$ Broadway_NNP optimizing_VBG compiler_NN to_TO check_VB for_IN format_NN
pes_NNS were_VBD undeterminable_JJ at_IN compile-time_NN ._.
These_DT kinds_NNS of_IN dynamic_JJ checks_NNS are_VBP extremely_RB expensive_JJ ,_, resulting_VBG in_IN the_DT creation_NN of_IN such_JJ static_JJ optimization_NN techniques_NNS as_IN dynamic_JJ typing_NN -LRB-_-LRB- 35_CD -RRB-_-RRB- and_CC soft_JJ typing_NN =_JJ -_: =[_NN 77_CD -RRB-_-RRB- -_: =_SYM -_: to_TO reduce_VB the_DT number_NN of_IN runtime_NN checks_NNS ._.
WebSSARI_NN takes_VBZ a_DT similar_JJ approach_NN --_: that_DT is_VBZ ,_, by_IN applying_VBG static_JJ analysis_NN ,_, it_PRP pinpoints_VBZ code_NN requiring_VBG runtime_NN checks_NNS and_CC inserts_NNS the_DT checks_NNS ._.
A_DT similar_JJ process_NN is_VBZ
age-based_JJ techniques_NNS for_IN specifying_VBG and_CC enforcing_VBG information-flow_JJ policies_NNS ._.
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS -LRB-_-LRB- 70_CD -RRB-_-RRB- based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP =_SYM -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBN such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NNP and_CC Simonet_NNP -LRB-_-LRB- 56_CD -RRB-_-RRB- proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP -LRB-_-LRB- 50_CD -RRB-_-RRB- went_VBD a_DT step_NN further_RBR to_TO provide_VB an_DT actual_JJ JIF_NN implementation_NN --_: a_DT secure_JJ information_NN flow_NN ver_NN
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS -LRB-_-LRB- 70_CD -RRB-_-RRB- based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP -LRB-_-LRB- 7_CD -RRB-_-RRB- proposed_VBD such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NN and_CC Simonet_NN =_JJ -_: =[_NN 56_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP -LRB-_-LRB- 50_CD -RRB-_-RRB- went_VBD a_DT step_NN further_RBR to_TO provide_VB an_DT actual_JJ JIF_NN implementation_NN --_: a_DT secure_JJ information_NN flow_NN verifier_NN for_IN the_DT Java_NNP language_NN ._.
However_RB ,_, even_RB though_IN these_DT languages_NNS can_MD guarante_VB
imperative_JJ programming_NN languages_NNS based_VBN on_IN a_DT program_NN abstraction_NN -LRB-_-LRB- similar_JJ to_TO Cousot_NNP and_CC Cousot_NNP 's_POS -LRB-_-LRB- 14_CD -RRB-_-RRB- abstract_JJ interpretation_NN -RRB-_-RRB- derived_VBN from_IN an_DT instrumented_JJ semantics_NNS of_IN a_DT language_NN ._.
Andrews_NNP and_CC Reitman_NNP =_SYM -_: =[_NN 2_CD -RRB-_-RRB- -_: =_SYM -_: used_VBD an_DT axiomatic_JJ logic_NN to_TO reformulate_VB Denning_NNP 's_POS model_NN and_CC developed_VBD a_DT compile-time_JJ certification_NN method_NN using_VBG Hoare_NNP 's_POS logic_NN ;_: in_IN both_DT cases_NNS ,_, soundness_NN was_VBD only_RB addressed_VBN intuitively_RB -LRB-_-LRB- a_DT more_RBR formal_JJ tr_NN
during_IN execution_NN ._.
Banatre_FW et_FW al._FW -LRB-_-LRB- 6_CD -RRB-_-RRB- have_VBP offered_VBN a_DT comparable_JJ approach_NN plus_CC a_DT proof_NN checking_NN method_NN that_WDT resembles_VBZ dataflow_NN analysis_NN techniques_NNS associated_VBN with_IN optimizing_VBG compilers_NNS ._.
Joshi_NNP and_CC Leino_NNP =_SYM -_: =[_NN 42_CD -RRB-_-RRB- -_: =_SYM -_: examined_VBN various_JJ logical_JJ forms_NNS for_IN representing_VBG information_NN flow_NN semantics_NNS ,_, leading_VBG to_TO a_DT characterization_NN containing_VBG Hoare_NN triples_NNS ._.
Darvas_FW et_FW al._FW -LRB-_-LRB- 18_CD -RRB-_-RRB- went_VBD a_DT step_NN further_RBR in_IN offering_VBG characterization_NN
ensitivity_NN comes_VBZ at_IN a_DT price_NN --_: every_DT branch_NN in_IN a_DT program_NN 's_POS control_NN flow_NN doubles_VBZ the_DT verifier_NN 's_POS search_NN space_NN and_CC therefore_RB limits_VBZ scalability_NN ._.
ESP_NNP ,_, the_DT verificationstool_NN recently_RB developed_VBN by_IN Das_FW et_FW al._FW =_SYM -_: =[_NN 19_CD -RRB-_-RRB- -_: =_JJ -_: ,_, is_VBZ representative_JJ of_IN this_DT approach_NN ;_: the_DT contribution_NN is_VBZ distinctive_JJ because_IN ESP_NNP allows_VBZ for_IN flow-sensitive_JJ verification_NN that_IN scales_NNS to_TO large_JJ programs_NNS ._.
It_PRP is_VBZ based_VBN on_IN the_DT assumption_NN that_IN most_JJS program_NN
argeted_VBD a_DT highlevel_JJ language_NN -LRB-_-LRB- PHP_NN -RRB-_-RRB- and_CC tried_VBD to_TO avoid_VB additional_JJ annotations_NNS ._.
Many_JJ previous_JJ security_NN verification_NN efforts_NNS have_VBP focused_VBN on_IN temporal_JJ safety_NN properties_NNS related_VBN to_TO control_NN flow_NN ._.
Schneider_NN =_JJ -_: =[_NN 61_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBN formalizing_VBG security_NN properties_NNS using_VBG security_NN automata_NN ,_, which_WDT define_VBP the_DT legal_JJ sequences_NNS of_IN program_NN actions_NNS ._.
Walker_NNP -LRB-_-LRB- 73_CD -RRB-_-RRB- proposed_VBD a_DT TAL_NNP extension_NN which_WDT uses_VBZ security_NN policies_NNS expressed_VBN in_IN S_NN
sed_VBN on_IN temporal_JJ safety_NN properties_NNS related_VBN to_TO control_NN flow_NN ._.
Schneider_NN -LRB-_-LRB- 61_CD -RRB-_-RRB- proposed_VBN formalizing_VBG security_NN properties_NNS using_VBG security_NN automata_NN ,_, which_WDT define_VBP the_DT legal_JJ sequences_NNS of_IN program_NN actions_NNS ._.
Walker_NNP =_SYM -_: =[_NN 73_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBD a_DT TAL_NNP extension_NN which_WDT uses_VBZ security_NN policies_NNS expressed_VBN in_IN Schneider_NNP 's_POS automata_NN to_TO derive_VB its_PRP$ type_NN system_NN ._.
Jensen_NNP et_FW al._FW -LRB-_-LRB- 41_CD -RRB-_-RRB- proposed_VBN using_VBG a_DT temporal_JJ logic_NN for_IN specifying_VBG a_DT program_NN 's_POS securi_NNS
By_IN applying_VBG flow_NN axioms_NNS ,_, one_PRP can_MD derive_VB flow_NN proofs_NNS that_WDT specify_VBP a_DT program_NN 's_POS effect_NN on_IN the_DT information_NN state_NN ._.
This_DT allows_VBZ the_DT security_NN classes_NNS of_IN variables_NNS to_TO change_VB during_IN execution_NN ._.
Banatre_FW et_FW al._FW =_SYM -_: =[_NN 6_CD -RRB-_-RRB- -_: =_SYM -_: have_VBP offered_VBN a_DT comparable_JJ approach_NN plus_CC a_DT proof_NN checking_NN method_NN that_WDT resembles_VBZ dataflow_NN analysis_NN techniques_NNS associated_VBN with_IN optimizing_VBG compilers_NNS ._.
Joshi_NNP and_CC Leino_NNP -LRB-_-LRB- 42_CD -RRB-_-RRB- examined_VBD various_JJ logical_JJ forms_NNS f_SYM
ped_VBD a_DT compile-time_JJ certification_NN method_NN using_VBG Hoare_NNP 's_POS logic_NN ;_: in_IN both_DT cases_NNS ,_, soundness_NN was_VBD only_RB addressed_VBN intuitively_RB -LRB-_-LRB- a_DT more_RBR formal_JJ treatment_NN of_IN Denning_NNP 's_POS soundness_NN can_MD be_VB found_VBN in_IN Mizuno_NNP and_CC Schmidt_NNP =_SYM -_: =[_NN 48_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
Orbaek_NN -LRB-_-LRB- 53_CD -RRB-_-RRB- proposed_VBD a_DT similar_JJ treatment_NN ,_, but_CC addressed_VBD the_DT secure_JJ information_NN flow_NN problem_NN in_IN terms_NNS of_IN data_NNS integrity_NN instead_RB of_IN confidentiality_NN ._.
Volpano_FW et_FW al._FW -LRB-_-LRB- 70_CD -RRB-_-RRB- argued_VBD that_IN both_DT works_NNS proved_VBD
ammers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW -LRB-_-LRB- 71_CD -RRB-_-RRB- ,_, RATS_NNS by_IN Secure_NNP Software_NNP -LRB-_-LRB- 64_CD -RRB-_-RRB- ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN =_JJ -_: =[_NN 20_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Splint_NNP by_IN Larochelle_NNP and_CC Evans_NNP -LRB-_-LRB- 44_CD -RRB-_-RRB- ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT unsound_JJ checkers_NNS search_NN for_IN specific_JJ error_NN patterns_NNS ._.
Splint_NNP is_VBZ the_DT only_JJ one_NN that_WDT requires_VBZ user_NN annotations_NNS ._.
With_IN the_DT exc_NN
were_VBD able_JJ to_TO reduce_VB that_DT rejection_NN rate_NN to_TO 8_CD percent_NN in_IN a_DT following_VBG test_NN involving_VBG 10,000_CD PHP_NNP files_NNS ._.
Figure_NNP 14_CD ._.
A_DT screenshot_NN of_IN the_DT WebSSARI_NNP GUI_NNP under_IN Windows_NNP ._.
6_CD ._.
EXPERIMENTAL_JJ RESULTS_NNS SourceForge.net_NN =_JJ -_: =[_NN 4_CD -RRB-_-RRB- -_: =_JJ -_: ,_, the_DT world_NN 's_POS largest_JJS open_JJ source_NN development_NN website_NNS ,_, hosts_NNS over_IN 70,000_CD open-source_JJ projects_NNS for_IN more_JJR than_IN 700,000_CD registered_VBN developers_NNS ._.
PHP_NNP ,_, currently_RB with_IN 7,792_CD registered_JJ projects_NNS ,_, clearly_RB outnum_NN
flow-sensitive_JJ analysis_NN techniques_NNS used_VBN by_IN optimizing_VBG compilers_NNS has_VBZ have_VBP been_VBN extensively_RB researched_VBN starting_VBG from_IN the_DT early_JJ works_NNS of_IN Allen_NNP and_CC Cocke_NNP -LRB-_-LRB- 1_LS -RRB-_-RRB- and_CC followed_VBN by_IN the_DT works_NNS of_IN Hecht_NNP and_CC Ullman_NNP =_SYM -_: =[_NN 34_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Graham_NNP and_CC Wegman_NNP -LRB-_-LRB- 31_CD -RRB-_-RRB- ,_, Barth_NNP -LRB-_-LRB- 8_CD -RRB-_-RRB- ,_, and_CC others_NNS ._.
These_DT methods_NNS yield_VBP more_RBR accurate_JJ runtime_JJ state_NN predictions_NNS than_IN the_DT other_JJ methods_NNS mentioned_VBN above_IN ._.
However_RB ,_, flow-sensitivity_NN comes_VBZ at_IN a_DT price_NN --_: every_DT b_NN
ing_IN The_DT goal_NN of_IN static_JJ checking_NN is_VBZ simply_RB to_TO find_VB software_NN bugs_NNS rather_RB than_IN to_TO prove_VB that_DT one_NN does_VBZ not_RB exist_VB -LRB-_-LRB- 3_CD -RRB-_-RRB- ._.
In_IN other_JJ words_NNS ,_, checkers_NNS are_VBP unsound_JJ ._.
A_DT pioneering_JJ work_NN was_VBD that_IN of_IN Bishop_NNP and_CC Dilger_NNP =_SYM -_: =[_NN 11_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT checked_VBD for_IN ``_`` time-of-check-to-time-of-use_JJ ''_'' -LRB-_-LRB- TOCTTOU_NN -RRB-_-RRB- race_NN conditions_NNS ._.
One_CD recent_JJ exciting_JJ result_NN is_VBZ that_DT of_IN Ashcraft_NNP and_CC Engler_NNP -LRB-_-LRB- 3_CD -RRB-_-RRB- ,_, who_WP used_VBD their_PRP$ metacompilation_NN -LRB-_-LRB- 33_CD -RRB-_-RRB- technique_NN to_TO find_VB over_RP
for_IN objects_NNS whose_WP$ types_NNS were_VBD undeterminable_JJ at_IN compile-time_NN ._.
These_DT kinds_NNS of_IN dynamic_JJ checks_NNS are_VBP extremely_RB expensive_JJ ,_, resulting_VBG in_IN the_DT creation_NN of_IN such_JJ static_JJ optimization_NN techniques_NNS as_IN dynamic_JJ typing_NN =_JJ -_: =[_NN 35_CD -RRB-_-RRB- -_: =_JJ -_: and_CC soft_JJ typing_NN -LRB-_-LRB- 77_CD -RRB-_-RRB- to_TO reduce_VB the_DT number_NN of_IN runtime_NN checks_NNS ._.
WebSSARI_NN takes_VBZ a_DT similar_JJ approach_NN --_: that_DT is_VBZ ,_, by_IN applying_VBG static_JJ analysis_NN ,_, it_PRP pinpoints_VBZ code_NN requiring_VBG runtime_NN checks_NNS and_CC inserts_NNS the_DT checks_NNS ._.
erministic_JJ programs_NNS ._.
A_DT similar_JJ approach_NN involving_VBG flow-sensitive_JJ analysis_NN techniques_NNS used_VBN by_IN optimizing_VBG compilers_NNS has_VBZ have_VBP been_VBN extensively_RB researched_VBN starting_VBG from_IN the_DT early_JJ works_NNS of_IN Allen_NNP and_CC Cocke_NNP =_SYM -_: =[_NN 1_CD -RRB-_-RRB- -_: =_JJ -_: and_CC followed_VBN by_IN the_DT works_NNS of_IN Hecht_NNP and_CC Ullman_NNP -LRB-_-LRB- 34_CD -RRB-_-RRB- ,_, Graham_NNP and_CC Wegman_NNP -LRB-_-LRB- 31_CD -RRB-_-RRB- ,_, Barth_NNP -LRB-_-LRB- 8_CD -RRB-_-RRB- ,_, and_CC others_NNS ._.
These_DT methods_NNS yield_VBP more_RBR accurate_JJ runtime_JJ state_NN predictions_NNS than_IN the_DT other_JJ methods_NNS mentioned_VBN above_IN ._.
tection_NN techniques_NNS are_VBP attractive_JJ because_IN of_IN their_PRP$ accuracy_NN in_IN detecting_VBG errors_NNS ._.
A_DT typical_JJ run-time_JJ approach_NN is_VBZ to_TO instrument_NN code_NN with_IN dynamic_JJ guards_NNS during_IN the_DT compilation_NN phase_NN ._.
Cowan_NNP 's_POS Stackguard_NN =_JJ -_: =[_NN 15_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ representative_JJ of_IN this_DT approach_NN ;_: its_PRP$ low_JJ overhead_NN and_CC high_JJ accuracy_NN has_VBZ led_VBN to_TO its_PRP$ inclusion_NN in_IN a_DT variety_NN of_IN commercial_JJ software_NN packages_NNS ._.
Immunix_JJ Secured_JJ Linux_NN 7_CD +_CC is_VBZ a_DT commercial_JJ distribution_NN of_IN
type_NN qualifier_NN theory_NN -LRB-_-LRB- 27_CD -RRB-_-RRB- ,_, Shankar_NNP et_FW al._FW -LRB-_-LRB- 65_CD -RRB-_-RRB- detected_VBD insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS -LRB-_-LRB- 33_CD -RRB-_-RRB- ,_, Ashcraft_NN and_CC Engler_NN =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_JJ -_: were_VBD also_RB able_JJ to_TO detect_VB insecure_JJ information_NN flow_NN in_IN Linux_NN and_CC OpenBSD_NN code_NN without_IN additional_JJ annotation_NN ._.
However_RB ,_, checkers_NNS are_VBP unsound_JJ ,_, and_CC both_DT addressed_VBD only_RB commonly_RB found_VBN insecure_JJ information_NN
ck_IN the_DT correctness_NN of_IN Java_NNP programs_NNS -RRB-_-RRB- requires_VBZ additional_JJ annotations_NNS from_IN programmers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW =_SYM -_: =[_NN 71_CD -RRB-_-RRB- -_: =_JJ -_: ,_, RATS_NNS by_IN Secure_NNP Software_NNP -LRB-_-LRB- 64_CD -RRB-_-RRB- ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- ,_, Splint_NN by_IN Larochelle_NNP and_CC Evans_NNP -LRB-_-LRB- 44_CD -RRB-_-RRB- ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT unsound_JJ checkers_NNS search_NN for_IN specific_JJ erro_NN
sed_VBN by_IN optimizing_VBG compilers_NNS has_VBZ have_VBP been_VBN extensively_RB researched_VBN starting_VBG from_IN the_DT early_JJ works_NNS of_IN Allen_NNP and_CC Cocke_NNP -LRB-_-LRB- 1_LS -RRB-_-RRB- and_CC followed_VBN by_IN the_DT works_NNS of_IN Hecht_NNP and_CC Ullman_NNP -LRB-_-LRB- 34_CD -RRB-_-RRB- ,_, Graham_NNP and_CC Wegman_NNP -LRB-_-LRB- 31_CD -RRB-_-RRB- ,_, Barth_NNP =_SYM -_: =[_NN 8_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC others_NNS ._.
These_DT methods_NNS yield_VBP more_RBR accurate_JJ runtime_JJ state_NN predictions_NNS than_IN the_DT other_JJ methods_NNS mentioned_VBN above_IN ._.
However_RB ,_, flow-sensitivity_NN comes_VBZ at_IN a_DT price_NN --_: every_DT branch_NN in_IN a_DT program_NN 's_POS control_NN flow_NN d_NN
t_NN al._FW 's_POS ESC\/Java_NN -LRB-_-LRB- 26_CD -RRB-_-RRB- -LRB-_-LRB- designed_VBN to_TO check_VB the_DT correctness_NN of_IN Java_NNP programs_NNS -RRB-_-RRB- requires_VBZ additional_JJ annotations_NNS from_IN programmers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =_JJ -_: ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW -LRB-_-LRB- 71_CD -RRB-_-RRB- ,_, RATS_NNS by_IN Secure_NNP Software_NNP -LRB-_-LRB- 64_CD -RRB-_-RRB- ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- ,_, Splint_NN by_IN Larochelle_NNP and_CC Evans_NNP -LRB-_-LRB- 44_CD -RRB-_-RRB- ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT uns_NNS
on_IN level_NN ;_: Sanctum_NNP 's_POS AppShield_NN -LRB-_-LRB- 58_CD -RRB-_-RRB- ,_, Kavado_NNP 's_POS InterDo_NN -LRB-_-LRB- 43_CD -RRB-_-RRB- ,_, and_CC a_DT number_NN of_IN commercial_JJ products_NNS now_RB offer_VBP similar_JJ strategies_NNS ._.
Most_JJS of_IN the_DT leading_VBG firewall_NN vendors_NNS are_VBP also_RB using_VBG deep_JJ packet_NN inspection_NN =_JJ -_: =[_NN 24_CD -RRB-_-RRB- -_: =_JJ -_: technologies_NNS in_IN their_PRP$ attempts_NNS to_TO filter_NN applicationlevel_NN traffic_NN ._.
According_VBG to_TO a_DT recent_JJ Gartner_NNP report_NN -LRB-_-LRB- 67_CD -RRB-_-RRB- ,_, those_DT that_WDT do_VBP n't_RB offer_VB application-level_JJ protection_NN will_MD eventually_RB ``_`` face_NN extinction_NN ._. ''_''
Al_NNP
nerate_JJ cross_NN referenced_VBD documentation_NN of_IN PHP_NN source_NN files_NNS ._.
A_DT screenshot_NN of_IN this_DT GUI_NN is_VBZ presented_VBN in_IN Figure_NNP 14_CD ._.
sIn_NN this_DT project_NN ,_, we_PRP provided_VBD a_DT code_NN walker_NN for_IN PHP_NNP ._.
We_PRP used_VBD Gagnon_NNP and_CC Hendren_NNP 's_POS SableCC_NN =_JJ -_: =[_NN 29_CD -RRB-_-RRB- -_: =_JJ -_: ,_, an_DT object-oriented_JJ compiler_NN framework_NN for_IN Java_NNP ._.
Similar_JJ to_TO yacc_NN and_CC other_JJ compiler_NN generators_NNS ,_, SableCC_NN accepts_VBZ LALR_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- -LRB-_-LRB- 23_CD -RRB-_-RRB- grammars_NNS ._.
No_DT formally_RB written_VBN grammar_NN specifications_NNS for_IN the_DT PHP_NNP language_NN
n_NN vulnerabilities_NNS discovered_VBN in_IN 2002_CD was_VBD 178_CD %_NN higher_JJR than_IN in_IN 2001_CD ,_, that_IN 95_CD percent_NN of_IN these_DT were_VBD remotely_RB exploitable_JJ ,_, and_CC that_IN 99_CD percent_NN were_VBD considered_VBN highly_RB or_CC moderately_RB severe_JJ ._.
Scott_NNP and_CC Sharp_NNP =_JJ -_: =[_NN 62_CD -RRB-_-RRB- -_: =_JJ -_: -LRB-_-LRB- 63_CD -RRB-_-RRB- have_VBP asserted_VBN that_IN Web_NN application_NN vulnerabilities_NNS are_VBP a_DT -RRB-_-RRB- inherent_JJ in_IN Web_NN application_NN programs_NNS ;_: and_CC b_LS -RRB-_-RRB- independent_JJ of_IN the_DT technology_NN in_IN which_WDT the_DT application_NN in_IN question_NN is_VBZ implemented_VBN ,_, the_DT secu_NN
concept_NN of_IN integrity_NN ._.
Denning_NN -LRB-_-LRB- 22_CD -RRB-_-RRB- established_VBD a_DT lattice_NN model_NN for_IN analyzing_VBG secure_JJ information_NN flow_NN in_IN imperative_JJ programming_NN languages_NNS based_VBN on_IN a_DT program_NN abstraction_NN -LRB-_-LRB- similar_JJ to_TO Cousot_NNP and_CC Cousot_NNP 's_POS =_JJ -_: =[_NN 14_CD -RRB-_-RRB- -_: =_JJ -_: abstract_JJ interpretation_NN -RRB-_-RRB- derived_VBN from_IN an_DT instrumented_JJ semantics_NNS of_IN a_DT language_NN ._.
Andrews_NNP and_CC Reitman_NNP -LRB-_-LRB- 2_CD -RRB-_-RRB- used_VBD an_DT axiomatic_JJ logic_NN to_TO reformulate_VB Denning_NNP 's_POS model_NN and_CC developed_VBD a_DT compile-time_JJ certificatio_NN
Web_NN application_NN security_NN ,_, they_PRP have_VBP at_IN least_JJS two_CD drawbacks_NNS :_: they_PRP require_VBP careful_JJ configuration_NN -LRB-_-LRB- 12_CD -RRB-_-RRB- ,_, and_CC they_PRP only_RB offer_VBP Web_NN application_NN protection_NN -LRB-_-LRB- that_DT is_VBZ ,_, they_PRP do_VBP n't_RB identify_VB errors_NNS -RRB-_-RRB- ._.
Huang_NNP et_FW al._FW =_SYM -_: =[_NN 38_CD -RRB-_-RRB- -_: =_SYM -_: designed_VBN a_DT Web_NN application_NN security_NN assessment_NN framework_NN that_WDT offers_VBZ black-boxed_JJ testing_NN for_IN identifying_VBG Web_NN application_NN vulnerabilities_NNS ._.
However_RB ,_, testing_NN processes_NNS can_MD not_RB guarantee_VB identification_NN of_IN
tegy_NN would_MD be_VB to_TO use_VB an_DT algorithm_NN capable_JJ of_IN giving_VBG counterexample_NN traces_NNS to_TO identify_VB the_DT point_NN where_WRB the_DT tainting_VBG process_NN begins_VBZ and_CC to_TO sanitize_VB the_DT data_NNS before_IN it_PRP propagates_VBZ ._.
In_IN a_DT following_VBG project_NN =_JJ -_: =[_NN 39_CD -RRB-_-RRB- -_: =_JJ -_: ,_, we_PRP addressed_VBD this_DT weakness_NN using_VBG bounded_VBN model_NN checking_NN ,_, which_WDT offers_VBZ counterexamples_NNS at_IN a_DT reasonable_JJ cost_NN ._.
8_CD ._.
CONCLUSION_NN Security_NN remains_VBZ a_DT major_JJ roadblock_NN to_TO universal_JJ acceptance_NN of_IN the_DT Web_NN for_IN ma_FW
ns_NN is_VBZ that_IN their_PRP$ most_RBS critical_JJ vulnerabilities_NNS are_VBP often_RB the_DT results_NNS of_IN insecure_JJ information_NN flow_NN ,_, against_IN which_WDT neither_CC encryption_NN nor_CC traditional_JJ Web_NN access_NN control_NN models_NNS -LRB-_-LRB- 55_CD -RRB-_-RRB- offer_VBP any_DT protection_NN =_JJ -_: =[_NN 57_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Sabelfeld_NNP and_CC Myers_NNP -LRB-_-LRB- 57_CD -RRB-_-RRB- recently_RB published_VBD a_DT comprehensive_JJ survey_NN on_IN language-based_JJ techniques_NNS for_IN specifying_VBG and_CC enforcing_VBG information-flow_JJ policies_NNS ._.
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS -LRB-_-LRB- 70_CD -RRB-_-RRB- based_VBN on_IN t_NN
ion_NN will_MD eventually_RB ``_`` face_NN extinction_NN ._. ''_''
Although_IN application-level_JJ firewalls_NNS offer_VBP immediate_JJ assurance_NN of_IN Web_NN application_NN security_NN ,_, they_PRP have_VBP at_IN least_JJS two_CD drawbacks_NNS :_: they_PRP require_VBP careful_JJ configuration_NN =_JJ -_: =[_NN 12_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC they_PRP only_RB offer_VBP Web_NN application_NN protection_NN -LRB-_-LRB- that_DT is_VBZ ,_, they_PRP do_VBP n't_RB identify_VB errors_NNS -RRB-_-RRB- ._.
Huang_NNP et_FW al._FW -LRB-_-LRB- 38_CD -RRB-_-RRB- designed_VBD a_DT Web_NN application_NN security_NN assessment_NN framework_NN that_WDT offers_VBZ black-boxed_JJ testing_NN for_IN i_FW
ck-end_JJ database_NN ._.
Current_JJ technologies_NNS such_JJ as_IN anti-virus_JJ software_NN programs_NNS and_CC network_NN firewalls_NNS offer_VBP comparatively_RB secure_JJ protection_NN at_IN the_DT host_NN and_CC network_NN levels_NNS ,_, but_CC not_RB at_IN the_DT application_NN level_NN =_JJ -_: =[_NN 17_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, when_WRB network_NN and_CC host-level_JJ entry_NN points_NNS are_VBP relatively_RB secure_JJ ,_, the_DT public_JJ interfaces_NNS of_IN Web_NN applications_NNS become_VBP the_DT focus_NN of_IN attacks_NNS -LRB-_-LRB- 46_CD -RRB-_-RRB- -LRB-_-LRB- 17_CD -RRB-_-RRB- ._.
The_DT recognition_NN of_IN this_DT problem_NN is_VBZ reflected_VBN
tion_NN flow_NN fall_NN into_IN two_CD categories_NNS ._.
Class_NN 1_CD false_JJ positives_NNS arise_VBP from_IN the_DT imprecise_JJ approximation_NN of_IN temporal_JJ variable_JJ properties_NNS ._.
The_DT problem_NN described_VBN in_IN the_DT preceding_JJ paragraph_NN and_CC Doh_NNP and_CC Shin_NNP 's_POS =_JJ -_: =[_NN 25_CD -RRB-_-RRB- -_: =_JJ -_: forward_JJ recovery_NN and_CC backward_RB recovery_NN definitions_NNS serve_VBP as_IN examples_NNS ._.
In_IN fact_NN ,_, most_JJS of_IN the_DT Denning-based_JJ systems_NNS suffer_VBP from_IN class_NN 1_CD errors_NNS because_IN the_DT security_NN class_NN of_IN their_PRP$ variables_NNS remains_VBZ const_NN
itional_JJ annotation_NN in_IN order_NN to_TO reduce_VB false_JJ positives_NNS ._.
Another_DT problem_NN is_VBZ that_IN most_JJS Web_NN applications_NNS today_NN are_VBP not_RB developed_VBN in_IN JIF_NNP or_CC Java_NNP ,_, but_CC in_IN script_NN languages_NNS -LRB-_-LRB- e.g._FW ,_, PHP_NNP ,_, ASP_NNP ,_, Perl_NNP ,_, and_CC Python_NNP -RRB-_-RRB- =_JJ -_: =[_NN 40_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Using_VBG a_DT type_NN qualifier_NN theory_NN -LRB-_-LRB- 27_CD -RRB-_-RRB- ,_, Shankar_NNP et_FW al._FW -LRB-_-LRB- 65_CD -RRB-_-RRB- detected_VBD insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS -LRB-_-LRB- 33_CD -RRB-_-RRB- ,_, Ashcraft_NNP a_DT
ecurity_NN via_IN numerous_JJ different_JJ approaches_NNS ._.
Scott_NNP and_CC Sharp_NNP proposed_VBD the_DT use_NN of_IN a_DT gateway_NN that_WDT filters_VBZ invalid_JJ and_CC malicious_JJ inputs_NNS at_IN the_DT application_NN level_NN ;_: Sanctum_NNP 's_POS AppShield_NN -LRB-_-LRB- 58_CD -RRB-_-RRB- ,_, Kavado_NNP 's_POS InterDo_NN =_JJ -_: =[_NN 43_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC a_DT number_NN of_IN commercial_JJ products_NNS now_RB offer_VBP similar_JJ strategies_NNS ._.
Most_JJS of_IN the_DT leading_VBG firewall_NN vendors_NNS are_VBP also_RB using_VBG deep_JJ packet_NN inspection_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- technologies_NNS in_IN their_PRP$ attempts_NNS to_TO filter_NN application_NN
-RRB-_-RRB- -LRB-_-LRB- 23_CD -RRB-_-RRB- grammars_NNS ._.
No_DT formally_RB written_VBN grammar_NN specifications_NNS for_IN the_DT PHP_NNP language_NN exist_VBP ,_, and_CC no_DT studies_NNS have_VBP been_VBN performed_VBN on_IN whether_IN PHP_NNP 's_POS grammar_NN can_MD be_VB fully_RB expressed_VBN in_IN LALR_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- ._.
We_PRP used_VBD Mandre_NNP 's_POS =_JJ -_: =[_NN 45_CD -RRB-_-RRB- -_: =_JJ -_: LALR_NN -LRB-_-LRB- 1_LS -RRB-_-RRB- PHP_NN grammar_NN for_IN SableCC_NN ,_, which_WDT has_VBZ never_RB been_VBN thoroughly_RB tested_VBN ._.
The_DT combination_NN of_IN SableCC_NNP and_CC Mandre_NNP 's_POS grammar_NN allowed_VBD us_PRP to_TO develop_VB a_DT code_NN walker_NN for_IN PHP_NNP ;_: however_RB ,_, an_DT initial_JJ test_NN drive_NN us_PRP
time_NN certification_NN method_NN using_VBG Hoare_NNP 's_POS logic_NN ;_: in_IN both_DT cases_NNS ,_, soundness_NN was_VBD only_RB addressed_VBN intuitively_RB -LRB-_-LRB- a_DT more_RBR formal_JJ treatment_NN of_IN Denning_NNP 's_POS soundness_NN can_MD be_VB found_VBN in_IN Mizuno_NNP and_CC Schmidt_NNP -LRB-_-LRB- 48_CD -RRB-_-RRB- -RRB-_-RRB- ._.
Orbaek_NN =_JJ -_: =[_NN 53_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBD a_DT similar_JJ treatment_NN ,_, but_CC addressed_VBD the_DT secure_JJ information_NN flow_NN problem_NN in_IN terms_NNS of_IN data_NNS integrity_NN instead_RB of_IN confidentiality_NN ._.
Volpano_FW et_FW al._FW -LRB-_-LRB- 70_CD -RRB-_-RRB- argued_VBD that_IN both_DT works_NNS proved_VBD soundness_NN with_IN
ities_NNS ._.
Since_IN we_PRP will_MD only_RB provide_VB brief_JJ descriptions_NNS of_IN the_DT most_RBS widely_RB exploited_VBN vulnerability_NN --_: script_NN injection_NN --_: readers_NNS are_VBP referred_VBN to_TO Scott_NNP and_CC Sharp_NNP -LRB-_-LRB- 62_CD -RRB-_-RRB- -LRB-_-LRB- 63_CD -RRB-_-RRB- ,_, Curphey_NNP et_FW al._FW -LRB-_-LRB- 17_CD -RRB-_-RRB- ,_, Curphey_NNP et_FW al._FW =_SYM -_: =[_NN 54_CD -RRB-_-RRB- -_: =_JJ -_: -LRB-_-LRB- 17_CD -RRB-_-RRB- ,_, and_CC Meier_NNP et_FW al._FW -LRB-_-LRB- 46_CD -RRB-_-RRB- for_IN more_JJR details_NNS ._.
2.1_CD Cross-Site_JJ Scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- Cross-site_JJ scripting_NN -LRB-_-LRB- XSS_NN -RRB-_-RRB- is_VBZ perhaps_RB the_DT most_RBS common_JJ Web_NN application_NN vulnerability_NN ._.
Figure_NN 1_CD gives_VBZ an_DT example_NN of_IN an_DT XSS_NN b_NN
prove_VB Web_NN application_NN security_NN via_IN numerous_JJ different_JJ approaches_NNS ._.
Scott_NNP and_CC Sharp_NNP proposed_VBD the_DT use_NN of_IN a_DT gateway_NN that_WDT filters_VBZ invalid_JJ and_CC malicious_JJ inputs_NNS at_IN the_DT application_NN level_NN ;_: Sanctum_NNP 's_POS AppShield_NN =_JJ -_: =[_NN 58_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Kavado_NNP 's_POS InterDo_NN -LRB-_-LRB- 43_CD -RRB-_-RRB- ,_, and_CC a_DT number_NN of_IN commercial_JJ products_NNS now_RB offer_VBP similar_JJ strategies_NNS ._.
Most_JJS of_IN the_DT leading_VBG firewall_NN vendors_NNS are_VBP also_RB using_VBG deep_JJ packet_NN inspection_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- technologies_NNS in_IN their_PRP$ attempt_NN
tion_NN Vulnerability_NN and_CC Error_NN Scanner_NN -RRB-_-RRB- -LRB-_-LRB- 38_CD -RRB-_-RRB- ._.
Their_PRP$ framework_NN uses_VBZ black-boxed_JJ testing_NN to_TO identify_VB Web_NN application_NN vulnerabilities_NNS ._.
Similar_JJ approaches_NNS are_VBP adopted_VBN by_IN commercial_JJ projects_NNS such_JJ as_IN AppScan_NN =_JJ -_: =[_NN 59_CD -RRB-_-RRB- -_: =_JJ -_: ,_, WebInspect_NN -LRB-_-LRB- 66_CD -RRB-_-RRB- ,_, and_CC ScanDo_NN -LRB-_-LRB- 43_CD -RRB-_-RRB- ._.
While_IN this_DT approach_NN can_MD be_VB used_VBN to_TO identify_VB errors_NNS early_RB in_IN the_DT development_NN cycle_NN ,_, it_PRP does_VBZ not_RB provide_VB immediate_JJ Web_NN application_NN protection_NN as_IN offered_VBN by_IN Scott_NNP and_CC
grams_NNS -RRB-_-RRB- requires_VBZ additional_JJ annotations_NNS from_IN programmers_NNS ._.
Most_JJS efforts_NNS to_TO develop_VB checkers_NNS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW -LRB-_-LRB- 71_CD -RRB-_-RRB- ,_, RATS_NNS by_IN Secure_NNP Software_NNP =_SYM -_: =[_NN 64_CD -RRB-_-RRB- -_: =_JJ -_: ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- ,_, Splint_NN by_IN Larochelle_NNP and_CC Evans_NNP -LRB-_-LRB- 44_CD -RRB-_-RRB- ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT unsound_JJ checkers_NNS search_NN for_IN specific_JJ error_NN patterns_NNS ._.
Splint_NNP is_VBZ the_DT only_RB
of_IN Web_NN applications_NNS ,_, but_CC they_PRP require_VBP careful_JJ configuration_NN by_IN experienced_JJ administrators_NNS -LRB-_-LRB- 12_CD -RRB-_-RRB- ._.
At_IN least_JJS four_CD assessment_NN frameworks_NNS for_IN Web_NN application_NN security_NN -LRB-_-LRB- WAVES_NNS -LRB-_-LRB- 38_CD -RRB-_-RRB- ,_, AppScan_NN -LRB-_-LRB- 59_CD -RRB-_-RRB- ,_, WebInspect_NN =_JJ -_: =[_NN 66_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC ScanDo_NN -LRB-_-LRB- 43_CD -RRB-_-RRB- -RRB-_-RRB- provide_VBP black-boxed_JJ testing_NN capability_NN for_IN identifying_VBG Web_NN application_NN vulnerabilities_NNS ._.
Still_RB ,_, testing_NN approaches_NNS can_MD never_RB guarantee_VB soundness_NN ._.
Here_RB we_PRP have_VBP tried_VBN to_TO establish_VB an_DT a_DT
lar_JJ strategies_NNS ._.
Most_JJS of_IN the_DT leading_VBG firewall_NN vendors_NNS are_VBP also_RB using_VBG deep_JJ packet_NN inspection_NN -LRB-_-LRB- 24_CD -RRB-_-RRB- technologies_NNS in_IN their_PRP$ attempts_NNS to_TO filter_NN applicationlevel_NN traffic_NN ._.
According_VBG to_TO a_DT recent_JJ Gartner_NNP report_NN =_JJ -_: =[_NN 67_CD -RRB-_-RRB- -_: =_JJ -_: ,_, those_DT that_WDT do_VBP n't_RB offer_VB application-level_JJ protection_NN will_MD eventually_RB ``_`` face_NN extinction_NN ._. ''_''
Although_IN application-level_JJ firewalls_NNS offer_VBP immediate_JJ assurance_NN of_IN Web_NN application_NN security_NN ,_, they_PRP have_VBP at_IN least_JJS
es_NNS are_VBP organized_VBN according_VBG to_TO severity_NN ,_, with_IN general_JJ script_NN injection_NN the_DT most_RBS severe_JJ ,_, SQL_NN injection_NN second_NN ,_, and_CC XSS_NN third_JJ ._.
To_TO help_VB users_NNS investigate_VB reported_VBN vulnerabilities_NNS ,_, we_PRP added_VBD Watts_NNP '_POS PHPXREF_NN =_SYM -_: =[_NN 74_CD -RRB-_-RRB- -_: =_SYM -_: to_TO generate_VB cross_NN referenced_VBD documentation_NN of_IN PHP_NN source_NN files_NNS ._.
A_DT screenshot_NN of_IN this_DT GUI_NN is_VBZ presented_VBN in_IN Figure_NNP 14_CD ._.
sIn_NN this_DT project_NN ,_, we_PRP provided_VBD a_DT code_NN walker_NN for_IN PHP_NNP ._.
We_PRP used_VBD Gagnon_NNP and_CC Hendren_NNP 's_POS Sa_NN
techniques_NNS used_VBN by_IN optimizing_VBG compilers_NNS has_VBZ have_VBP been_VBN extensively_RB researched_VBN starting_VBG from_IN the_DT early_JJ works_NNS of_IN Allen_NNP and_CC Cocke_NNP -LRB-_-LRB- 1_LS -RRB-_-RRB- and_CC followed_VBN by_IN the_DT works_NNS of_IN Hecht_NNP and_CC Ullman_NNP -LRB-_-LRB- 34_CD -RRB-_-RRB- ,_, Graham_NNP and_CC Wegman_NNP =_SYM -_: =[_NN 31_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Barth_NNP -LRB-_-LRB- 8_CD -RRB-_-RRB- ,_, and_CC others_NNS ._.
These_DT methods_NNS yield_VBP more_RBR accurate_JJ runtime_JJ state_NN predictions_NNS than_IN the_DT other_JJ methods_NNS mentioned_VBN above_IN ._.
However_RB ,_, flow-sensitivity_NN comes_VBZ at_IN a_DT price_NN --_: every_DT branch_NN in_IN a_DT program_NN 's_POS con_NN
70_CD -RRB-_-RRB- based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP -LRB-_-LRB- 7_CD -RRB-_-RRB- proposed_VBD such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NNP and_CC Simonet_NNP -LRB-_-LRB- 56_CD -RRB-_-RRB- proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP =_SYM -_: =[_NN 50_CD -RRB-_-RRB- -_: =_SYM -_: went_VBD a_DT step_NN further_RBR to_TO provide_VB an_DT actual_JJ JIF_NN implementation_NN --_: a_DT secure_JJ information_NN flow_NN verifier_NN for_IN the_DT Java_NNP language_NN ._.
However_RB ,_, even_RB though_IN these_DT languages_NNS can_MD guarantee_VB secure_JJ information_NN flow_NN ,_, many_JJ
protection_NN -LRB-_-LRB- 57_CD -RRB-_-RRB- ._.
Sabelfeld_NNP and_CC Myers_NNP -LRB-_-LRB- 57_CD -RRB-_-RRB- recently_RB published_VBD a_DT comprehensive_JJ survey_NN on_IN language-based_JJ techniques_NNS for_IN specifying_VBG and_CC enforcing_VBG information-flow_JJ policies_NNS ._.
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS =_JJ -_: =[_NN 70_CD -RRB-_-RRB- -_: =_SYM -_: based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP -LRB-_-LRB- 7_CD -RRB-_-RRB- proposed_VBD such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NNP and_CC Simonet_NNP -LRB-_-LRB- 56_CD -RRB-_-RRB- proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP -LRB-_-LRB- 50_CD
t_NN ,_, we_PRP provided_VBD a_DT code_NN walker_NN for_IN PHP_NNP ._.
We_PRP used_VBD Gagnon_NNP and_CC Hendren_NNP 's_POS SableCC_NN -LRB-_-LRB- 29_CD -RRB-_-RRB- ,_, an_DT object-oriented_JJ compiler_NN framework_NN for_IN Java_NNP ._.
Similar_JJ to_TO yacc_NN and_CC other_JJ compiler_NN generators_NNS ,_, SableCC_NN accepts_VBZ LALR_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- =_SYM -_: =[_NN 23_CD -RRB-_-RRB- -_: =_JJ -_: grammars_NNS ._.
No_DT formally_RB written_VBN grammar_NN specifications_NNS for_IN the_DT PHP_NNP language_NN exist_VBP ,_, and_CC no_DT studies_NNS have_VBP been_VBN performed_VBN on_IN whether_IN PHP_NNP 's_POS grammar_NN can_MD be_VB fully_RB expressed_VBN in_IN LALR_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- ._.
We_PRP used_VBD Mandre_NNP 's_POS -LRB-_-LRB- 45_CD -RRB-_-RRB- L_NN
nd_IN Wagner_NNP -LRB-_-LRB- 13_CD -RRB-_-RRB- looked_VBD for_IN vulnerabilities_NNS in_IN real_JJ C_NN programs_NNS by_IN model_NN checking_NN for_IN violations_NNS of_IN a_DT program_NN 's_POS temporal_JJ safety_NN properties_NNS ._.
Though_IN their_PRP$ main_JJ focus_NN was_VBD not_RB on_IN security_NN ,_, Ball_NNP and_CC Rajamani_NNP =_SYM -_: =[_NN 5_CD -RRB-_-RRB- -_: =_SYM -_: adopted_VBD a_DT similar_JJ approach_NN for_IN their_PRP$ SLAM_NNP project_NN and_CC successfully_RB applied_VBD it_PRP to_TO Windows_NNP XP_NN device_NN drivers_NNS ._.
3.1_CD Type-Based_JJ Analysis_NN Since_IN vulnerabilities_NNS in_IN Web_NN applications_NNS are_VBP primarily_RB associated_VBN
and_CC Python_NNP -RRB-_-RRB- -LRB-_-LRB- 40_CD -RRB-_-RRB- ._.
Using_VBG a_DT type_NN qualifier_NN theory_NN -LRB-_-LRB- 27_CD -RRB-_-RRB- ,_, Shankar_NNP et_FW al._FW -LRB-_-LRB- 65_CD -RRB-_-RRB- detected_VBD insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS =_JJ -_: =[_NN 33_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Ashcraft_NNP and_CC Engler_NNP -LRB-_-LRB- 3_CD -RRB-_-RRB- were_VBD also_RB able_JJ to_TO detect_VB insecure_JJ information_NN flow_NN in_IN Linux_NN and_CC OpenBSD_NN code_NN without_IN additional_JJ annotation_NN ._.
However_RB ,_, checkers_NNS are_VBP unsound_JJ ,_, and_CC both_DT addressed_VBD only_RB commonly_RB fo_FW
ve_IN tracking_NN of_IN variable_JJ states_NNS ,_, it_PRP serves_VBZ as_IN a_DT technique_NN applicable_JJ to_TO reduce_VB the_DT number_NN of_IN class_NN 1_CD errors_NNS that_IN type-based_JJ information_NN flow_NN systems_NNS suffer_VBP ._.
Inspired_VBN by_IN typestate_NN ,_, DeLine_NN and_CC Fahndrich_NN =_JJ -_: =[_NN 21_CD -RRB-_-RRB- -_: =_SYM -_: extended_VBN C_NN types_NNS in_IN their_PRP$ Vault_NNP programming_NN language_NN with_IN predicates_NNS -LRB-_-LRB- named_VBN type_NN guards_NNS -RRB-_-RRB- that_WDT describe_VBP legal_JJ conditions_NNS on_IN the_DT use_NN of_IN the_DT type_NN ._.
In_IN other_JJ words_NNS ,_, types_NNS determine_VBP valid_JJ operations_NNS ,_, while_IN
ive_FW T-U_FW lattice_NN ._.
According_VBG to_TO our_PRP$ experimental_JJ results_NNS ,_, the_DT use_NN of_IN this_DT lattice_NN model_NN helped_VBD to_TO reduce_VB false_JJ positives_NNS by_IN 10.03_CD percent_NN ._.
Compared_VBN to_TO unsound_JJ checkers_NNS -LRB-_-LRB- 3_CD -RRB-_-RRB- -LRB-_-LRB- 26_CD -RRB-_-RRB- -LRB-_-LRB- 71_CD -RRB-_-RRB- -LRB-_-LRB- 64_CD -RRB-_-RRB- -LRB-_-LRB- 75_CD -RRB-_-RRB- -LRB-_-LRB- 20_CD -RRB-_-RRB- -LRB-_-LRB- 44_CD -RRB-_-RRB- =_JJ -_: =[_NN 69_CD -RRB-_-RRB- -_: =_JJ -_: ,_, our_PRP$ approach_NN attempts_VBZ to_TO provide_VB a_DT sound_JJ verification_NN framework_NN ._.
9_CD ._.
ACKNOWLEDGMENT_VB We_PRP deeply_RB appreciate_VBP the_DT anonymous_JJ reviewers_NNS for_IN offering_VBG us_PRP many_JJ valuable_JJ comments_NNS ._.
We_PRP would_MD also_RB like_VB to_TO thank_VB Dr_NN
wn_IN that_DT most_JJS Web_NN application_NN security_NN problems_NNS arise_VBP from_IN data_NN integrity_NN violations_NNS caused_VBN by_IN insecure_JJ information_NN flow_NN ,_, and_CC that_IN mechanisms_NNS are_VBP needed_VBN to_TO express_VB and_CC enforce_VB noninterference_NN policies_NNS =_JJ -_: =[_NN 30_CD -RRB-_-RRB- -_: =_SYM -_: ._.
2_CD ._.
For_IN specifying_VBG and_CC verifying_VBG noninterference_NN policies_NNS ,_, we_PRP have_VBP proposed_VBN a_DT type_NN system_NN based_VBN on_IN Denning_NNP 's_POS axioms_NNS -LRB-_-LRB- 22_CD -RRB-_-RRB- and_CC Strom_NNP 's_POS typestate_NN -LRB-_-LRB- 68_CD -RRB-_-RRB- ._.
The_DT system_NN 's_POS advantages_NNS are_VBP twofold_JJ :_: first_RB ,_, it_PRP cap_NN
proposed_VBN using_VBG a_DT temporal_JJ logic_NN for_IN specifying_VBG a_DT program_NN 's_POS security_NN properties_NNS based_VBN on_IN its_PRP$ control_NN flow_NN ,_, and_CC offered_VBD a_DT model_NN checking_NN technique_NN for_IN verification_NN ._.
In_IN a_DT similar_JJ effort_NN ,_, Chen_NNP and_CC Wagner_NNP =_SYM -_: =[_NN 13_CD -RRB-_-RRB- -_: =_SYM -_: looked_VBD for_IN vulnerabilities_NNS in_IN real_JJ C_NN programs_NNS by_IN model_NN checking_NN for_IN violations_NNS of_IN a_DT program_NN 's_POS temporal_JJ safety_NN properties_NNS ._.
Though_IN their_PRP$ main_JJ focus_NN was_VBD not_RB on_IN security_NN ,_, Ball_NNP and_CC Rajamani_NNP -LRB-_-LRB- 5_CD -RRB-_-RRB- adopted_VBD a_DT
e_LS false_JJ positives_NNS ._.
Another_DT problem_NN is_VBZ that_IN most_JJS Web_NN applications_NNS today_NN are_VBP not_RB developed_VBN in_IN JIF_NNP or_CC Java_NNP ,_, but_CC in_IN script_NN languages_NNS -LRB-_-LRB- e.g._FW ,_, PHP_NNP ,_, ASP_NNP ,_, Perl_NNP ,_, and_CC Python_NN -RRB-_-RRB- -LRB-_-LRB- 40_CD -RRB-_-RRB- ._.
Using_VBG a_DT type_NN qualifier_NN theory_NN =_JJ -_: =[_NN 27_CD -RRB-_-RRB- -_: =_JJ -_: ,_, Shankar_NNP et_FW al._FW -LRB-_-LRB- 65_CD -RRB-_-RRB- detected_VBD insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS -LRB-_-LRB- 33_CD -RRB-_-RRB- ,_, Ashcraft_NN and_CC Engler_NN -LRB-_-LRB- 3_CD -RRB-_-RRB- were_VBD also_RB able_JJ to_TO dete_VB
ers_NNPS have_VBP resulted_VBN in_IN publicly_RB available_JJ tools_NNS -LRB-_-LRB- 16_CD -RRB-_-RRB- ,_, including_VBG BOON_NN by_IN Wagner_NNP et_FW al._FW -LRB-_-LRB- 71_CD -RRB-_-RRB- ,_, RATS_NNS by_IN Secure_NNP Software_NNP -LRB-_-LRB- 64_CD -RRB-_-RRB- ,_, FlawFinder_NNP by_IN Wheeler_NNP -LRB-_-LRB- 75_CD -RRB-_-RRB- ,_, PScan_NN by_IN DeKok_NN -LRB-_-LRB- 20_CD -RRB-_-RRB- ,_, Splint_NN by_IN Larochelle_NNP and_CC Evans_NNP =_SYM -_: =[_NN 44_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC ITS4_NN by_IN Viega_FW et_FW al._FW -LRB-_-LRB- 69_CD -RRB-_-RRB- ._.
All_DT these_DT unsound_JJ checkers_NNS search_NN for_IN specific_JJ error_NN patterns_NNS ._.
Splint_NNP is_VBZ the_DT only_JJ one_NN that_WDT requires_VBZ user_NN annotations_NNS ._.
With_IN the_DT exception_NN of_IN ESC\/Java_NN ,_, they_PRP are_VBP all_DT desi_NNS
checks_NNS ._.
WebSSARI_NN takes_VBZ a_DT similar_JJ approach_NN --_: that_DT is_VBZ ,_, by_IN applying_VBG static_JJ analysis_NN ,_, it_PRP pinpoints_VBZ code_NN requiring_VBG runtime_NN checks_NNS and_CC inserts_NNS the_DT checks_NNS ._.
A_DT similar_JJ process_NN is_VBZ found_VBN in_IN Necula_NNP et_FW al._FW 's_POS CCured_NN =_JJ -_: =[_NN 52_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Though_IN not_RB specifically_RB focused_VBN on_IN security_NN ,_, this_DT scheme_NN combines_VBZ type_NN inference_NN and_CC run-time_NN checks_NNS to_TO ensure_VB type_NN safety_NN for_IN existing_VBG C_NN programs_NNS ._.
A_DT major_JJ difference_NN is_VBZ that_IN our_PRP$ inserted_VBN guards_NNS per_IN
other_JJ problem_NN is_VBZ that_IN most_JJS Web_NN applications_NNS today_NN are_VBP not_RB developed_VBN in_IN JIF_NNP or_CC Java_NNP ,_, but_CC in_IN script_NN languages_NNS -LRB-_-LRB- e.g._FW ,_, PHP_NNP ,_, ASP_NNP ,_, Perl_NNP ,_, and_CC Python_NN -RRB-_-RRB- -LRB-_-LRB- 40_CD -RRB-_-RRB- ._.
Using_VBG a_DT type_NN qualifier_NN theory_NN -LRB-_-LRB- 27_CD -RRB-_-RRB- ,_, Shankar_NNP et_FW al._FW =_SYM -_: =[_NN 65_CD -RRB-_-RRB- -_: =_SYM -_: detected_VBN insecure_JJ information_NN flow_NN within_IN legacy_NN code_NN with_IN little_JJ additional_JJ annotation_NN ._.
Using_VBG metacompilation-based_JJ checkers_NNS -LRB-_-LRB- 33_CD -RRB-_-RRB- ,_, Ashcraft_NN and_CC Engler_NN -LRB-_-LRB- 3_CD -RRB-_-RRB- were_VBD also_RB able_JJ to_TO detect_VB insecure_JJ informati_NNS
analysis_NN to_TO offer_VB satisfactory_JJ runtime_NN program_NN state_NN approximation_NN ;_: one_CD strategy_NN is_VBZ to_TO delay_VB parts_NNS of_IN the_DT verification_NN process_NN until_IN runtime_NN ._.
A_DT good_JJ example_NN of_IN this_DT practice_NN is_VBZ Perl_NNP 's_POS ``_`` tainted_JJ mode_NN ''_'' =_SYM -_: =[_NN 72_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT ensures_VBZ system_NN integrity_NN by_IN tracking_VBG tainted_JJ data_NNS submitted_VBN by_IN the_DT user_NN at_IN runtime_NN ._.
Similarly_RB ,_, Myers_NNP -LRB-_-LRB- 50_CD -RRB-_-RRB- also_RB leaves_VBZ some_DT JIF_NN security_NN label_NN checking_NN operations_NNS until_IN runtime_NN ._.
In_IN dynamically_RB
systems_NNS have_VBP proven_VBN useful_JJ for_IN specifying_VBG and_CC checking_VBG program_NN safety_NN properties_NNS ._.
By_IN means_NNS of_IN programmer-supplied_JJ annotations_NNS ,_, both_DT proof-carrying_JJ codes_NNS -LRB-_-LRB- PCC_NN -RRB-_-RRB- -LRB-_-LRB- 51_CD -RRB-_-RRB- and_CC typed_VBD assembly_NN languages_NNS -LRB-_-LRB- TAL_NN -RRB-_-RRB- =_JJ -_: =[_NN 49_CD -RRB-_-RRB- -_: =_SYM -_: are_VBP designed_VBN to_TO provide_VB safetysproofs_NNS for_IN low-level_JJ compiler-generated_JJ programs_NNS ._.
We_PRP also_RB used_VBD a_DT type_NN system_NN to_TO verify_VB program_NN security_NN ,_, but_CC we_PRP targeted_VBD a_DT highlevel_JJ language_NN -LRB-_-LRB- PHP_NN -RRB-_-RRB- and_CC tried_VBD to_TO avoid_VB a_DT
mata_NN ,_, which_WDT define_VBP the_DT legal_JJ sequences_NNS of_IN program_NN actions_NNS ._.
Walker_NNP -LRB-_-LRB- 73_CD -RRB-_-RRB- proposed_VBD a_DT TAL_NNP extension_NN which_WDT uses_VBZ security_NN policies_NNS expressed_VBN in_IN Schneider_NNP 's_POS automata_NN to_TO derive_VB its_PRP$ type_NN system_NN ._.
Jensen_NNP et_FW al._FW =_SYM -_: =[_NN 41_CD -RRB-_-RRB- -_: =_SYM -_: proposed_VBN using_VBG a_DT temporal_JJ logic_NN for_IN specifying_VBG a_DT program_NN 's_POS security_NN properties_NNS based_VBN on_IN its_PRP$ control_NN flow_NN ,_, and_CC offered_VBD a_DT model_NN checking_NN technique_NN for_IN verification_NN ._.
In_IN a_DT similar_JJ effort_NN ,_, Chen_NNP and_CC Wagner_NNP
a_DT subject_NN can_MD not_RB access_VB information_NN classified_VBN above_IN its_PRP$ clearance_NN ,_, and_CC b_NN -RRB-_-RRB- a_DT subject_NN can_MD not_RB write_VB to_TO objects_NNS classified_VBN below_IN its_PRP$ clearance_NN ._.
Their_PRP$ original_JJ model_NN only_RB dealt_VBD with_IN confidentiality_NN ;_: Biba_NNP =_SYM -_: =[_NN 10_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ credited_VBN with_IN adding_VBG the_DT concept_NN of_IN integrity_NN ._.
Denning_NN -LRB-_-LRB- 22_CD -RRB-_-RRB- established_VBD a_DT lattice_NN model_NN for_IN analyzing_VBG secure_JJ information_NN flow_NN in_IN imperative_JJ programming_NN languages_NNS based_VBN on_IN a_DT program_NN abstraction_NN -LRB-_-LRB- si_FW
ecently_RB published_VBN a_DT comprehensive_JJ survey_NN on_IN language-based_JJ techniques_NNS for_IN specifying_VBG and_CC enforcing_VBG information-flow_JJ policies_NNS ._.
Among_IN them_PRP ,_, sound_JJ type_NN systems_NNS -LRB-_-LRB- 70_CD -RRB-_-RRB- based_VBN on_IN the_DT lattice_NN model_NN of_IN Denning_NN =_JJ -_: =[_NN 22_CD -RRB-_-RRB- -_: =_SYM -_: appear_VBP most_RBS promising_JJ ._.
Banerjee_NNP and_CC Naumann_NNP -LRB-_-LRB- 7_CD -RRB-_-RRB- proposed_VBD such_PDT a_DT system_NN for_IN a_DT Java-like_JJ language_NN ,_, and_CC Pottier_NNP and_CC Simonet_NNP -LRB-_-LRB- 56_CD -RRB-_-RRB- proposed_VBD one_CD for_IN ML_NNP ._.
Myers_NNP -LRB-_-LRB- 50_CD -RRB-_-RRB- went_VBD a_DT step_NN further_RBR to_TO provide_VB an_DT actual_JJ
iated_VBN with_IN optimizing_VBG compilers_NNS ._.
Joshi_NNP and_CC Leino_NNP -LRB-_-LRB- 42_CD -RRB-_-RRB- examined_VBD various_JJ logical_JJ forms_NNS for_IN representing_VBG information_NN flow_NN semantics_NNS ,_, leading_VBG to_TO a_DT characterization_NN containing_VBG Hoare_NN triples_NNS ._.
Darvas_FW et_FW al._FW =_SYM -_: =[_NN 18_CD -RRB-_-RRB- -_: =_SYM -_: went_VBD a_DT step_NN further_RBR in_IN offering_VBG characterizations_NNS in_IN dynamic_JJ logic_NN ,_, which_WDT allows_VBZ the_DT use_NN of_IN general_JJ purpose_NN verifications_NNS tools_NNS -LRB-_-LRB- i.e._FW ,_, theorem_NN provers_NNS -RRB-_-RRB- to_TO analyze_VB secure_JJ information_NN flow_NN within_IN deter_VB
