GlobeDB_NN :_: autonomic_JJ data_NNS replication_NN for_IN web_NN applications_NNS
We_PRP present_VBP GlobeDB_NN ,_, a_DT system_NN for_IN hosting_VBG Web_NN applications_NNS that_WDT performs_VBZ autonomic_JJ replication_NN of_IN application_NN data_NNS ._.
GlobeDB_NN offers_VBZ data-intensive_JJ Web_NN applications_NNS the_DT benefits_NNS of_IN low_JJ access_NN latencies_NNS and_CC reduced_VBN update_VBP traffic_NN ._.
The_DT major_JJ distinction_NN in_IN our_PRP$ system_NN compared_VBN to_TO existing_VBG edge_NN computing_NN infrastructures_NNS is_VBZ that_IN the_DT process_NN of_IN distribution_NN and_CC replication_NN of_IN application_NN data_NNS is_VBZ handled_VBN by_IN the_DT system_NN automatically_RB with_IN very_RB little_JJ manual_JJ administration_NN ._.
We_PRP show_VBP that_IN significant_JJ performance_NN gains_NNS can_MD be_VB obtained_VBN this_DT way_NN ._.
Performance_NNP evaluations_NNS with_IN the_DT TPC-W_NN benchmark_NN over_IN an_DT emulated_VBN wide-area_NN network_NN show_VBP that_IN GlobeDB_NN reduces_VBZ latencies_NNS by_IN a_DT factor_NN of_IN 4_CD compared_VBN to_TO non-replicated_JJ systems_NNS and_CC reduces_VBZ update_VB traffic_NN by_IN a_DT factor_NN of_IN 6_CD compared_VBN to_TO fully_RB replicated_VBN systems_NNS ._.
nsible_JJ for_IN functional_JJ aspects_NNS such_JJ as_IN location_NN of_IN replicated_VBN data_NNS ._.
sincurring_VBG wide-area_JJ latency_NN ._.
Each_DT client_NN is_VBZ assumed_VBN to_TO be_VB redirected_VBN to_TO its_PRP$ closest_JJS edge_NN server_NN using_VBG enhanced_VBN DNS-based_JJ redirection_NN =_JJ -_: =[_NN 12_CD ,_, 14_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Furthermore_RB ,_, for_IN each_DT session_NN ,_, a_DT client_NN is_VBZ assumed_VBN to_TO be_VB served_VBN by_IN only_RB one_CD Web_NN server_NN ._.
When_WRB a_DT client_NN issues_NNS an_DT HTTP_NN request_NN to_TO a_DT Web_NN server_NN ,_, the_DT request_NN is_VBZ forwarded_VBN to_TO the_DT application_NN code_NN -LRB-_-LRB- e.g._FW ,_,
lerated_VBN by_IN the_DT application_NN as_IN each_DT client_NN session_NN is_VBZ handled_VBN by_IN only_RB one_CD edge_NN server_NN in_IN the_DT network_NN ._.
Note_VB that_IN even_RB existing_VBG solutions_NNS over_IN commercial_JJ database_NN systems_NNS such_JJ as_IN DBCache_NN -LRB-_-LRB- 6_CD -RRB-_-RRB- and_CC MTCache_NN =_JJ -_: =[_NN 17_CD -RRB-_-RRB- -_: =_SYM -_: face_VBP similar_JJ issues_NNS and_CC guarantee_VB the_DT same_JJ level_NN of_IN consistency_NN as_IN GlobeDB_NN ._.
4_LS ._.
DATA_NNP DRIVER_NNP The_DT data_NNS driver_NN is_VBZ the_DT central_JJ component_NN of_IN GlobeDB_NN ._.
It_PRP is_VBZ in_IN charge_NN of_IN locating_VBG the_DT data_NNS units_NNS required_VBN by_IN
assess_VB the_DT goodness_NN of_IN its_PRP$ placement_NN decisions_NNS ._.
5.1_CD Clustering_NN As_IN we_PRP mentioned_VBD earlier_RBR ,_, in_FW GlobeDB_FW ,_, data_NNS units_NNS with_IN similar_JJ access_NN patterns_NNS are_VBP clustered_VBN together_RB ._.
A_DT similar_JJ problem_NN was_VBD addressed_VBN in_IN =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: in_IN the_DT context_NN of_IN clustering_NN static_JJ Web_NN pages_NNS to_TO reduce_VB the_DT overhead_NN in_IN handling_VBG replicas_NNS for_IN each_DT Web_NN page_NN ._.
The_DT authors_NNS propose_VBP several_JJ spatial_JJ clustering_NN algorithms_NNS to_TO group_NN pages_NNS into_IN clusters_NNS and_CC
nsible_JJ for_IN functional_JJ aspects_NNS such_JJ as_IN location_NN of_IN replicated_VBN data_NNS ._.
sincurring_VBG wide-area_JJ latency_NN ._.
Each_DT client_NN is_VBZ assumed_VBN to_TO be_VB redirected_VBN to_TO its_PRP$ closest_JJS edge_NN server_NN using_VBG enhanced_VBN DNS-based_JJ redirection_NN =_JJ -_: =[_NN 12_CD ,_, 14_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Furthermore_RB ,_, for_IN each_DT session_NN ,_, a_DT client_NN is_VBZ assumed_VBN to_TO be_VB served_VBN by_IN only_RB one_CD Web_NN server_NN ._.
When_WRB a_DT client_NN issues_NNS an_DT HTTP_NN request_NN to_TO a_DT Web_NN server_NN ,_, the_DT request_NN is_VBZ forwarded_VBN to_TO the_DT application_NN code_NN -LRB-_-LRB- e.g._FW ,_,
ient_NN ._.
To_TO speed_VB up_RP the_DT access_NN ,_, traditional_JJ CDNs_NNS use_VBP techniques_NNS such_JJ as_IN fragment_NN caching_NN whereby_WRB the_DT static_JJ fragments_NNS -LRB-_-LRB- and_CC sometimes_RB also_RB certain_JJ dynamic_JJ parts_NNS -RRB-_-RRB- of_IN a_DT page_NN are_VBP cached_VBN at_IN the_DT edge_NN servers_NNS =_JJ -_: =[_NN 13_CD ,_, 23_CD ,_, 9_CD ,_, 18_CD ,_, 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, this_DT solution_NN assumes_VBZ that_IN temporal_JJ locality_NN of_IN requests_NNS is_VBZ high_JJ and_CC database_NN updates_NNS are_VBP infrequent_JJ ._.
Applications_NNS that_WDT do_VBP not_RB meet_VB these_DT assumptions_NNS require_VBP different_JJ solutions_NNS than_IN fragme_NN
bute_VB the_DT data_NNS and_CC code_NN among_IN various_JJ servers_NNS around_IN the_DT Internet_NN ._.
Not_RB only_RB is_VBZ this_DT a_DT difficult_JJ and_CC time-consuming_JJ process_NN ,_, it_PRP is_VBZ also_RB not_RB very_RB feasible_JJ when_WRB usage_NN and_CC access_NN patterns_NNS change_VBP over_IN time_NN =_JJ -_: =[_NN 24_CD -RRB-_-RRB- -_: =_SYM -_: ._.
In_IN addition_NN ,_, consistency_NN in_IN these_DT systems_NNS tends_VBZ to_TO be_VB ad-hoc_JJ and_CC largely_RB application-dependent_JJ ._.
In_IN this_DT paper_NN we_PRP propose_VBP GlobeDB_NN ,_, a_DT system_NN for_IN hosting_VBG Web_NN applications_NNS ,_, which_WDT handles_VBZ distribution_NN an_DT
st_NN and_CC propagates_VBZ the_DT result_NN to_TO the_DT replicas_NNS ._.
Note_VB that_IN this_DT model_NN is_VBZ sometimes_RB called_VBN eventual_JJ consistency_NN ._.
If_IN stronger_JJR consistency_NN is_VBZ needed_VBN ,_, then_RB models_NNS such_JJ as_IN session_NN guarantees_NNS can_MD be_VB envisaged_VBN =_JJ -_: =[_NN 29_CD -RRB-_-RRB- -_: =_SYM -_: ._.
mprovement_NN in_IN comparison_NN to_TO simple_JJ or_CC non-replicated_JJ approaches_NNS ._.
As_IN such_JJ ,_, our_PRP$ work_NN improves_VBZ upon_IN other_JJ research_NN demonstrating_VBG that_IN application-specific_JJ replication_NN improves_VBZ performance_NN as_RB well_RB -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 15_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
In_IN particular_JJ ,_, we_PRP argue_VBP that_IN there_EX is_VBZ often_RB no_DT compelling_JJ reason_NN to_TO adapt_VB the_DT logical_JJ design_NN of_IN an_DT application_NN in_IN order_NN to_TO support_VB replication_NN ._.
By_IN automatically_RB partitioning_VBG and_CC replicating_VBG an_DT appl_NN
ient_NN ._.
To_TO speed_VB up_RP the_DT access_NN ,_, traditional_JJ CDNs_NNS use_VBP techniques_NNS such_JJ as_IN fragment_NN caching_NN whereby_WRB the_DT static_JJ fragments_NNS -LRB-_-LRB- and_CC sometimes_RB also_RB certain_JJ dynamic_JJ parts_NNS -RRB-_-RRB- of_IN a_DT page_NN are_VBP cached_VBN at_IN the_DT edge_NN servers_NNS =_JJ -_: =[_NN 13_CD ,_, 23_CD ,_, 9_CD ,_, 18_CD ,_, 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, this_DT solution_NN assumes_VBZ that_IN temporal_JJ locality_NN of_IN requests_NNS is_VBZ high_JJ and_CC database_NN updates_NNS are_VBP infrequent_JJ ._.
Applications_NNS that_WDT do_VBP not_RB meet_VB these_DT assumptions_NNS require_VBP different_JJ solutions_NNS than_IN fragme_NN
A_DT naive_JJ design_NN of_IN the_DT cluster-membership_NN table_NN can_MD be_VB a_DT scalability_NN bottleneck_NN ._.
In_IN our_PRP$ initial_JJ implementation_NN ,_, we_PRP used_VBD bit_NN arrays_NNS for_IN numerical_JJ primary_JJ key_JJ IDs_NNS and_CC bloom_NN filters_NNS for_IN non-numerical_JJ IDs_NNS =_JJ -_: =[_NN 5_CD -RRB-_-RRB- -_: =_SYM -_: ._.
A_DT typical_JJ bit-array_JJ based_JJ cluster_NN membership_NN table_NN will_MD have_VB a_DT size_NN of_IN only_RB 125_CD Kbits_NNS for_IN each_DT cluster_NN to_TO represent_VB a_DT databaseswith_NN a_DT million_CD data_NN units_NNS ._.
Such_JJ a_DT small_JJ size_NN allows_VBZ the_DT table_NN to_TO reside_VB
lications_NNS issue_VBP a_DT majority_NN of_IN simple_JJ queries_NNS ._.
To_TO get_VB an_DT idea_NN of_IN the_DT percentage_NN of_IN simple_JJ queries_NNS used_VBN on_IN real_JJ e-commerce_NN applications_NNS ,_, we_PRP examined_VBD the_DT TPC-W_NN benchmark_NN which_WDT models_NNS a_DT digital_JJ bookstore_NN =_JJ -_: =[_NN 27_CD -RRB-_-RRB- -_: =_SYM -_: ._.
We_PRP collected_VBD the_DT SQL_NNP traces_NNS generated_VBN by_IN execution_NN of_IN the_DT benchmark_NN 's_POS ordering_VBG mix_NN workload_NN -LRB-_-LRB- 1_CD -RRB-_-RRB- ._.
We_PRP analyzed_VBD the_DT accesses_NNS to_TO the_DT book_NN tables_NNS -LRB-_-LRB- which_WDT contains_VBZ the_DT records_NNS pertaining_VBG information_NN about_IN
nstrated_VBN that_IN such_JJ an_DT awareness_NN need_MD not_RB be_VB required_VBN ,_, as_IN distribution_NN of_IN data_NNS can_MD be_VB handled_VBN automatically_RB ._.
Recently_RB ,_, database_NN researchers_NNS have_VBP built_VBN middleware_JJ systems_NNS such_JJ as_IN C-JDBC_NN -LRB-_-LRB- 8_CD -RRB-_-RRB- and_CC Ganymed_NN =_JJ -_: =[_NN 21_CD -RRB-_-RRB- -_: =_SYM -_: for_IN scalable_JJ replication_NN of_IN a_DT database_NN in_IN a_DT cluster_NN of_IN servers_NNS ._.
However_RB ,_, the_DT focus_NN of_IN these_DT works_NNS is_VBZ to_TO improve_VB the_DT throughput_NN of_IN the_DT underlying_VBG backend_NN database_NN within_IN a_DT cluster_NN environment_NN ,_, while_IN t_NN
ient_NN ._.
To_TO speed_VB up_RP the_DT access_NN ,_, traditional_JJ CDNs_NNS use_VBP techniques_NNS such_JJ as_IN fragment_NN caching_NN whereby_WRB the_DT static_JJ fragments_NNS -LRB-_-LRB- and_CC sometimes_RB also_RB certain_JJ dynamic_JJ parts_NNS -RRB-_-RRB- of_IN a_DT page_NN are_VBP cached_VBN at_IN the_DT edge_NN servers_NNS =_JJ -_: =[_NN 13_CD ,_, 23_CD ,_, 9_CD ,_, 18_CD ,_, 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, this_DT solution_NN assumes_VBZ that_IN temporal_JJ locality_NN of_IN requests_NNS is_VBZ high_JJ and_CC database_NN updates_NNS are_VBP infrequent_JJ ._.
Applications_NNS that_WDT do_VBP not_RB meet_VB these_DT assumptions_NNS require_VBP different_JJ solutions_NNS than_IN fragme_NN
owed_VBN that_IN the_DT optimal_JJ replication_NN performance_NN in_IN terms_NNS of_IN both_CC client-perceived_JJ latency_NN and_CC update_VB bandwidth_NN can_MD be_VB achieved_VBN if_IN each_DT Web_NN page_NN is_VBZ replicated_VBN according_VBG to_TO its_PRP$ individual_JJ access_NN patterns_NNS =_JJ -_: =[_NN 20_CD -RRB-_-RRB- -_: =_SYM -_: ._.
A_DT naive_JJ transposition_NN of_IN this_DT result_NN would_MD lead_VB to_TO replicating_VBG each_DT database_NN record_NN individually_RB ._.
However_RB ,_, such_JJ fine-grained_JJ replication_NN can_MD result_VB in_IN significant_JJ overhead_NN as_IN the_DT system_NN must_MD maintai_VB
ient_NN ._.
To_TO speed_VB up_RP the_DT access_NN ,_, traditional_JJ CDNs_NNS use_VBP techniques_NNS such_JJ as_IN fragment_NN caching_NN whereby_WRB the_DT static_JJ fragments_NNS -LRB-_-LRB- and_CC sometimes_RB also_RB certain_JJ dynamic_JJ parts_NNS -RRB-_-RRB- of_IN a_DT page_NN are_VBP cached_VBN at_IN the_DT edge_NN servers_NNS =_JJ -_: =[_NN 13_CD ,_, 23_CD ,_, 9_CD ,_, 18_CD ,_, 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, this_DT solution_NN assumes_VBZ that_IN temporal_JJ locality_NN of_IN requests_NNS is_VBZ high_JJ and_CC database_NN updates_NNS are_VBP infrequent_JJ ._.
Applications_NNS that_WDT do_VBP not_RB meet_VB these_DT assumptions_NNS require_VBP different_JJ solutions_NNS than_IN fragme_NN
s_NN from_IN uniform_JJ popularity_NN -LRB-_-LRB- all_DT clients_NNS are_VBP interested_JJ in_IN all_DT data_NNS -RRB-_-RRB- to_TO very_RB skewed_JJ popularity_NN -LRB-_-LRB- only_RB a_DT small_JJ set_NN of_IN clients_NNS are_VBP interested_JJ in_IN a_DT particular_JJ piece_NN of_IN data_NNS -RRB-_-RRB- using_VBG statistical_JJ distributions_NNS =_JJ -_: =[_NN 25_CD -RRB-_-RRB- -_: =_SYM -_: ._.
We_PRP found_VBD that_IN our_PRP$ techniques_NNS perform_VBP well_RB in_IN all_DT cases_NNS compared_VBN to_TO traditional_JJ fully_RB replicated_VBN and_CC centralized_VBN systems_NNS ._.
Hence_RB ,_, in_IN this_DT experiment_NN we_PRP restrict_VBP our_PRP$ evaluations_NNS to_TO only_RB the_DT workload_NN de_IN
duced_VBN as_IN each_DT request_NN need_MD not_RB travel_VB across_IN a_DT wide-area_JJ network_NN ._.
Typically_RB ,_, edge_NN servers_NNS store_VBP static_JJ Web_NN pages_NNS and_CC a_DT plethora_NN of_IN techniques_NNS and_CC commercial_JJ systems_NNS exist_VBP for_IN replicating_VBG static_JJ pages_NNS =_JJ -_: =[_NN 26_CD -RRB-_-RRB- -_: =_SYM -_: ._.
In_IN practice_NN ,_, however_RB ,_, a_DT large_JJ amount_NN of_IN Web_NN content_NN is_VBZ generated_VBN dynamically_RB ._.
These_DT pages_NNS are_VBP generated_VBN upon_IN request_NN using_VBG Web_NN applications_NNS that_WDT take_VBP ,_, e.g._FW ,_, individual_JJ user_NN profiles_NNS and_CC request_NN para_NN
plicated_VBN system_NN have_VBP similar_JJ goals_NNS ,_, the_DT former_JJ yields_NNS better_RBR WIRT_NNP as_IN it_PRP is_VBZ able_JJ to_TO perform_VB local_JJ updates_NNS ._.
8_CD ._.
RELATED_NNS WORK_VBP A_DT number_NN of_IN systems_NNS have_VBP been_VBN developed_VBN to_TO handle_VB Web_NN application_NN replication_NN =_JJ -_: =[_NN 4_CD ,_, 7_CD ,_, 22_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT systems_NNS replicate_VBP code_NN at_IN thesreplica_NN servers_NNS ,_, but_CC either_CC do_VBP not_RB replicate_VB the_DT application_NN data_NNS or_CC cache_NN them_PRP at_IN the_DT replica_NN servers_NNS ._.
Furthermore_RB ,_, all_PDT these_DT systems_NNS also_RB rely_VBP on_IN manual_JJ adminis_NNS
ient_NN ._.
To_TO speed_VB up_RP the_DT access_NN ,_, traditional_JJ CDNs_NNS use_VBP techniques_NNS such_JJ as_IN fragment_NN caching_NN whereby_WRB the_DT static_JJ fragments_NNS -LRB-_-LRB- and_CC sometimes_RB also_RB certain_JJ dynamic_JJ parts_NNS -RRB-_-RRB- of_IN a_DT page_NN are_VBP cached_VBN at_IN the_DT edge_NN servers_NNS =_JJ -_: =[_NN 13_CD ,_, 23_CD ,_, 9_CD ,_, 18_CD ,_, 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, this_DT solution_NN assumes_VBZ that_IN temporal_JJ locality_NN of_IN requests_NNS is_VBZ high_JJ and_CC database_NN updates_NNS are_VBP infrequent_JJ ._.
Applications_NNS that_WDT do_VBP not_RB meet_VB these_DT assumptions_NNS require_VBP different_JJ solutions_NNS than_IN fragme_NN
t_NN this_DT can_MD be_VB tolerated_VBN by_IN the_DT application_NN as_IN each_DT client_NN session_NN is_VBZ handled_VBN by_IN only_RB one_CD edge_NN server_NN in_IN the_DT network_NN ._.
Note_VB that_IN even_RB existing_VBG solutions_NNS over_IN commercial_JJ database_NN systems_NNS such_JJ as_IN DBCache_NN =_JJ -_: =[_NN 6_CD -RRB-_-RRB- -_: =_JJ -_: and_CC MTCache_NN -LRB-_-LRB- 17_CD -RRB-_-RRB- face_VBP similar_JJ issues_NNS and_CC guarantee_VB the_DT same_JJ level_NN of_IN consistency_NN as_IN GlobeDB_NN ._.
4_LS ._.
DATA_NNP DRIVER_NNP The_DT data_NNS driver_NN is_VBZ the_DT central_JJ component_NN of_IN GlobeDB_NN ._.
It_PRP is_VBZ in_IN charge_NN of_IN locating_VBG the_DT data_NNS u_NN
oreover_JJR ,_, we_PRP demonstrated_VBD that_IN such_PDT an_DT awareness_NN need_MD not_RB be_VB required_VBN ,_, as_IN distribution_NN of_IN data_NNS can_MD be_VB handled_VBN automatically_RB ._.
Recently_RB ,_, database_NN researchers_NNS have_VBP built_VBN middleware_JJ systems_NNS such_JJ as_IN C-JDBC_NN =_JJ -_: =[_NN 8_CD -RRB-_-RRB- -_: =_JJ -_: and_CC Ganymed_NNP -LRB-_-LRB- 21_CD -RRB-_-RRB- for_IN scalable_JJ replication_NN of_IN a_DT database_NN in_IN a_DT cluster_NN of_IN servers_NNS ._.
However_RB ,_, the_DT focus_NN of_IN these_DT works_NNS is_VBZ to_TO improve_VB the_DT throughput_NN of_IN the_DT underlying_VBG backend_NN database_NN within_IN a_DT cluster_NN env_NN
sistency_NN ._.
The_DT system_NN must_MD also_RB handle_VB concurrent_JJ updates_NNS to_TO a_DT data_NN unit_NN emerging_VBG from_IN multiple_JJ servers_NNS ._.
Traditional_JJ non-replicated_JJ DBMSs_NNS perform_VBP concurrency_NN control_NN using_VBG locks_NNS or_CC multiversion_JJ models_NNS =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =_SYM -_: ._.
For_IN this_DT ,_, a_DT database_NN requires_VBZ an_DT explicit_JJ definition_NN of_IN transaction_NN ,_, which_WDT contains_VBZ a_DT sequence_NN of_IN read\/write_NN operations_NNS tosa_NN database_NN ._.
For_IN example_NN ,_, PostgreSQL_NN uses_VBZ a_DT variant_NN of_IN multiversion_NN model_NN ca_MD
plicated_VBN system_NN have_VBP similar_JJ goals_NNS ,_, the_DT former_JJ yields_NNS better_RBR WIRT_NNP as_IN it_PRP is_VBZ able_JJ to_TO perform_VB local_JJ updates_NNS ._.
8_CD ._.
RELATED_NNS WORK_VBP A_DT number_NN of_IN systems_NNS have_VBP been_VBN developed_VBN to_TO handle_VB Web_NN application_NN replication_NN =_JJ -_: =[_NN 4_CD ,_, 7_CD ,_, 22_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT systems_NNS replicate_VBP code_NN at_IN thesreplica_NN servers_NNS ,_, but_CC either_CC do_VBP not_RB replicate_VB the_DT application_NN data_NNS or_CC cache_NN them_PRP at_IN the_DT replica_NN servers_NNS ._.
Furthermore_RB ,_, all_PDT these_DT systems_NNS also_RB rely_VBP on_IN manual_JJ adminis_NNS
