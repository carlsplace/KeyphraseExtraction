Learning_NNP to_TO detect_VB malicious_JJ executables_NNS in_IN the_DT wild_JJ
In_IN this_DT paper_NN ,_, we_PRP describe_VBP the_DT development_NN of_IN a_DT fielded_VBN application_NN for_IN detecting_VBG malicious_JJ executables_NNS in_IN the_DT wild_JJ ._.
We_PRP gathered_VBD 1971_CD benign_JJ and_CC 1651_CD malicious_JJ executables_NNS and_CC encoded_VBN each_DT as_IN a_DT training_NN example_NN using_VBG n-grams_NN of_IN byte_NN codes_NNS as_IN features_NNS ._.
Such_JJ processing_NN resulted_VBD in_IN more_JJR than_IN 255_CD million_CD distinct_JJ n-grams_NN ._.
After_IN selecting_VBG the_DT most_RBS relevant_JJ n-grams_NN for_IN prediction_NN ,_, we_PRP evaluated_VBD a_DT variety_NN of_IN inductive_JJ methods_NNS ,_, including_VBG naive_JJ Bayes_NNS ,_, decision_NN trees_NNS ,_, support_NN vector_NN machines_NNS ,_, and_CC boosting_VBG ._.
Ultimately_RB ,_, boosted_VBD decision_NN trees_NNS outperformed_VBD other_JJ methods_NNS with_IN an_DT area_NN under_IN the_DT roc_NN curve_NN of_IN 0.996_CD ._.
Results_NNS also_RB suggest_VBP that_IN our_PRP$ methodology_NN will_MD scale_VB to_TO larger_JJR collections_NNS of_IN executables_NNS ._.
To_TO the_DT best_JJS of_IN our_PRP$ knowledge_NN ,_, ours_PRP is_VBZ the_DT only_RB fielded_VBN application_NN for_IN this_DT task_NN developed_VBD using_VBG techniques_NNS from_IN machine_NN learning_NN and_CC data_NN mining_NN ._.
e_LS disputed_JJ Federalist_NNP Papers_NNP ,_, Hamilton_NNP or_CC Madison_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- ._.
Recently_RB ,_, similar_JJ techniques_NNS have_VBP been_VBN used_VBN in_IN the_DT relatively_RB new_JJ field_NN of_IN software_NN forensics_NNS to_TO determine_VB program_NN authorship_NN -LRB-_-LRB- 39_CD -RRB-_-RRB- ._.
Gray_NNP et_FW al._FW =_SYM -_: =[_NN 15_CD -RRB-_-RRB- -_: =_SYM -_: wrote_VBD a_DT position_NN paper_NN on_IN the_DT subject_NN of_IN authorship_NN ,_, whereas_IN Krsul_NNP -LRB-_-LRB- 23_CD -RRB-_-RRB- conducted_VBD an_DT empirical_JJ study_NN by_IN gathering_VBG code_NN from_IN programmers_NNS of_IN varying_VBG skill_NN ,_, extracting_VBG software_NN metrics_NNS ,_, and_CC determining_VBG
sionally_RB could_MD not_RB fit_VB an_DT roc_NN curve_NN to_TO a_DT method_NN 's_POS ratings_NNS from_IN a_DT single_JJ fold_NN of_IN crossvalidation_NN -LRB-_-LRB- i.e._FW ,_, the_DT ratings_NNS were_VBD degenerate_JJ -RRB-_-RRB- ._.
We_PRP also_RB considered_VBD producing_VBG roc_FW convex_FW hulls_NNS -LRB-_-LRB- 34_CD -RRB-_-RRB- and_CC cost_NN curves_NNS =_JJ -_: =[_NN 11_CD -RRB-_-RRB- -_: =_JJ -_: ,_, but_CC determined_VBD that_IN traditional_JJ roc_NN analysis_NN was_VBD appropriate_JJ for_IN our_PRP$ results_NNS -LRB-_-LRB- e.g._FW ,_, the_DT curve_NN for_IN boosted_VBN j48_NN dominated_VBD all_DT other_JJ curves_NNS -RRB-_-RRB- ._.
In_IN our_PRP$ study_NN ,_, there_EX was_VBD an_DT issue_NN of_IN high_JJ computational_JJ over_IN
use_NN labroc4_NN -LRB-_-LRB- 28_CD -RRB-_-RRB- occasionally_RB could_MD not_RB fit_VB an_DT roc_NN curve_NN to_TO a_DT method_NN 's_POS ratings_NNS from_IN a_DT single_JJ fold_NN of_IN crossvalidation_NN -LRB-_-LRB- i.e._FW ,_, the_DT ratings_NNS were_VBD degenerate_JJ -RRB-_-RRB- ._.
We_PRP also_RB considered_VBD producing_VBG roc_FW convex_FW hulls_NNS =_JJ -_: =[_NN 34_CD -RRB-_-RRB- -_: =_JJ -_: and_CC cost_NN curves_NNS -LRB-_-LRB- 11_CD -RRB-_-RRB- ,_, but_CC determined_VBD that_IN traditional_JJ roc_NN analysis_NN was_VBD appropriate_JJ for_IN our_PRP$ results_NNS -LRB-_-LRB- e.g._FW ,_, the_DT curve_NN for_IN boosted_VBN j48_NN dominated_VBD all_DT other_JJ curves_NNS -RRB-_-RRB- ._.
In_IN our_PRP$ study_NN ,_, there_EX was_VBD an_DT issue_NN of_IN hi_UH
s_NN in_IN the_DT field_NN of_IN authorship_NN are_VBP the_DT efforts_NNS to_TO determine_VB whether_IN Sir_NNP Frances_NNP Bacon_NNP wrote_VBD works_NNS attributed_VBN to_TO Shakespeare_NNP -LRB-_-LRB- 13_CD -RRB-_-RRB- ,_, or_CC who_WP wrote_VBD the_DT twelve_CD disputed_JJ Federalist_NNP Papers_NNP ,_, Hamilton_NNP or_CC Madison_NNP =_SYM -_: =[_NN 22_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Recently_RB ,_, similar_JJ techniques_NNS have_VBP been_VBN used_VBN in_IN the_DT relatively_RB new_JJ field_NN of_IN software_NN forensics_NNS to_TO determine_VB program_NN authorship_NN -LRB-_-LRB- 39_CD -RRB-_-RRB- ._.
Gray_NNP et_FW al._FW -LRB-_-LRB- 15_CD -RRB-_-RRB- wrote_VBD a_DT position_NN paper_NN on_IN the_DT subject_NN of_IN authorsh_NN
ho_NN wrote_VBD the_DT twelve_CD disputed_JJ Federalist_NNP Papers_NNP ,_, Hamilton_NNP or_CC Madison_NNP -LRB-_-LRB- 22_CD -RRB-_-RRB- ._.
Recently_RB ,_, similar_JJ techniques_NNS have_VBP been_VBN used_VBN in_IN the_DT relatively_RB new_JJ field_NN of_IN software_NN forensics_NNS to_TO determine_VB program_NN authorship_NN =_JJ -_: =[_NN 39_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Gray_NNP et_FW al._FW -LRB-_-LRB- 15_CD -RRB-_-RRB- wrote_VBD a_DT position_NN paper_NN on_IN the_DT subject_NN of_IN authorship_NN ,_, whereas_IN Krsul_NNP -LRB-_-LRB- 23_CD -RRB-_-RRB- conducted_VBD an_DT empirical_JJ study_NN by_IN gathering_VBG code_NN from_IN programmers_NNS of_IN varying_VBG skill_NN ,_, extracting_VBG software_NN metrics_NNS
ild_NN node_NN ._.
This_DT process_NN repeats_VBZ recursively_RB until_IN a_DT node_NN contains_VBZ examples_NNS of_IN the_DT same_JJ class_NN ,_, at_IN which_WDT point_NN ,_, it_PRP stores_VBZ the_DT class_NN label_NN ._.
Most_JJS implementations_NNS use_VBP the_DT gain_NN ratio_NN for_IN attribute_NN selection_NN =_JJ -_: =[_NN 35_CD -RRB-_-RRB- -_: =_JJ -_: ,_, a_DT measure_NN based_VBN on_IN the_DT information_NN gain_NN ._.
In_IN an_DT effort_NN to_TO reduce_VB overtraining_NN ,_, most_JJS implementations_NNS also_RB prune_VBP induced_VBN decision_NN trees_NNS by_IN removing_VBG subtrees_NNS that_WDT are_VBP likely_JJ to_TO perform_VB poorly_RB on_IN test_NN da_NN
r_NN techniques_NNS have_VBP been_VBN used_VBN in_IN the_DT relatively_RB new_JJ field_NN of_IN software_NN forensics_NNS to_TO determine_VB program_NN authorship_NN -LRB-_-LRB- 39_CD -RRB-_-RRB- ._.
Gray_NNP et_FW al._FW -LRB-_-LRB- 15_CD -RRB-_-RRB- wrote_VBD a_DT position_NN paper_NN on_IN the_DT subject_NN of_IN authorship_NN ,_, whereas_IN Krsul_NN =_JJ -_: =[_NN 23_CD -RRB-_-RRB- -_: =_SYM -_: conducted_VBD an_DT empirical_JJ study_NN by_IN gathering_VBG code_NN from_IN programmers_NNS of_IN varying_VBG skill_NN ,_, extracting_VBG software_NN metrics_NNS ,_, and_CC determining_VBG authorship_NN using_VBG discriminant_JJ analysis_NN ._.
There_EX are_VBP also_RB relevant_JJ results_NNS
lowing_VBG discussion_NN ,_, we_PRP will_MD refer_VB to_TO this_DT method_NN as_IN the_DT tfidf_NN classifier_NN ._.
4.3_CD Naive_JJ Bayes_NNS Naive_JJ Bayes_NNP is_VBZ a_DT probabilistic_JJ method_NN that_WDT has_VBZ a_DT long_JJ history_NN in_IN information_NN retrieval_NN and_CC text_NN classification_NN =_JJ -_: =[_NN 26_CD -RRB-_-RRB- -_: =_SYM -_: ._.
It_PRP stores_VBZ as_IN its_PRP$ concept_NN description_NN the_DT prior_JJ probability_NN of_IN each_DT class_NN ,_, P_NN -LRB-_-LRB- Ci_NN -RRB-_-RRB- ,_, and_CC the_DT conditional_JJ probability_NN of_IN each_DT attribute_NN value_NN given_VBN the_DT class_NN ,_, P_NN -LRB-_-LRB- vj_FW |_FW Ci_FW -RRB-_-RRB- ._.
It_PRP estimates_VBZ these_DT quantities_NNS by_IN
d_NN ''_'' the_DT last_JJ three_CD of_IN these_DT learners_NNS ,_, and_CC we_PRP discuss_VBP each_DT of_IN these_DT methods_NNS in_IN the_DT following_JJ sections_NNS ._.
4.1_CD Instance-based_JJ Learner_NNP One_CD of_IN the_DT simplest_JJS learning_NN methods_NNS is_VBZ the_DT instance-based_JJ -LRB-_-LRB- ib_NN -RRB-_-RRB- learner_NN =_JJ -_: =[_NN 1_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Its_PRP$ concept_NN description_NN is_VBZ a_DT collection_NN of_IN training_NN examples_NNS or_CC instances_NNS ._.
Learning_NNP ,_, therefore_RB ,_, is_VBZ the_DT addition_NN of_IN new_JJ examples_NNS to_TO the_DT collection_NN ._.
To_TO classify_VB an_DT unknown_JJ instance_NN ,_, the_DT performance_NN el_NN
r_NN naive_JJ Bayes_NNS were_VBD poor_JJ in_IN comparison_NN to_TO theirs_JJ ._.
We_PRP again_RB attribute_VBP this_DT to_TO the_DT differences_NNS in_IN data_NN extraction_NN methods_NNS ._.
Naive_JJ Bayes_NNS is_VBZ well_RB known_VBN to_TO be_VB sensitive_JJ to_TO conditionally_RB dependent_JJ attributes_NNS =_JJ -_: =[_NN 10_CD -RRB-_-RRB- -_: =_SYM -_: ._.
We_PRP used_VBD overlapping_VBG byte_NN sequences_NNS as_IN attributes_NNS ,_, so_IN there_EX were_VBD many_JJ that_WDT were_VBD conditionally_RB dependent_JJ ._.
Indeed_RB ,_, after_IN analyzing_VBG decision_NN trees_NNS produced_VBN by_IN j48_NN ,_, we_PRP found_VBD evidence_NN that_IN overlapping_VBG seq_NN
w_NN or_CC unknown_JJ viruses_NNS ,_, and_CC more_RBR generally_RB ,_, malicious_JJ code_NN ._.
Our_PRP$ efforts_NNS to_TO address_VB this_DT problem_NN have_VBP resulted_VBN in_IN a_DT fielded_VBN application_NN ,_, built_VBN using_VBG techniques_NNS from_IN machine_NN learning_NN -LRB-_-LRB- 30_CD -RRB-_-RRB- and_CC data_NN mining_NN =_JJ -_: =[_NN 17_CD -RRB-_-RRB- -_: =_SYM -_: ._.
The_DT Malicious_JJ Executable_JJ Classification_NN System_NN -LRB-_-LRB- mecs_NNS -RRB-_-RRB- currently_RB detects_VBZ unknown_JJ malicious_JJ executables_NNS ``_`` in_IN the_DT wild_JJ ''_'' ,_, that_DT is_VBZ ,_, without_IN removing_VBG any_DT obfuscation_NN ._.
To_TO date_NN ,_, we_PRP have_VBP gathered_VBN 1971_CD system_NN
ification_NN ,_, which_WDT we_PRP discuss_VBP further_RBR in_IN the_DT next_JJ section_NN ._.
4_LS ._.
CLASSIFICATION_NN METHODOLOGY_NN Our_PRP$ overall_JJ approach_NN drew_VBD techniques_NNS from_IN information_NN retrieval_NN -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 16_CD -RRB-_-RRB- -RRB-_-RRB- and_CC from_IN text_NN classification_NN -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 12_CD ,_, 36_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
We_PRP used_VBD the_DT n-grams_NN extracted_VBN from_IN the_DT executables_NNS to_TO form_VB training_NN examples_NNS by_IN viewing_VBG each_DT n-gram_NN as_IN a_DT binary_JJ attribute_NN that_WDT is_VBZ either_RB present_JJ in_IN -LRB-_-LRB- i.e._FW ,_, 1_LS -RRB-_-RRB- or_CC absent_JJ from_IN -LRB-_-LRB- i.e._FW ,_, 0_CD -RRB-_-RRB- the_DT executable_JJ
d_NN boosted_VBD decision_NN trees_NNS ._.
In_IN this_DT domain_NN ,_, there_EX is_VBZ an_DT issue_NN of_IN unequal_JJ but_CC unknown_JJ costs_NNS of_IN misclassification_NN error_NN ,_, so_IN we_PRP evaluated_VBD the_DT methods_NNS using_VBG receiver_NN operating_NN characteristic_NN -LRB-_-LRB- roc_NN -RRB-_-RRB- analysis_NN =_JJ -_: =[_NN 40_CD -RRB-_-RRB- -_: =_JJ -_: ,_, using_VBG area_NN under_IN the_DT roc_NN curve_NN as_IN the_DT performance_NN metric_NN ._.
Ultimately_RB ,_, boosted_VBD decision_NN trees_NNS outperformed_VBD all_DT other_JJ methods_NNS with_IN an_DT area_NN under_IN the_DT curve_NN of_IN 0.996_CD ._.
We_PRP delivered_VBD mecs_NNS to_TO the_DT mitre_JJ Corp_NNP
arying_VBG skill_NN ,_, extracting_VBG software_NN metrics_NNS ,_, and_CC determining_VBG authorship_NN using_VBG discriminant_JJ analysis_NN ._.
There_EX are_VBP also_RB relevant_JJ results_NNS published_VBN in_IN the_DT literature_NN pertaining_VBG to_TO the_DT plagiarism_NN of_IN programs_NNS =_JJ -_: =[_NN 2_CD ,_, 19_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT we_PRP will_MD not_RB survey_VB here_RB ._.
Krsul_NN -LRB-_-LRB- 23_CD -RRB-_-RRB- collected_VBD 88_CD programs_NNS written_VBN in_IN the_DT c_NN programming_NN language_NN from_IN 29_CD programmers_NNS at_IN the_DT undergraduate_NN ,_, graduate_NN ,_, and_CC faculty_NN levels_NNS ._.
He_PRP then_RB extracted_VBD 18_CD lay_VBD
we_PRP used_VBD the_DT posterior_JJ probability_NN of_IN the_DT negative_JJ class_NN as_IN the_DT case_NN rating_NN ._.
4.4_CD Support_NN Vector_NNP Machines_NNP Support_NN vector_NN machines_NNS -LRB-_-LRB- svms_NNS -RRB-_-RRB- -LRB-_-LRB- 5_CD -RRB-_-RRB- have_VBP performed_VBN well_RB on_IN traditional_JJ text_NN classification_NN tasks_NNS =_JJ -_: =[_NN 12_CD ,_, 20_CD ,_, 36_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC performed_VBD well_RB on_IN ours_PRP ._.
The_DT method_NN produces_VBZ a_DT linear_JJ classifier_NN ,_, so_IN its_PRP$ concept_NN description_NN is_VBZ a_DT vector_NN of_IN weights_NNS ,_, w_NN ,_, and_CC an_DT intercept_VB or_CC a_DT threshold_NN ,_, b._NN However_RB ,_, unlike_IN other_JJ linear_JJ classifie_NN
ne_NN performed_VBD exceptionally_RB well_RB given_VBN our_PRP$ current_JJ data_NNS collection_NN ._.
That_IN the_DT boosted_VBN classifiers_NNS generally_RB outperformed_VBD single_JJ classifiers_NNS echos_VBZ the_DT conclusion_NN of_IN several_JJ empirical_JJ studies_NNS of_IN boosting_VBG =_JJ -_: =[_NN 4_CD ,_, 6_CD ,_, 9_CD ,_, 14_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT suggest_VBP that_IN boosting_VBG improves_VBZ the_DT performance_NN of_IN unstable_JJ classifiers_NNS ,_, such_JJ as_IN j48_NN ,_, by_IN reducing_VBG their_PRP$ bias_NN and_CC variancesTrue_NN Positive_JJ Rate_NN True_JJ Positive_JJ Rate_NN 1_CD 0.8_CD 0.6_CD 0.4_CD 0.2_CD 0_CD 0_CD 0.2_CD 0.4_CD 0.6_CD
s_VBZ the_DT case_NN rating_NN ._.
4.6_CD Boosted_NNP Classifiers_NNP Boosting_NNP -LRB-_-LRB- 14_CD -RRB-_-RRB- is_VBZ a_DT method_NN for_IN combining_VBG multiple_JJ classifiers_NNS ._.
Researchers_NNS have_VBP shown_VBN that_IN ensemble_NN methods_NNS often_RB improve_VBP performance_NN over_IN single_JJ classifiers_NNS =_JJ -_: =[_NN 9_CD ,_, 31_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Boosting_VBG produces_VBZ a_DT set_NN of_IN weighted_JJ models_NNS by_IN iteratively_RB learning_VBG a_DT model_NN from_IN a_DT weighted_JJ data_NN set_NN ,_, evaluating_VBG it_PRP ,_, and_CC reweighting_VBG the_DT data_NNS set_NN based_VBN on_IN the_DT model_NN 's_POS performance_NN ._.
During_IN performance_NN ,_,
eneral_RB ,_, meaning_VBG that_IN they_PRP could_MD be_VB applied_VBN to_TO malicious_JJ code_NN for_IN any_DT platform_NN ,_, and_CC presently_RB ,_, malicious_JJ code_NN for_IN the_DT Windows_NNP operating_NN system_NN poses_VBZ the_DT greatest_JJS threat_NN ._.
In_IN an_DT early_JJ attempt_NN ,_, Lo_FW et_FW al._FW =_SYM -_: =[_NN 25_CD -RRB-_-RRB- -_: =_SYM -_: conducted_VBD an_DT analysis_NN of_IN several_JJ programs_NNS --_: evidently_RB by_IN hand_NN --_: and_CC identified_VBN tell-tale_NN signs_NNS ,_, which_WDT they_PRP subsequently_RB used_VBD to_TO filter_NN new_JJ programs_NNS ._.
While_IN we_PRP appreciate_VBP their_PRP$ attempt_NN to_TO extract_VB patterns_NNS
t_NN or_CC absent_JJ ._.
After_IN processing_VBG the_DT executables_NNS using_VBG these_DT three_CD methods_NNS ,_, the_DT authors_NNS paired_VBD each_DT extraction_NN method_NN with_IN a_DT single_JJ learning_NN algorithm_NN ._.
Using_VBG five-fold_JJ cross-validation_NN ,_, they_PRP used_VBD ripper_NN =_JJ -_: =[_NN 8_CD -RRB-_-RRB- -_: =_SYM -_: to_TO learn_VB rules_NNS from_IN the_DT training_NN set_NN produced_VBN by_IN binary_JJ profiling_NN ._.
They_PRP used_VBD naive_JJ Bayes_NNP to_TO estimate_VB probabilities_NNS from_IN the_DT training_NN set_NN produced_VBN by_IN the_DT strings_NNS command_NN ._.
Finally_RB ,_, they_PRP used_VBD an_DT ensembl_NN
an_DT implementation_NN of_IN the_DT ubiquitous_JJ c4_NN .5_CD -LRB-_-LRB- 35_CD -RRB-_-RRB- ._.
During_IN performance_NN ,_, j48_NN assigns_VBZ weights_NNS to_TO each_DT class_NN ,_, and_CC we_PRP used_VBD the_DT weight_NN of_IN the_DT negative_JJ class_NN as_IN the_DT case_NN rating_NN ._.
4.6_CD Boosted_JJ Classifiers_NNS Boosting_VBG =_JJ -_: =[_NN 14_CD -RRB-_-RRB- -_: =_JJ -_: is_VBZ a_DT method_NN for_IN combining_VBG multiple_JJ classifiers_NNS ._.
Researchers_NNS have_VBP shown_VBN that_IN ensemble_NN methods_NNS often_RB improve_VBP performance_NN over_IN single_JJ classifiers_NNS -LRB-_-LRB- 9_CD ,_, 31_CD -RRB-_-RRB- ._.
Boosting_VBG produces_VBZ a_DT set_NN of_IN weighted_JJ models_NNS by_IN i_FW
arying_VBG skill_NN ,_, extracting_VBG software_NN metrics_NNS ,_, and_CC determining_VBG authorship_NN using_VBG discriminant_JJ analysis_NN ._.
There_EX are_VBP also_RB relevant_JJ results_NNS published_VBN in_IN the_DT literature_NN pertaining_VBG to_TO the_DT plagiarism_NN of_IN programs_NNS =_JJ -_: =[_NN 2_CD ,_, 19_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT we_PRP will_MD not_RB survey_VB here_RB ._.
Krsul_NN -LRB-_-LRB- 23_CD -RRB-_-RRB- collected_VBD 88_CD programs_NNS written_VBN in_IN the_DT c_NN programming_NN language_NN from_IN 29_CD programmers_NNS at_IN the_DT undergraduate_NN ,_, graduate_NN ,_, and_CC faculty_NN levels_NNS ._.
He_PRP then_RB extracted_VBD 18_CD lay_VBD
binary_JJ file_NN ._.
The_DT authors_NNS formed_VBD training_NN examples_NNS by_IN treating_VBG the_DT strings_NNS as_IN binary_JJ attributes_NNS that_WDT were_VBD either_RB present_JJ in_IN or_CC absent_JJ from_IN a_DT given_VBN executable_JJ ._.
The_DT third_JJ method_NN used_VBD the_DT hexdump_JJ utility_NN =_JJ -_: =[_NN 29_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT is_VBZ similar_JJ to_TO the_DT unix_JJ octal_JJ dump_NN -LRB-_-LRB- od_NN -_: x_LS -RRB-_-RRB- command_NN ._.
This_DT printed_VBD the_DT contents_NNS of_IN the_DT executable_JJ file_NN as_IN a_DT sequence_NN of_IN hexadecimal_JJ numbers_NNS ._.
As_IN with_IN the_DT printable_JJ strings_NNS ,_, the_DT authors_NNS used_VBD two-by_JJ
inimal_JJ optimization_NN -LRB-_-LRB- smo_NN -RRB-_-RRB- is_VBZ a_DT fast_JJ ,_, efficient_JJ algorithm_NN for_IN training_NN svms_NNS -LRB-_-LRB- 32_CD -RRB-_-RRB- and_CC is_VBZ the_DT one_CD implemented_VBN in_FW weka_FW -LRB-_-LRB- 42_CD -RRB-_-RRB- ._.
During_IN performance_NN ,_, this_DT implementation_NN computes_VBZ the_DT probability_NN of_IN each_DT class_NN =_JJ -_: =[_NN 33_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC for_IN roc_NN analysis_NN ,_, we_PRP used_VBD probability_NN of_IN the_DT negative_JJ class_NN as_IN the_DT rating_NN ._.
4.5_CD Decision_NNP Trees_NNP A_NNP decision_NN tree_NN is_VBZ a_DT tree_NN with_IN internal_JJ nodes_NNS corresponding_VBG to_TO attributes_NNS and_CC leaf_NN nodes_NNS correspondi_VBP
etection_NN -LRB-_-LRB- 21_CD -RRB-_-RRB- and_CC have_VBP incorporated_VBN a_DT similar_JJ approach_NN for_IN detecting_VBG boot-sector_JJ viruses_NNS into_IN ibm_NN 's_POS Anti-Virus_JJ software_NN -LRB-_-LRB- 41_CD -RRB-_-RRB- ._.
More_RBR recently_RB ,_, instead_RB of_IN focusing_VBG on_IN boot-sector_JJ viruses_NNS ,_, Schultz_NNP et_FW al._FW =_SYM -_: =[_NN 37_CD -RRB-_-RRB- -_: =_SYM -_: used_VBN data_NNS mining_NN methods_NNS ,_, such_JJ as_IN naive_JJ Bayes_NNP ,_, to_TO detect_VB malicious_JJ code_NN ._.
The_DT authors_NNS collected_VBD 4,301_CD programs_NNS for_IN the_DT Windows_NNP operating_NN system_NN and_CC used_VBD McAfee_NNP Virus_NN Scan_VB to_TO label_VB each_DT as_IN either_DT malic_JJ
ibm_NN 's_POS T.J._NNP Watson_NNP Research_NNP Center_NNP have_VBP investigated_VBN neural_JJ networks_NNS for_IN virus_NN detection_NN -LRB-_-LRB- 21_CD -RRB-_-RRB- and_CC have_VBP incorporated_VBN a_DT similar_JJ approach_NN for_IN detecting_VBG boot-sector_JJ viruses_NNS into_IN ibm_NN 's_POS Anti-Virus_NNP software_NN =_JJ -_: =[_NN 41_CD -RRB-_-RRB- -_: =_SYM -_: ._.
More_RBR recently_RB ,_, instead_RB of_IN focusing_VBG on_IN boot-sector_JJ viruses_NNS ,_, Schultz_NNP et_FW al._FW -LRB-_-LRB- 37_CD -RRB-_-RRB- used_VBD data_NN mining_NN methods_NNS ,_, such_JJ as_IN naive_JJ Bayes_NNP ,_, to_TO detect_VB malicious_JJ code_NN ._.
The_DT authors_NNS collected_VBD 4,301_CD programs_NNS for_IN the_DT W_NN
from_IN information_NN retrieval_NN and_CC text_NN classification_NN ,_, which_WDT we_PRP discuss_VBP further_RBR in_IN the_DT next_JJ section_NN ._.
4_LS ._.
CLASSIFICATION_NN METHODOLOGY_NN Our_PRP$ overall_JJ approach_NN drew_VBD techniques_NNS from_IN information_NN retrieval_NN -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 16_CD -RRB-_-RRB- -_: =--RRB-_NN and_CC from_IN text_NN classification_NN -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 12_CD ,_, 36_CD -RRB-_-RRB- -RRB-_-RRB- ._.
We_PRP used_VBD the_DT n-grams_NN extracted_VBN from_IN the_DT executables_NNS to_TO form_VB training_NN examples_NNS by_IN viewing_VBG each_DT n-gram_NN as_IN a_DT binary_JJ attribute_NN that_WDT is_VBZ either_RB present_JJ in_IN -LRB-_-LRB- i._NN
such_JJ value_NN :_: C_NN =_JJ argmax_NN C_NN i_FW P_NN -LRB-_-LRB- Ci_NN -RRB-_-RRB- Y_NN P_NN -LRB-_-LRB- vj_FW |_FW Ci_FW -RRB-_-RRB- ._.
For_IN roc_NN analysis_NN ,_, we_PRP used_VBD the_DT posterior_JJ probability_NN of_IN the_DT negative_JJ class_NN as_IN the_DT case_NN rating_NN ._.
4.4_CD Support_NN Vector_NNP Machines_NNP Support_NN vector_NN machines_NNS -LRB-_-LRB- svms_NNS -RRB-_-RRB- =_JJ -_: =[_NN 5_CD -RRB-_-RRB- -_: =_SYM -_: have_VBP performed_VBN well_RB on_IN traditional_JJ text_NN classification_NN tasks_NNS -LRB-_-LRB- 12_CD ,_, 20_CD ,_, 36_CD -RRB-_-RRB- ,_, and_CC performed_VBD well_RB on_IN ours_PRP ._.
The_DT method_NN produces_VBZ a_DT linear_JJ classifier_NN ,_, so_IN its_PRP$ concept_NN description_NN is_VBZ a_DT vector_NN of_IN weights_NNS ,_, w_NN ,_,
l_NN information_NN -LRB-_-LRB- 43_CD -RRB-_-RRB- ._.
We_PRP then_RB selected_VBD the_DT top_JJ 500_CD n-grams_NN ,_, a_DT quantity_NN we_PRP determined_VBD through_IN pilot_NN studies_NNS -LRB-_-LRB- see_VB Section_NNP 6.1_CD -RRB-_-RRB- ,_, and_CC applied_VBD several_JJ learning_VBG methods_NNS ,_, most_JJS of_IN which_WDT are_VBP implemented_VBN in_IN weka_NN =_JJ -_: =[_NN 42_CD -RRB-_-RRB- -_: =_JJ -_: :_: ibk_NN ,_, tfidf_NN ,_, naive_JJ Bayes_NNP ,_, a_DT support_NN vector_NN machine_NN -LRB-_-LRB- svm_NN -RRB-_-RRB- ,_, and_CC a_DT decision_NN tree_NN ._.
We_PRP also_RB ``_`` boosted_VBD ''_'' the_DT last_JJ three_CD of_IN these_DT learners_NNS ,_, and_CC we_PRP discuss_VBP each_DT of_IN these_DT methods_NNS in_IN the_DT following_JJ sections_NNS ._.
4.1_CD
ification_NN ,_, which_WDT we_PRP discuss_VBP further_RBR in_IN the_DT next_JJ section_NN ._.
4_LS ._.
CLASSIFICATION_NN METHODOLOGY_NN Our_PRP$ overall_JJ approach_NN drew_VBD techniques_NNS from_IN information_NN retrieval_NN -LRB-_-LRB- e.g._FW ,_, -LRB-_-LRB- 16_CD -RRB-_-RRB- -RRB-_-RRB- and_CC from_IN text_NN classification_NN -LRB-_-LRB- e.g._FW ,_, =_JJ -_: =[_NN 12_CD ,_, 36_CD -RRB-_-RRB- -_: =--RRB-_NN ._.
We_PRP used_VBD the_DT n-grams_NN extracted_VBN from_IN the_DT executables_NNS to_TO form_VB training_NN examples_NNS by_IN viewing_VBG each_DT n-gram_NN as_IN a_DT binary_JJ attribute_NN that_WDT is_VBZ either_RB present_JJ in_IN -LRB-_-LRB- i.e._FW ,_, 1_LS -RRB-_-RRB- or_CC absent_JJ from_IN -LRB-_-LRB- i.e._FW ,_, 0_CD -RRB-_-RRB- the_DT executable_JJ
s_VBZ the_DT case_NN rating_NN ._.
4.6_CD Boosted_NNP Classifiers_NNP Boosting_NNP -LRB-_-LRB- 14_CD -RRB-_-RRB- is_VBZ a_DT method_NN for_IN combining_VBG multiple_JJ classifiers_NNS ._.
Researchers_NNS have_VBP shown_VBN that_IN ensemble_NN methods_NNS often_RB improve_VBP performance_NN over_IN single_JJ classifiers_NNS =_JJ -_: =[_NN 9_CD ,_, 31_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Boosting_VBG produces_VBZ a_DT set_NN of_IN weighted_JJ models_NNS by_IN iteratively_RB learning_VBG a_DT model_NN from_IN a_DT weighted_JJ data_NN set_NN ,_, evaluating_VBG it_PRP ,_, and_CC reweighting_VBG the_DT data_NNS set_NN based_VBN on_IN the_DT model_NN 's_POS performance_NN ._.
During_IN performance_NN ,_,
−_CD b_NN -RRB-_-RRB- 0_CD and_CC predicts_VBZ the_DT negative_JJ class_NN otherwise_RB ._.
Quadratic_JJ programming_NN can_MD be_VB expensive_JJ for_IN large_JJ problems_NNS ,_, but_CC sequential_JJ minimal_JJ optimization_NN -LRB-_-LRB- smo_NN -RRB-_-RRB- is_VBZ a_DT fast_JJ ,_, efficient_JJ algorithm_NN for_IN training_NN svms_NN =_JJ -_: =[_NN 32_CD -RRB-_-RRB- -_: =_JJ -_: and_CC is_VBZ the_DT one_CD implemented_VBN in_FW weka_FW -LRB-_-LRB- 42_CD -RRB-_-RRB- ._.
During_IN performance_NN ,_, this_DT implementation_NN computes_VBZ the_DT probability_NN of_IN each_DT class_NN -LRB-_-LRB- 33_CD -RRB-_-RRB- ,_, and_CC for_IN roc_NN analysis_NN ,_, we_PRP used_VBD probability_NN of_IN the_DT negative_JJ class_NN as_IN the_DT ra_NN
presented_VBN no_DT experimental_JJ results_NNS suggesting_VBG how_WRB general_JJ or_CC extensible_JJ their_PRP$ approach_NN might_MD be_VB ._.
Researchers_NNS at_IN ibm_NN 's_POS T.J._NNP Watson_NNP Research_NNP Center_NNP have_VBP investigated_VBN neural_JJ networks_NNS for_IN virus_NN detection_NN =_JJ -_: =[_NN 21_CD -RRB-_-RRB- -_: =_JJ -_: and_CC have_VBP incorporated_VBN a_DT similar_JJ approach_NN for_IN detecting_VBG boot-sector_JJ viruses_NNS into_IN ibm_NN 's_POS Anti-Virus_JJ software_NN -LRB-_-LRB- 41_CD -RRB-_-RRB- ._.
More_RBR recently_RB ,_, instead_RB of_IN focusing_VBG on_IN boot-sector_JJ viruses_NNS ,_, Schultz_NNP et_FW al._FW -LRB-_-LRB- 37_CD -RRB-_-RRB- used_VBD dat_NN
s_NN and_CC only_RB one_CD or_CC two_CD examples_NNS for_IN each_DT of_IN the_DT 20_CD classes_NNS -LRB-_-LRB- i.e._FW ,_, the_DT authors_NNS -RRB-_-RRB- ._.
This_DT seems_VBZ underconstrained_JJ ,_, especially_RB when_WRB rules_NNS of_IN thumb_NN suggest_VBP that_IN one_NN needs_VBZ ten_CD times_NNS more_JJR examples_NNS than_IN features_NNS =_JJ -_: =[_NN 18_CD -RRB-_-RRB- -_: =_SYM -_: ._.
On_IN the_DT other_JJ hand_NN ,_, it_PRP may_MD also_RB suggest_VB that_IN one_CD simply_RB needs_VBZ to_TO be_VB clever_JJ about_IN what_WP constitutes_VBZ an_DT example_NN ._.
For_IN instance_NN ,_, one_PRP could_MD presumably_RB use_VB functions_NNS as_IN examples_NNS rather_RB than_IN programs_NNS ,_, but_CC fo_FW
ne_NN performed_VBD exceptionally_RB well_RB given_VBN our_PRP$ current_JJ data_NNS collection_NN ._.
That_IN the_DT boosted_VBN classifiers_NNS generally_RB outperformed_VBD single_JJ classifiers_NNS echos_VBZ the_DT conclusion_NN of_IN several_JJ empirical_JJ studies_NNS of_IN boosting_VBG =_JJ -_: =[_NN 4_CD ,_, 6_CD ,_, 9_CD ,_, 14_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT suggest_VBP that_IN boosting_VBG improves_VBZ the_DT performance_NN of_IN unstable_JJ classifiers_NNS ,_, such_JJ as_IN j48_NN ,_, by_IN reducing_VBG their_PRP$ bias_NN and_CC variancesTrue_NN Positive_JJ Rate_NN True_JJ Positive_JJ Rate_NN 1_CD 0.8_CD 0.6_CD 0.4_CD 0.2_CD 0_CD 0_CD 0.2_CD 0.4_CD 0.6_CD
obfuscate_VB their_PRP$ code_NN to_TO produce_VB so-called_JJ polymorphic_JJ viruses_NNS -LRB-_-LRB- 3_CD ,_, p._NN 339_CD -RRB-_-RRB- ._.
Indeed_RB ,_, researchers_NNS have_VBP recently_RB discovered_VBN that_IN simple_JJ obfuscation_NN techniques_NNS foil_VBP commercial_JJ programs_NNS for_IN virus_NN detection_NN =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: ._.
These_DT challenges_NNS have_VBP prompted_VBN some_DT researchers_NNS to_TO investigate_VB learning_VBG methods_NNS for_IN detecting_VBG new_JJ or_CC unknown_JJ viruses_NNS ,_, and_CC more_RBR generally_RB ,_, malicious_JJ code_NN ._.
Our_PRP$ efforts_NNS to_TO address_VB this_DT problem_NN have_VBP res_NNS
