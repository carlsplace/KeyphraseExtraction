Selection_NN ,_, combination_NN ,_, and_CC evaluation_NN of_IN effective_JJ software_NN sensors_NNS for_IN detecting_VBG abnormal_JJ computer_NN usage_NN
We_PRP present_VBP and_CC empirically_RB analyze_VB a_DT machine-learning_JJ approach_NN for_IN detecting_VBG intrusions_NNS on_IN individual_JJ computers_NNS ._.
Our_PRP$ Winnow-based_JJ algorithm_NN continually_RB monitors_VBZ user_NN and_CC system_NN behavior_NN ,_, recording_VBG such_JJ properties_NNS as_IN the_DT number_NN of_IN bytes_NNS transferred_VBN over_IN the_DT last_JJ 10_CD seconds_NNS ,_, the_DT programs_NNS that_WDT currently_RB are_VBP running_VBG ,_, and_CC the_DT load_NN on_IN the_DT CPU_NNP ._.
In_IN all_DT ,_, hundreds_NNS of_IN measurements_NNS are_VBP made_VBN and_CC analyzed_VBN each_DT second_NN ._.
Using_VBG this_DT data_NN ,_, our_PRP$ algorithm_NN creates_VBZ a_DT model_NN that_WDT represents_VBZ each_DT particular_JJ computer_NN 's_POS range_NN of_IN normal_JJ behavior_NN ._.
Parameters_NNS that_WDT determine_VBP when_WRB an_DT alarm_NN should_MD be_VB raised_VBN ,_, due_JJ to_TO abnormal_JJ activity_NN ,_, are_VBP set_VBN on_IN a_DT per-computer_JJ basis_NN ,_, based_VBN on_IN an_DT analysis_NN of_IN training_NN data_NNS ._.
A_DT major_JJ issue_NN in_IN intrusion-detection_JJ systems_NNS is_VBZ the_DT need_NN for_IN very_RB low_JJ false-alarm_JJ rates_NNS ._.
Our_PRP$ empirical_JJ results_NNS suggest_VBP that_IN it_PRP is_VBZ possible_JJ to_TO obtain_VB high_JJ intrusion-detection_JJ rates_NNS -LRB-_-LRB- 95_CD %_NN -RRB-_-RRB- and_CC low_JJ false-alarm_JJ rates_NNS -LRB-_-LRB- less_JJR than_IN one_CD per_IN day_NN per_IN computer_NN -RRB-_-RRB- ,_, without_IN ``_`` stealing_VBG ''_'' too_RB many_JJ CPU_NNP cycles_NNS -LRB-_-LRB- less_JJR than_IN 1_CD %_NN -RRB-_-RRB- ._.
We_PRP also_RB report_VBP which_WDT system_NN measurements_NNS are_VBP the_DT most_RBS valuable_JJ in_IN terms_NNS of_IN detecting_VBG intrusions_NNS ._.
A_DT surprisingly_RB large_JJ number_NN of_IN different_JJ measurements_NNS prove_VBP significantly_RB useful_JJ ._.
of_IN Microsoft_NNP Windows_NNP ._.
In_IN addition_NN ,_, prior_JJ studies_NNS have_VBP not_RB looked_VBN at_IN as_RB large_JJ a_DT collection_NN of_IN system_NN measurements_NNS as_IN we_PRP use_VBP ._.
For_IN example_NN ,_, Warrender_NNP et_FW al._FW -LRB-_-LRB- 13_CD -RRB-_-RRB- ,_, Ghosh_NNP et_FW al._FW -LRB-_-LRB- 4_CD -RRB-_-RRB- ,_, and_CC Lane_NNP and_CC Brodley_NNP =_SYM -_: =[_NN 5_CD -RRB-_-RRB- -_: =_SYM -_: only_RB look_VB at_IN Unix_NNP system_NN calls_VBZ ,_, whereas_IN Lee_NNP et_FW al._FW -LRB-_-LRB- 7_CD -RRB-_-RRB- only_RB look_VBP at_IN audit_NN data_NNS ,_, mainly_RB from_IN the_DT TCP_NNP program_NN ._.
Lazarevic_NNP et_FW al._FW -LRB-_-LRB- 6_CD -RRB-_-RRB- provide_VBP a_DT summary_NN of_IN some_DT of_IN the_DT recent_JJ research_NN on_IN the_DT application_NN o_NN
computers_NNS run_VBP some_DT variant_NN of_IN Microsoft_NNP Windows_NNP ._.
In_IN addition_NN ,_, prior_JJ studies_NNS have_VBP not_RB looked_VBN at_IN as_RB large_JJ a_DT collection_NN of_IN system_NN measurements_NNS as_IN we_PRP use_VBP ._.
For_IN example_NN ,_, Warrender_NNP et_FW al._FW -LRB-_-LRB- 13_CD -RRB-_-RRB- ,_, Ghosh_NNP et_FW al._FW =_SYM -_: =[_NN 4_CD -RRB-_-RRB- -_: =_JJ -_: ,_, and_CC Lane_NNP and_CC Brodley_NNP -LRB-_-LRB- 5_CD -RRB-_-RRB- only_RB look_VB at_IN Unix_NNP system_NN calls_VBZ ,_, whereas_IN Lee_NNP et_FW al._FW -LRB-_-LRB- 7_CD -RRB-_-RRB- only_RB look_VBP at_IN audit_NN data_NNS ,_, mainly_RB from_IN the_DT TCP_NNP program_NN ._.
Lazarevic_NNP et_FW al._FW -LRB-_-LRB- 6_CD -RRB-_-RRB- provide_VBP a_DT summary_NN of_IN some_DT of_IN the_DT recent_JJ res_NNS
or_CC known_JJ attack_NN patterns_NNS or_CC -LRB-_-LRB- b_LS -RRB-_-RRB- be_VB ``_`` adaptive_JJ software_NN ''_'' that_WDT is_VBZ smart_JJ enough_RB to_TO monitor_VB and_CC learn_VB how_WRB the_DT system_NN is_VBZ supposed_VBN to_TO work_VB under_IN normal_JJ operation_NN versus_CC how_WRB it_PRP works_VBZ when_WRB misuse_NN is_VBZ occurring_VBG =_JJ -_: =[_NN 9_CD -RRB-_-RRB- -_: =_SYM -_: ._.
We_PRP address_VBP approach_NN -LRB-_-LRB- b_NN -RRB-_-RRB- in_IN this_DT article_NN ._.
Specifically_RB ,_, we_PRP are_VBP empirically_RB determining_VBG which_WDT sets_NNS of_IN fine-grained_JJ system_NN measurements_NNS are_VBP the_DT most_RBS effective_JJ at_IN distinguishing_VBG usage_NN by_IN the_DT assigned_VBN us_PRP
xample_RB ,_, Warrender_NNP et_FW al._FW -LRB-_-LRB- 13_CD -RRB-_-RRB- ,_, Ghosh_NNP et_FW al._FW -LRB-_-LRB- 4_CD -RRB-_-RRB- ,_, and_CC Lane_NNP and_CC Brodley_NNP -LRB-_-LRB- 5_CD -RRB-_-RRB- only_RB look_VB at_IN Unix_NNP system_NN calls_VBZ ,_, whereas_IN Lee_NNP et_FW al._FW -LRB-_-LRB- 7_CD -RRB-_-RRB- only_RB look_VBP at_IN audit_NN data_NNS ,_, mainly_RB from_IN the_DT TCP_NNP program_NN ._.
Lazarevic_NNP et_FW al._FW =_SYM -_: =[_NN 6_CD -RRB-_-RRB- -_: =_SYM -_: provide_VBP a_DT summary_NN of_IN some_DT of_IN the_DT recent_JJ research_NN on_IN the_DT application_NN of_IN data_NNS mining_NN to_TO network-based_JJ anomaly_NN detection_NN ._.
In_IN Section_NN 2_CD we_PRP describe_VBP the_DT algorithm_NN we_PRP developed_VBD that_DT analyzes_VBZ the_DT Windows_NNP 20_CD
determining_VBG which_WDT sets_NNS of_IN fine-grained_JJ system_NN measurements_NNS are_VBP the_DT most_RBS effective_JJ at_IN distinguishing_VBG usage_NN by_IN the_DT assigned_JJ user_NN of_IN a_DT given_VBN computer_NN from_IN misusage_NN by_IN others_NNS ,_, who_WP may_MD well_RB be_VB ``_`` insiders_NNS ''_'' =_SYM -_: =[_NN 3_CD ;_: 11_CD -RRB-_-RRB- -_: =_SYM -_: within_IN an_DT organization_NN ._.
We_PRP have_VBP created_VBN a_DT prototype_NN anomaly-detection_NN system_NN that_WDT creates_VBZ statistical_JJ profiles_NNS of_IN the_DT normal_JJ usage_NN for_IN a_DT given_VBN computer_NN running_VBG Windows_NNP 2000_CD ._.
Significant_JJ deviations_NNS fr_IN
not_RB looked_VBN at_IN as_RB large_JJ a_DT collection_NN of_IN system_NN measurements_NNS as_IN we_PRP use_VBP ._.
For_IN example_NN ,_, Warrender_NNP et_FW al._FW -LRB-_-LRB- 13_CD -RRB-_-RRB- ,_, Ghosh_NNP et_FW al._FW -LRB-_-LRB- 4_CD -RRB-_-RRB- ,_, and_CC Lane_NNP and_CC Brodley_NNP -LRB-_-LRB- 5_CD -RRB-_-RRB- only_RB look_VB at_IN Unix_NNP system_NN calls_VBZ ,_, whereas_IN Lee_NNP et_FW al._FW =_SYM -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: only_RB look_VB at_IN audit_NN data_NNS ,_, mainly_RB from_IN the_DT TCP_NNP program_NN ._.
Lazarevic_NNP et_FW al._FW -LRB-_-LRB- 6_CD -RRB-_-RRB- provide_VBP a_DT summary_NN of_IN some_DT of_IN the_DT recent_JJ research_NN on_IN the_DT application_NN of_IN data_NNS mining_NN to_TO network-based_JJ anomaly_NN detection_NN ._.
In_IN Se_NN
mising_VBG approach_NN is_VBZ to_TO develop_VB computer_NN algorithms_NNS that_WDT detect_VBP when_WRB someone_NN is_VBZ inappropriately_RB intruding_VBG on_IN the_DT computer_NN of_IN another_DT person_NN ._.
However_RB ,_, intrusion_NN detection_NN is_VBZ a_DT difficult_JJ problem_NN to_TO solve_VB =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_SYM -_: ._.
System_NN performance_NN can_MD not_RB be_VB adversely_RB affected_VBN ,_, false_JJ positives_NNS must_MD be_VB minimized_VBN ,_, and_CC intrusions_NNS must_MD be_VB caught_VBN -LRB-_-LRB- i.e._FW ,_, false_JJ negatives_NNS must_MD be_VB very_RB low_JJ -RRB-_-RRB- ._.
The_DT current_JJ state_NN of_IN the_DT art_NN in_IN intrusion_NN -_:
est_NN weights_NNS following_VBG training_NN -LRB-_-LRB- as_IN we_PRP shall_MD see_VB ,_, when_WRB viewed_VBN across_IN several_JJ users_NNS ,_, a_DT surprisingly_RB high_JJ number_NN of_IN properties_NNS end_VBP up_RP with_IN high_JJ weights_NNS -RRB-_-RRB- ._.
Actually_RB ,_, rather_RB than_IN using_VBG Equation_NN 1_CD ,_, we_PRP found_VBD =_JJ -_: =[_NN 12_CD -RRB-_-RRB- -_: =_JJ -_: it_PRP slightly_RB better_RBR to_TO compare_VB probabilities_NNS relative_JJ to_TO those_DT in_IN general_JJ -LRB-_-LRB- i.e._FW ,_, computed_VBN over_IN all_DT our_PRP$ experimental_JJ subjects_NNS -RRB-_-RRB- and_CC use_NN :_: Prob_NN -LRB-_-LRB- value_NN |_CD user_NN X_NN -RRB-_-RRB- \/_: P_NN -LRB-_-LRB- value_NN |_CD general_JJ public_NN -RRB-_-RRB- -LRB-_-LRB- r_NN -LRB-_-LRB- Eq_NN ._.
2_LS -RRB-_-RRB- An_DT a_DT
ies_NNS periodically_RB ._.
Previous_JJ empirical_JJ studies_NNS have_VBP investigated_VBN the_DT value_NN of_IN creating_VBG intrusion-detection_JJ systems_NNS by_IN monitoring_VBG properties_NNS of_IN computer_NN systems_NNS ,_, an_DT idea_NN that_WDT goes_VBZ back_RB at_IN least_JJS 20_CD years_NNS =_JJ -_: =[_NN 2_CD -RRB-_-RRB- -_: =_SYM -_: ._.
However_RB ,_, prior_JJ work_NN has_VBZ focused_VBN on_IN Unix_NNP systems_NNS ,_, whereas_IN over_IN 90_CD %_NN of_IN the_DT world_NN 's_POS computers_NNS run_VBP some_DT variant_NN of_IN Microsoft_NNP Windows_NNP ._.
In_IN addition_NN ,_, prior_JJ studies_NNS have_VBP not_RB looked_VBN at_IN as_RB large_JJ a_DT collection_NN
rch_NN tasks_NNS ,_, and_CC Section_NN 5_CD concludes_VBZ this_DT article_NN ._.
2_CD ._.
ALGORITHM_NN DEVELOPED_VBN In_IN this_DT section_NN we_PRP describe_VBP the_DT algorithm_NN that_IN we_PRP developed_VBD ._.
Our_PRP$ key_JJ finding_NN is_VBZ that_IN a_DT machine-learning_JJ algorithm_NN called_VBN Winnow_NNP =_SYM -_: =[_NN 8_CD -RRB-_-RRB- -_: =_JJ -_: ,_, a_DT weighted-majority_JJ type_NN of_IN algorithm_NN ,_, works_VBZ very_RB well_RB as_IN the_DT core_NN component_NN of_IN an_DT IDS_NNP ._.
This_DT algorithm_NN operates_VBZ by_IN taking_VBG weighted_JJ votes_NNS from_IN a_DT pool_NN of_IN individual_JJ prediction_NN methods_NNS ,_, continually_RB adj_NN
