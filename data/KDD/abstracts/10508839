Maximum_NNP profit_NN mining_NN and_CC its_PRP$ application_NN in_IN software_NN development_NN
While_IN most_JJS software_NN defects_NNS -LRB-_-LRB- i.e._FW ,_, bugs_NNS -RRB-_-RRB- are_VBP corrected_VBN and_CC tested_VBN as_IN part_NN of_IN the_DT lengthy_JJ software_NN development_NN cycle_NN ,_, enterprise_NN software_NN vendors_NNS often_RB have_VBP to_TO release_VB software_NN products_NNS before_IN all_DT reported_VBN defects_NNS are_VBP corrected_VBN ,_, due_JJ to_TO deadlines_NNS and_CC limited_JJ resources_NNS ._.
A_DT small_JJ number_NN of_IN these_DT defects_NNS will_MD be_VB escalated_VBN by_IN customers_NNS and_CC they_PRP must_MD be_VB resolved_VBN immediately_RB by_IN the_DT software_NN vendors_NNS at_IN a_DT very_RB high_JJ cost_NN ._.
In_IN this_DT paper_NN ,_, we_PRP develop_VBP an_DT Escalation_NN Prediction_NN -LRB-_-LRB- EP_NN -RRB-_-RRB- system_NN that_IN mines_NNS historic_JJ defect_NN report_NN data_NNS and_CC predict_VBP the_DT escalation_NN risk_NN of_IN the_DT defects_NNS for_IN maximum_JJ net_JJ profit_NN ._.
More_RBR specifically_RB ,_, we_PRP first_RB describe_VBP a_DT simple_JJ and_CC general_JJ framework_NN to_TO convert_VB the_DT maximum_JJ net_JJ profit_NN problem_NN to_TO cost-sensitive_JJ learning_NN ._.
We_PRP then_RB apply_VB and_CC compare_VB several_JJ well-known_JJ cost-sensitive_JJ learning_NN approaches_NNS for_IN EP_NN ._.
Our_PRP$ experiments_NNS suggest_VBP that_IN the_DT cost-sensitive_JJ decision_NN tree_NN is_VBZ the_DT best_JJS method_NN for_IN producing_VBG the_DT highest_JJS positive_JJ net_JJ profit_NN and_CC comprehensible_JJ results_NNS ._.
The_DT EP_NN system_NN has_VBZ been_VBN deployed_VBN successfully_RB in_IN the_DT product_NN group_NN of_IN an_DT enterprise_NN software_NN vendor_NN ._.
