Out-of-core_JJ frequent_JJ pattern_NN mining_NN on_IN a_DT commodity_NN PC_NN
In_IN this_DT work_NN we_PRP focus_VBP on_IN the_DT problem_NN of_IN frequent_JJ itemset_JJ mining_NN on_IN large_JJ ,_, out-of-core_JJ data_NNS sets_NNS ._.
After_IN presenting_VBG a_DT characterization_NN of_IN existing_VBG out-of-core_JJ frequent_JJ itemset_NN mining_NN algorithms_NNS and_CC their_PRP$ drawbacks_NNS ,_, we_PRP introduce_VBP our_PRP$ efficient_JJ ,_, highly_RB scalable_JJ solution_NN ._.
Presented_VBN in_IN the_DT context_NN of_IN the_DT FPGrowth_NN algorithm_NN ,_, our_PRP$ technique_NN involves_VBZ several_JJ novel_JJ I\/O-conscious_JJ optimizations_NNS ,_, such_JJ as_IN approximate_JJ hash-based_JJ sorting_NN and_CC blocking_NN ,_, and_CC leverages_VBZ recent_JJ architectural_JJ advancements_NNS in_IN commodity_NN computers_NNS ,_, such_JJ as_IN 64-bit_JJ processing_NN ._.
We_PRP evaluate_VBP the_DT proposed_VBN optimizations_NNS on_IN truly_RB large_JJ data_NNS sets_NNS ,_, up_RB to_TO 75GB_NN ,_, and_CC show_VBP they_PRP yield_VBP greater_JJR than_IN a_DT 400-fold_JJ execution_NN time_NN improvement_NN ._.
Finally_RB ,_, we_PRP discuss_VBP the_DT impact_NN of_IN this_DT research_NN in_IN the_DT context_NN of_IN other_JJ pattern_NN mining_NN challenges_NNS ,_, such_JJ as_IN sequence_NN mining_NN and_CC graph_NN mining_NN ._.
billions_NNS of_IN nodes_NNS ._.
Recent_JJ research_NN has_VBZ shown_VBN that_IN out-of-core_JJ processing_NN techniques_NNS ,_, which_WDT make_VBP use_NN of_IN disk-resident_JJ data_NNS structures_NNS ,_, can_MD handle_VB such_JJ large_JJ datasets_NNS in_IN principle_NN ._.
For_IN example_NN ,_, Buehrer_NN =_JJ -_: =[_NN 6_CD -RRB-_-RRB- -_: =_SYM -_: proposes_VBZ an_DT approach_NN that_WDT uses_VBZ approximate_JJ hash_JJ sorting_NN to_TO initially_RB partition_NN the_DT database_NN ,_, and_CC builds_VBZ the_DT complete_JJ FPtree_NN piece_NN by_IN piece_NN from_IN these_DT partitions_NNS ._.
However_RB ,_, due_JJ to_TO expensive_JJ disk_NN access_NN
hm_NN designers_NNS research_VBP effective_JJ strategies_NNS to_TO incorporate_VB task_NN parallelism_NN and_CC efficient_JJ memory_NN system_NN usage_NN to_TO ensure_VB that_IN application_NN performance_NN is_VBZ commensurate_JJ with_IN such_JJ architectural_JJ advancements_NNS =_JJ -_: =[_NN 3,4,6_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Graph_NNP Mining_NNP :_: Finding_VBG frequent_JJ patterns_NNS in_IN graph_NN databases_NNS such_JJ as_IN chemical_NN and_CC biological_JJ data_NNS ,_, XML_NN documents_NNS ,_, web_NN link_NN data_NNS ,_, financial_JJ transaction_NN data_NNS ,_, social_JJ network_NN data_NNS ,_, and_CC other_JJ areas_NNS has_VBZ po_FW
ly_RB ._.
In_IN particular_JJ ,_, our_PRP$ solution_NN relies_VBZ on_IN an_DT algorithmic_JJ design_NN strategy_NN that_WDT is_VBZ cache_NN -_: ,_, memory_NN -_: ,_, disk_NN -_: and_CC network_NN -_: conscious_JJ ,_, embodying_VBG the_DT comprehensive_JJ notion_NN of_IN architecture-conscious_JJ data_NNS mining_NN =_JJ -_: =[_NN 6_CD ,_, 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Our_PRP$ solution_NN is_VBZ placed_VBN in_IN the_DT context_NN of_IN a_DT cache_NN -_: and_CC I\/O-conscious_JJ frequent_JJ pattern_NN mining_NN algorithm_NN recently_RB developed_VBD ,_, which_WDT has_VBZ been_VBN shown_VBN to_TO be_VB be_VB efficient_JJ on_IN large_JJ data_NNS sets_NNS ._.
A_DT highlight_NN of_IN o_NN
n_NN memory_NN ._.
We_PRP are_VBP currently_RB exploring_VBG more_RBR sophisticated_JJ out-of-core_JJ algorithms_NNS that_IN leverage_NN hash-based_JJ data_NNS placement_NN ,_, in_IN a_DT manner_NN similar_JJ to_TO our_PRP$ previous_JJ work_NN on_IN out-of-core_JJ frequent_JJ pattern_NN mining_NN =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Parallel_JJ algorithms_NNS and_CC scheduling_NN service_NN :_: With_IN regards_VBZ totask_NN scheduling_NN ,_, algorithms_NNS that_WDT can_MD adapt_VB and_CC mold_NN are_VBP essential_JJ to_TO achieve_VB performance_NN commensurate_JJ with_IN the_DT number_NN of_IN cores_NNS in_IN emerging_VBG
