Overcoming rational manipulation in mechanism implementation Previous work in computational mechanism design has largely focused on the problem of revelation of private information by selfinterested agents. In contrast, this work addresses the rational manipulation that can occur when mechanisms are implemented by the agents themselves. We are interested in distributed implementations, when agents may selfishly deviate from algorithms imposed by a mechanism designer and damage the performance of the overall system. We define two properties for non-manipulable mechanism implementations, communication- and algorithm compatibility and identify techniques that can be used to achieve these properties. A proof technique is introduced to show how a distributed mechanism implementation can be proven to be an ex post Nash equilibrium, inclusive of the private information revelation and mechanism actions within an agentâ€™s strategy space. We focus in particular on the lowest cost interdomain routing problem proposed by Feigenbaum, Papadimitriou, Sami, and Shenker (FPSS) [5]. Our approach relies primarily on problem partitioning and redundancy and does not add significant new processing or communication overhead to the distributed FPSS algorithm. 1.
